name: cd-dgraph
on: workflow_dispatch
jobs:
  dgraph-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dgraph Repository
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: make dependency
      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Check protobuf
        run: |
          cd ./protos
          go mod tidy
          make regenerate
          git diff --exit-code -- .
      - name: Set Dgraph Release Version
        run: |
          #!/bin/bash
          DGRAPH_RELEASE_VERSION=22.0.0
          echo "DGRAPH_RELEASE_VERSION=$DGRAPH_RELEASE_VERSION" >> $GITHUB_ENV
      - name: Make Linux Build
        run: make dgraph DGRAPH_RELASE_VERSION=${{ env.DGRAPH_RELEASE_VERSION }}
      - name: Make Dgraph Docker Image
        run: |
        make docker-image DOCKER_TAG="latest"
        make docker-image DOCKER_TAG=${{ env.DGRAPH_RELEASE_VERSION }}
      - name: Make Dgraph Standalone Docker Image with Version
        run: |
        make standalone-docker-image DOCKER_TAG="latest"
        make standalone-docker-image DOCKER_TAG=${{ env.DGRAPH_RELEASE_VERSION }}
      - name: Push Images to DockerHub
        run: |
          docker login --username=$DOCKERHUB_USER_TEST --password=$DOCKERHUB_PASSWORD_TOKEN_TEST
          docker push dgraph/standalone:latest
          docker push dgraph/standalone:${{ env.DGRAPH_RELEASE_VERSION }}
          docker push dgraph/dgraph:latest
          docker push dgraph/dgraph:${{ env.DGRAPH_RELEASE_VERSION }}
