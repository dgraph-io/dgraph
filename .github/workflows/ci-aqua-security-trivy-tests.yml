name: ci-aqua-security-trivy-tests
on:
  push:
    paths-ignore:
      - '.vscode/CODEOWNERS'
      - '.vscode/*.json'
      - 'compose/**'
      - 'contrib/**'
      - 'dgraphtest/**'
      - 'licenses/**'
      - 'paper/**'
      - 'RFC/**'
      - 'static/**'
      - 't/**'
      - 'telemetry/**'
      - 'wiki/**'
      - '**.dockerignore'
      - '**.gitignore'
      - '**/**.md'
      - '**/**.png'
      - '**/**.sh'
      - '**/**.gif'
      - '**/**.ini'
    branches:
      - main
      - 'release/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main
      - 'release/**'
  schedule:
    - cron: "0 * * * *"
jobs:
  build:
    name: trivy-tests
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Build Docker image
        run: |
          make docker-image
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dgraph/dgraph:local'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
