name: ci-dgraph-code-coverage

on:
  push:
    paths:
      - "**/*.go"
      - "**/go.mod"
    branches:
      - main
      - release/**

permissions:
  contents: read

jobs:
  dgraph-code-coverage:
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: actions/checkout@v4 # defaults to SHA of event that triggered workflow
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Make Linux Build and Docker Image with coverage enabled
        run: make coverage-docker-image
      - name: Build Test Binary
        run: |
          #!/bin/bash
          # build the test binary
          cd t; go build .
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest
      - name: Clean Up Environment
        run: |
          #!/bin/bash
          # clean cache
          go clean -testcache
          # clean up docker containers before test execution
          cd t; ./t -r
      - name: Run Unit Tests
        run: |
          #!/bin/bash
          # go env settings
          export GOPATH=~/go
          # move the binary
          cp dgraph/dgraph ~/go/bin/dgraph
          # run the tests
          cd t; ./t --coverage=true --suite=unit,ldbc
          # clean up docker containers after test execution
          ./t -r
          # sleep
          sleep 5
      - name: Install Goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send Coverage Results
        run:
          cd t && goveralls -repotoken ${{ secrets.COVERALLSIO_TOKEN }} -coverprofile=coverage.out
