name: ci-dgraph-core-tests
on:
  pull_request:
    paths:
      - '**/*.go'
      - '**/go.mod'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main
      - 'release/**'
  schedule:
    - cron: "0 0 * * *" # 1 run per day
jobs:
  dgraph-core-tests:
    if: github.event.pull_request.draft == false
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Install protobuf-compiler
        run: sudo apt update && sudo apt install -y protobuf-compiler
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest
      - name: Check protobuf
        run: |
          cd ./protos
          go mod tidy
          make regenerate
          git diff --exit-code -- .
      - name: Make Linux Build and Docker Image
        run: make docker-image
      - name: Build Test Binary
        run: |
          #!/bin/bash
          # build the test binary
          cd t; go build .
      - name: Clean Up Environment
        run: |
          #!/bin/bash
          # clean cache
          go clean -testcache
          # clean up docker containers before test execution
          cd t; ./t -r
      - name: Run Core Tests
        run: |
          #!/bin/bash
          # go env settings
          export GOPATH=~/go
          # move the binary
          cp dgraph/dgraph ~/go/bin/dgraph
          # run the unit and core tests
          cd t; ./t --suite=core
          # clean up docker containers after test execution
          ./t -r
          # sleep
          sleep 5
      - name: Upload Test Results
        if: always() # Upload the results even if the tests fail
        continue-on-error: true # don't fail this job if the upload fails
        uses: trunk-io/analytics-uploader@main
        with:
          junit-paths: "./test-results.xml"        
          org-slug: hypermode
          token: ${{ secrets.TRUNK_TOKEN }}
