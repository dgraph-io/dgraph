name: ci-dgraph-ldbc-tests
on:
  pull_request:
    paths-ignore:
      - '.github/CODEOWNERS'
      - '.vscode/**'
      - 'compose/**'
      - 'contrib/systemd/**'
      - 'licenses/**'
      - 'paper/**'
      - 'present/**'
      - 'RFC/**'
      - 'static/**'
      - 'wiki/**'
      - '**/**.dockerignore'
      - '**/**.gitignore'
      - '**/**.md'
      - '**/**.png'
      - '**/**.jpg'
      - '**/**.gif'
      - '**/**.ini'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main
      - 'release/**'
jobs:
  dgraph-ldbc-tests:
    if: github.event.pull_request.draft == false
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - name: Checkout Dgraph
        uses: actions/checkout@v4
      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Install protobuf-compiler
        run: sudo apt-get install -y protobuf-compiler
      - name: Check protobuf
        run: |
          cd ./protos
          go mod tidy
          make regenerate
          git diff --exit-code -- .
      - name: Make Linux Build and Docker Image
        run: make docker-image
      - name: Build Test Binary
        run : |
          #!/bin/bash
          # build the test binary
          cd t; go build .
      - name: Clean Up Environment
        run: |
          #!/bin/bash
          # clean cache
          go clean -testcache
          # clean up docker containers before test execution
          cd t; ./t -r
      - name: Run LDBC Tests
        run: |
          #!/bin/bash
          # go env settings
          export GOPATH=~/go
          # move the binary
          cp dgraph/dgraph ~/go/bin/dgraph
          # run the ldbc tests
          cd t; ./t --suite=ldbc
          # clean up docker containers after test execution
          ./t -r
