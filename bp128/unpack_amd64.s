// Generated by PeachPy 0.2.0 from unpack.py


// func unpack32_1(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_1(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $1, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $1, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $2, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $3, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLL $4, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $5, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLL $6, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLL $7, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLL $8, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLL $9, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLL $10, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLL $11, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLL $12, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLL $13, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLL $14, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLL $15, X2
	PAND X0, X2
	MOVO X2, 240(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLL $16, X3
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLL $17, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLL $18, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLL $19, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLL $20, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLL $21, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLL $22, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLL $23, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLL $24, X11
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLL $25, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLL $26, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLL $27, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PSRLL $28, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLL $29, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLL $30, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLL $31, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_2(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_2(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $3, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $2, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $4, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $6, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLL $8, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $10, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLL $12, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLL $14, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLL $16, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLL $18, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLL $20, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLL $22, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLL $24, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLL $26, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLL $28, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLL $30, X2
	MOVO X2, 240(BX)
	MOVO 16(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLL $2, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLL $4, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLL $6, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLL $8, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLL $10, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLL $12, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLL $14, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLL $16, X11
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLL $18, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLL $20, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLL $22, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PSRLL $24, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLL $26, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLL $28, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLL $30, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_3(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_3(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $7, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $3, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $6, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $9, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLL $12, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $15, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLL $18, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLL $21, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLL $24, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLL $27, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLL $30, X12
	MOVO 16(AX), X13
	MOVO X13, X14
	PSLLL $2, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 160(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLL $1, X14
	PAND X0, X14
	MOVO X14, 176(BX)
	PSRLL $4, X15
	PAND X0, X15
	MOVO X15, 192(BX)
	PSRLL $7, X1
	PAND X0, X1
	MOVO X1, 208(BX)
	PSRLL $10, X2
	PAND X0, X2
	MOVO X2, 224(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLL $13, X3
	PAND X0, X3
	MOVO X3, 240(BX)
	PSRLL $16, X4
	PAND X0, X4
	MOVO X4, 256(BX)
	PSRLL $19, X5
	PAND X0, X5
	MOVO X5, 272(BX)
	PSRLL $22, X6
	PAND X0, X6
	MOVO X6, 288(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLL $25, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	PSRLL $28, X8
	PAND X0, X8
	MOVO X8, 320(BX)
	PSRLL $31, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLL $1, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 336(BX)
	MOVO X11, X13
	MOVO X11, X12
	MOVO X11, X14
	MOVO X11, X15
	PSRLL $2, X11
	PAND X0, X11
	MOVO X11, 352(BX)
	PSRLL $5, X13
	PAND X0, X13
	MOVO X13, 368(BX)
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLL $11, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLL $14, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLL $17, X1
	PAND X0, X1
	MOVO X1, 432(BX)
	PSRLL $20, X2
	PAND X0, X2
	MOVO X2, 448(BX)
	PSRLL $23, X3
	PAND X0, X3
	MOVO X3, 464(BX)
	MOVO X4, X5
	PSRLL $26, X4
	PAND X0, X4
	MOVO X4, 480(BX)
	PSRLL $29, X5
	MOVO X5, 496(BX)
	RET

// func unpack32_4(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_4(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $15, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $4, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $8, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $12, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PSRLL $16, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $20, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLL $24, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLL $28, X9
	MOVO X9, 112(BX)
	MOVO 16(AX), X10
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLL $4, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLL $12, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLL $16, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLL $20, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLL $24, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLL $28, X2
	MOVO X2, 240(BX)
	MOVO 32(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLL $4, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLL $8, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLL $12, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLL $16, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLL $20, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLL $24, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLL $28, X10
	MOVO X10, 368(BX)
	MOVO 48(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLL $4, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLL $8, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLL $12, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PSRLL $16, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLL $20, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLL $24, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLL $28, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_5(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_5(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $31, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $5, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $10, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $15, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLL $20, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $25, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLL $30, X8
	MOVO 16(AX), X9
	MOVO X9, X10
	PSLLL $2, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 96(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLL $3, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLL $8, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLL $13, X12
	PAND X0, X12
	MOVO X12, 144(BX)
	PSRLL $18, X13
	PAND X0, X13
	MOVO X13, 160(BX)
	MOVO X14, X15
	PSRLL $23, X14
	PAND X0, X14
	MOVO X14, 176(BX)
	PSRLL $28, X15
	MOVO 32(AX), X1
	MOVO X1, X2
	PSLLL $4, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 192(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLL $1, X2
	PAND X0, X2
	MOVO X2, 208(BX)
	PSRLL $6, X3
	PAND X0, X3
	MOVO X3, 224(BX)
	PSRLL $11, X4
	PAND X0, X4
	MOVO X4, 240(BX)
	PSRLL $16, X5
	PAND X0, X5
	MOVO X5, 256(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLL $21, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLL $26, X7
	PAND X0, X7
	MOVO X7, 288(BX)
	PSRLL $31, X9
	MOVO 48(AX), X8
	MOVO X8, X10
	PSLLL $1, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 304(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLL $4, X10
	PAND X0, X10
	MOVO X10, 320(BX)
	PSRLL $9, X11
	PAND X0, X11
	MOVO X11, 336(BX)
	PSRLL $14, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLL $19, X13
	PAND X0, X13
	MOVO X13, 368(BX)
	MOVO X14, X1
	PSRLL $24, X14
	PAND X0, X14
	MOVO X14, 384(BX)
	PSRLL $29, X1
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLL $3, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 400(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLL $2, X2
	PAND X0, X2
	MOVO X2, 416(BX)
	PSRLL $7, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	PSRLL $12, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLL $17, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	MOVO X6, X7
	PSRLL $22, X6
	PAND X0, X6
	MOVO X6, 480(BX)
	PSRLL $27, X7
	MOVO X7, 496(BX)
	RET

// func unpack32_6(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_6(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $63, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $6, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $12, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $18, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	PSRLL $24, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $30, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLL $2, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 80(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLL $4, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLL $10, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLL $16, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLL $22, X12
	PAND X0, X12
	MOVO X12, 144(BX)
	PSRLL $28, X13
	MOVO 32(AX), X14
	MOVO X14, X15
	PSLLL $4, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 160(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLL $2, X15
	PAND X0, X15
	MOVO X15, 176(BX)
	PSRLL $8, X1
	PAND X0, X1
	MOVO X1, 192(BX)
	PSRLL $14, X2
	PAND X0, X2
	MOVO X2, 208(BX)
	PSRLL $20, X3
	PAND X0, X3
	MOVO X3, 224(BX)
	PSRLL $26, X4
	MOVO X4, 240(BX)
	MOVO 48(AX), X5
	MOVO X5, X6
	MOVO X5, X8
	MOVO X5, X7
	MOVO X5, X9
	PAND X0, X5
	MOVO X5, 256(BX)
	PSRLL $6, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLL $12, X8
	PAND X0, X8
	MOVO X8, 288(BX)
	PSRLL $18, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	MOVO X9, X10
	PSRLL $24, X9
	PAND X0, X9
	MOVO X9, 320(BX)
	PSRLL $30, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $2, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 336(BX)
	MOVO X12, X14
	MOVO X12, X13
	MOVO X12, X15
	MOVO X12, X1
	PSRLL $4, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLL $10, X14
	PAND X0, X14
	MOVO X14, 368(BX)
	PSRLL $16, X13
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLL $22, X15
	PAND X0, X15
	MOVO X15, 400(BX)
	PSRLL $28, X1
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLL $4, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 416(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X8
	PSRLL $2, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	PSRLL $8, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLL $14, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLL $20, X6
	PAND X0, X6
	MOVO X6, 480(BX)
	PSRLL $26, X8
	MOVO X8, 496(BX)
	RET

// func unpack32_7(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_7(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $127, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $7, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $14, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $21, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	PSRLL $28, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLL $4, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 64(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLL $3, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLL $10, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLL $17, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLL $24, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLL $31, X12
	MOVO 32(AX), X13
	MOVO X13, X14
	PSLLL $1, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 144(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLL $6, X14
	PAND X0, X14
	MOVO X14, 160(BX)
	PSRLL $13, X15
	PAND X0, X15
	MOVO X15, 176(BX)
	PSRLL $20, X1
	PAND X0, X1
	MOVO X1, 192(BX)
	PSRLL $27, X2
	MOVO 48(AX), X3
	MOVO X3, X4
	PSLLL $5, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 208(BX)
	MOVO X4, X5
	MOVO X4, X7
	MOVO X4, X6
	MOVO X4, X8
	PSRLL $2, X4
	PAND X0, X4
	MOVO X4, 224(BX)
	PSRLL $9, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLL $16, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLL $23, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLL $30, X8
	MOVO 64(AX), X9
	MOVO X9, X10
	PSLLL $2, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 288(BX)
	MOVO X10, X11
	MOVO X10, X13
	MOVO X10, X12
	PSRLL $5, X10
	PAND X0, X10
	MOVO X10, 304(BX)
	PSRLL $12, X11
	PAND X0, X11
	MOVO X11, 320(BX)
	PSRLL $19, X13
	PAND X0, X13
	MOVO X13, 336(BX)
	PSRLL $26, X12
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLL $6, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 352(BX)
	MOVO X15, X1
	MOVO X15, X3
	MOVO X15, X2
	MOVO X15, X4
	PSRLL $1, X15
	PAND X0, X15
	MOVO X15, 368(BX)
	PSRLL $8, X1
	PAND X0, X1
	MOVO X1, 384(BX)
	PSRLL $15, X3
	PAND X0, X3
	MOVO X3, 400(BX)
	PSRLL $22, X2
	PAND X0, X2
	MOVO X2, 416(BX)
	PSRLL $29, X4
	MOVO 96(AX), X5
	MOVO X5, X7
	PSLLL $3, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 432(BX)
	MOVO X7, X6
	MOVO X7, X9
	MOVO X7, X8
	PSRLL $4, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLL $11, X6
	PAND X0, X6
	MOVO X6, 464(BX)
	PSRLL $18, X9
	PAND X0, X9
	MOVO X9, 480(BX)
	PSRLL $25, X8
	MOVO X8, 496(BX)
	RET

// func unpack32_8(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_8(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $255, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $8, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $16, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $24, X5
	MOVO X5, 48(BX)
	MOVO 16(AX), X6
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $8, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLL $16, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLL $24, X9
	MOVO X9, 112(BX)
	MOVO 32(AX), X10
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLL $8, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLL $16, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLL $24, X13
	MOVO X13, 176(BX)
	MOVO 48(AX), X14
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLL $8, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLL $16, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLL $24, X2
	MOVO X2, 240(BX)
	MOVO 64(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLL $8, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLL $16, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLL $24, X6
	MOVO X6, 304(BX)
	MOVO 80(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLL $8, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLL $16, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLL $24, X10
	MOVO X10, 368(BX)
	MOVO 96(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLL $16, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLL $24, X14
	MOVO X14, 432(BX)
	MOVO 112(AX), X15
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLL $8, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLL $16, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLL $24, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_9(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_9(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $511, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $9, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $18, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $27, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $5, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLL $4, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLL $13, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLL $22, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLL $31, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLL $1, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 112(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLL $17, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLL $26, X14
	MOVO 48(AX), X15
	MOVO X15, X1
	PSLLL $6, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 160(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	PSRLL $3, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLL $12, X2
	PAND X0, X2
	MOVO X2, 192(BX)
	PSRLL $21, X3
	PAND X0, X3
	MOVO X3, 208(BX)
	PSRLL $30, X4
	MOVO 64(AX), X6
	MOVO X6, X5
	PSLLL $2, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 224(BX)
	MOVO X5, X7
	MOVO X5, X8
	PSRLL $7, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLL $16, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLL $25, X8
	MOVO 80(AX), X9
	MOVO X9, X11
	PSLLL $7, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 272(BX)
	MOVO X11, X10
	MOVO X11, X12
	MOVO X11, X13
	PSRLL $2, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLL $11, X10
	PAND X0, X10
	MOVO X10, 304(BX)
	PSRLL $20, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLL $29, X13
	MOVO 96(AX), X15
	MOVO X15, X14
	PSLLL $3, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 336(BX)
	MOVO X14, X1
	MOVO X14, X2
	PSRLL $6, X14
	PAND X0, X14
	MOVO X14, 352(BX)
	PSRLL $15, X1
	PAND X0, X1
	MOVO X1, 368(BX)
	PSRLL $24, X2
	MOVO 112(AX), X3
	MOVO X3, X6
	PSLLL $8, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 384(BX)
	MOVO X6, X4
	MOVO X6, X5
	MOVO X6, X7
	PSRLL $1, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLL $10, X4
	PAND X0, X4
	MOVO X4, 416(BX)
	PSRLL $19, X5
	PAND X0, X5
	MOVO X5, 432(BX)
	PSRLL $28, X7
	MOVO 128(AX), X9
	MOVO X9, X8
	PSLLL $4, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 448(BX)
	MOVO X8, X11
	MOVO X8, X10
	PSRLL $5, X8
	PAND X0, X8
	MOVO X8, 464(BX)
	PSRLL $14, X11
	PAND X0, X11
	MOVO X11, 480(BX)
	PSRLL $23, X10
	MOVO X10, 496(BX)
	RET

// func unpack32_10(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_10(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $1023, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $10, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $20, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $30, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $2, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLL $8, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLL $18, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLL $28, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLL $4, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 96(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLL $6, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLL $16, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLL $26, X13
	MOVO 48(AX), X14
	MOVO X14, X15
	PSLLL $6, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 144(BX)
	MOVO X15, X1
	MOVO X15, X2
	PSRLL $4, X15
	PAND X0, X15
	MOVO X15, 160(BX)
	PSRLL $14, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLL $24, X2
	MOVO 64(AX), X3
	MOVO X3, X4
	PSLLL $8, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 192(BX)
	MOVO X4, X6
	MOVO X4, X5
	PSRLL $2, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLL $12, X6
	PAND X0, X6
	MOVO X6, 224(BX)
	PSRLL $22, X5
	MOVO X5, 240(BX)
	MOVO 80(AX), X7
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X9
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLL $10, X8
	PAND X0, X8
	MOVO X8, 272(BX)
	PSRLL $20, X10
	PAND X0, X10
	MOVO X10, 288(BX)
	PSRLL $30, X9
	MOVO 96(AX), X11
	MOVO X11, X12
	PSLLL $2, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 304(BX)
	MOVO X12, X14
	MOVO X12, X13
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLL $18, X14
	PAND X0, X14
	MOVO X14, 336(BX)
	PSRLL $28, X13
	MOVO 112(AX), X15
	MOVO X15, X1
	PSLLL $4, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 352(BX)
	MOVO X1, X3
	MOVO X1, X2
	PSRLL $6, X1
	PAND X0, X1
	MOVO X1, 368(BX)
	PSRLL $16, X3
	PAND X0, X3
	MOVO X3, 384(BX)
	PSRLL $26, X2
	MOVO 128(AX), X4
	MOVO X4, X6
	PSLLL $6, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 400(BX)
	MOVO X6, X5
	MOVO X6, X7
	PSRLL $4, X6
	PAND X0, X6
	MOVO X6, 416(BX)
	PSRLL $14, X5
	PAND X0, X5
	MOVO X5, 432(BX)
	PSRLL $24, X7
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLL $8, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 448(BX)
	MOVO X10, X11
	MOVO X10, X9
	PSRLL $2, X10
	PAND X0, X10
	MOVO X10, 464(BX)
	PSRLL $12, X11
	PAND X0, X11
	MOVO X11, 480(BX)
	PSRLL $22, X9
	MOVO X9, 496(BX)
	RET

// func unpack32_11(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_11(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $2047, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $11, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $22, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $10, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLL $1, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLL $12, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLL $23, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLL $9, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 80(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLL $2, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLL $13, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLL $24, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLL $8, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 128(BX)
	MOVO X14, X15
	MOVO X14, X1
	PSRLL $3, X14
	PAND X0, X14
	MOVO X14, 144(BX)
	PSRLL $14, X15
	PAND X0, X15
	MOVO X15, 160(BX)
	PSRLL $25, X1
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLL $7, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 176(BX)
	MOVO X3, X5
	MOVO X3, X4
	PSRLL $4, X3
	PAND X0, X3
	MOVO X3, 192(BX)
	PSRLL $15, X5
	PAND X0, X5
	MOVO X5, 208(BX)
	PSRLL $26, X4
	MOVO 80(AX), X6
	MOVO X6, X7
	PSLLL $6, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 224(BX)
	MOVO X7, X9
	MOVO X7, X8
	PSRLL $5, X7
	PAND X0, X7
	MOVO X7, 240(BX)
	PSRLL $16, X9
	PAND X0, X9
	MOVO X9, 256(BX)
	PSRLL $27, X8
	MOVO 96(AX), X10
	MOVO X10, X11
	PSLLL $5, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 272(BX)
	MOVO X11, X13
	MOVO X11, X12
	PSRLL $6, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLL $17, X13
	PAND X0, X13
	MOVO X13, 304(BX)
	PSRLL $28, X12
	MOVO 112(AX), X14
	MOVO X14, X15
	PSLLL $4, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 320(BX)
	MOVO X15, X2
	MOVO X15, X1
	PSRLL $7, X15
	PAND X0, X15
	MOVO X15, 336(BX)
	PSRLL $18, X2
	PAND X0, X2
	MOVO X2, 352(BX)
	PSRLL $29, X1
	MOVO 128(AX), X3
	MOVO X3, X5
	PSLLL $3, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 368(BX)
	MOVO X5, X6
	MOVO X5, X4
	PSRLL $8, X5
	PAND X0, X5
	MOVO X5, 384(BX)
	PSRLL $19, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLL $30, X4
	MOVO 144(AX), X7
	MOVO X7, X9
	PSLLL $2, X7
	PAND X0, X7
	POR X7, X4
	MOVO X4, 416(BX)
	MOVO X9, X10
	MOVO X9, X8
	PSRLL $9, X9
	PAND X0, X9
	MOVO X9, 432(BX)
	PSRLL $20, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLL $31, X8
	MOVO 160(AX), X11
	MOVO X11, X13
	PSLLL $1, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 464(BX)
	MOVO X13, X14
	PSRLL $10, X13
	PAND X0, X13
	MOVO X13, 480(BX)
	PSRLL $21, X14
	MOVO X14, 496(BX)
	RET

// func unpack32_12(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_12(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $4095, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $12, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $24, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $8, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLL $4, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLL $16, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLL $28, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLL $4, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 80(BX)
	MOVO X10, X11
	PSRLL $8, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLL $20, X11
	MOVO X11, 112(BX)
	MOVO 48(AX), X12
	MOVO X12, X13
	MOVO X12, X14
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLL $12, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLL $24, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLL $8, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 160(BX)
	MOVO X1, X2
	MOVO X1, X3
	PSRLL $4, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLL $16, X2
	PAND X0, X2
	MOVO X2, 192(BX)
	PSRLL $28, X3
	MOVO 80(AX), X5
	MOVO X5, X4
	PSLLL $4, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 208(BX)
	MOVO X4, X6
	PSRLL $8, X4
	PAND X0, X4
	MOVO X4, 224(BX)
	PSRLL $20, X6
	MOVO X6, 240(BX)
	MOVO 96(AX), X7
	MOVO X7, X9
	MOVO X7, X8
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLL $12, X9
	PAND X0, X9
	MOVO X9, 272(BX)
	PSRLL $24, X8
	MOVO 112(AX), X10
	MOVO X10, X11
	PSLLL $8, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 288(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLL $4, X11
	PAND X0, X11
	MOVO X11, 304(BX)
	PSRLL $16, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLL $28, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLL $4, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 336(BX)
	MOVO X14, X1
	PSRLL $8, X14
	PAND X0, X14
	MOVO X14, 352(BX)
	PSRLL $20, X1
	MOVO X1, 368(BX)
	MOVO 144(AX), X2
	MOVO X2, X5
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 384(BX)
	PSRLL $12, X5
	PAND X0, X5
	MOVO X5, 400(BX)
	PSRLL $24, X3
	MOVO 160(AX), X4
	MOVO X4, X6
	PSLLL $8, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 416(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLL $4, X6
	PAND X0, X6
	MOVO X6, 432(BX)
	PSRLL $16, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLL $28, X9
	MOVO 176(AX), X10
	MOVO X10, X8
	PSLLL $4, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 464(BX)
	MOVO X8, X11
	PSRLL $8, X8
	PAND X0, X8
	MOVO X8, 480(BX)
	PSRLL $20, X11
	MOVO X11, 496(BX)
	RET

// func unpack32_13(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_13(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $8191, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $13, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $26, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $6, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLL $7, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLL $20, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $12, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	PSRLL $1, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLL $14, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLL $27, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLL $5, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 112(BX)
	MOVO X13, X14
	PSRLL $8, X13
	PAND X0, X13
	MOVO X13, 128(BX)
	PSRLL $21, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLL $11, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 144(BX)
	MOVO X1, X2
	MOVO X1, X3
	PSRLL $2, X1
	PAND X0, X1
	MOVO X1, 160(BX)
	PSRLL $15, X2
	PAND X0, X2
	MOVO X2, 176(BX)
	PSRLL $28, X3
	MOVO 80(AX), X5
	MOVO X5, X4
	PSLLL $4, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 192(BX)
	MOVO X4, X6
	PSRLL $9, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLL $22, X6
	MOVO 96(AX), X8
	MOVO X8, X7
	PSLLL $10, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 224(BX)
	MOVO X7, X9
	MOVO X7, X10
	PSRLL $3, X7
	PAND X0, X7
	MOVO X7, 240(BX)
	PSRLL $16, X9
	PAND X0, X9
	MOVO X9, 256(BX)
	PSRLL $29, X10
	MOVO 112(AX), X12
	MOVO X12, X11
	PSLLL $3, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 272(BX)
	MOVO X11, X13
	PSRLL $10, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLL $23, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLL $9, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 304(BX)
	MOVO X14, X1
	MOVO X14, X2
	PSRLL $4, X14
	PAND X0, X14
	MOVO X14, 320(BX)
	PSRLL $17, X1
	PAND X0, X1
	MOVO X1, 336(BX)
	PSRLL $30, X2
	MOVO 144(AX), X5
	MOVO X5, X3
	PSLLL $2, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 352(BX)
	MOVO X3, X4
	PSRLL $11, X3
	PAND X0, X3
	MOVO X3, 368(BX)
	PSRLL $24, X4
	MOVO 160(AX), X8
	MOVO X8, X6
	PSLLL $8, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 384(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLL $5, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLL $18, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLL $31, X9
	MOVO 176(AX), X12
	MOVO X12, X10
	PSLLL $1, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 432(BX)
	MOVO X10, X11
	PSRLL $12, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLL $25, X11
	MOVO 192(AX), X15
	MOVO X15, X13
	PSLLL $7, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 464(BX)
	MOVO X13, X14
	PSRLL $6, X13
	PAND X0, X13
	MOVO X13, 480(BX)
	PSRLL $19, X14
	MOVO X14, 496(BX)
	RET

// func unpack32_14(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_14(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $16383, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $14, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $28, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $4, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLL $10, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLL $24, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $8, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	PSRLL $6, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLL $20, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLL $12, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 96(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLL $2, X12
	PAND X0, X12
	MOVO X12, 112(BX)
	PSRLL $16, X13
	PAND X0, X13
	MOVO X13, 128(BX)
	PSRLL $30, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLL $2, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 144(BX)
	MOVO X1, X2
	PSRLL $12, X1
	PAND X0, X1
	MOVO X1, 160(BX)
	PSRLL $26, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLL $6, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 176(BX)
	MOVO X5, X4
	PSRLL $8, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLL $22, X4
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLL $10, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 208(BX)
	MOVO X8, X7
	PSRLL $4, X8
	PAND X0, X8
	MOVO X8, 224(BX)
	PSRLL $18, X7
	MOVO X7, 240(BX)
	MOVO 112(AX), X9
	MOVO X9, X11
	MOVO X9, X10
	PAND X0, X9
	MOVO X9, 256(BX)
	PSRLL $14, X11
	PAND X0, X11
	MOVO X11, 272(BX)
	PSRLL $28, X10
	MOVO 128(AX), X12
	MOVO X12, X13
	PSLLL $4, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 288(BX)
	MOVO X13, X15
	PSRLL $10, X13
	PAND X0, X13
	MOVO X13, 304(BX)
	PSRLL $24, X15
	MOVO 144(AX), X14
	MOVO X14, X1
	PSLLL $8, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 320(BX)
	MOVO X1, X3
	PSRLL $6, X1
	PAND X0, X1
	MOVO X1, 336(BX)
	PSRLL $20, X3
	MOVO 160(AX), X2
	MOVO X2, X5
	PSLLL $12, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 352(BX)
	MOVO X5, X6
	MOVO X5, X4
	PSRLL $2, X5
	PAND X0, X5
	MOVO X5, 368(BX)
	PSRLL $16, X6
	PAND X0, X6
	MOVO X6, 384(BX)
	PSRLL $30, X4
	MOVO 176(AX), X8
	MOVO X8, X7
	PSLLL $2, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 400(BX)
	MOVO X7, X9
	PSRLL $12, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLL $26, X9
	MOVO 192(AX), X11
	MOVO X11, X12
	PSLLL $6, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 432(BX)
	MOVO X12, X10
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 448(BX)
	PSRLL $22, X10
	MOVO 208(AX), X13
	MOVO X13, X14
	PSLLL $10, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 464(BX)
	MOVO X14, X15
	PSRLL $4, X14
	PAND X0, X14
	MOVO X14, 480(BX)
	PSRLL $18, X15
	MOVO X15, 496(BX)
	RET

// func unpack32_15(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_15(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $32767, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $15, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLL $30, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $2, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLL $13, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLL $28, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $4, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	PSRLL $11, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLL $26, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLL $6, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 96(BX)
	MOVO X12, X13
	PSRLL $9, X12
	PAND X0, X12
	MOVO X12, 112(BX)
	PSRLL $24, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLL $8, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 128(BX)
	MOVO X15, X1
	PSRLL $7, X15
	PAND X0, X15
	MOVO X15, 144(BX)
	PSRLL $22, X1
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLL $10, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 160(BX)
	MOVO X3, X5
	PSRLL $5, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLL $20, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLL $12, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 192(BX)
	MOVO X6, X8
	PSRLL $3, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLL $18, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLL $14, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 224(BX)
	MOVO X9, X11
	MOVO X9, X10
	PSRLL $1, X9
	PAND X0, X9
	MOVO X9, 240(BX)
	PSRLL $16, X11
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLL $31, X10
	MOVO 128(AX), X12
	MOVO X12, X14
	PSLLL $1, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 272(BX)
	MOVO X14, X13
	PSRLL $14, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLL $29, X13
	MOVO 144(AX), X15
	MOVO X15, X2
	PSLLL $3, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 304(BX)
	MOVO X2, X1
	PSRLL $12, X2
	PAND X0, X2
	MOVO X2, 320(BX)
	PSRLL $27, X1
	MOVO 160(AX), X3
	MOVO X3, X4
	PSLLL $5, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 336(BX)
	MOVO X4, X5
	PSRLL $10, X4
	PAND X0, X4
	MOVO X4, 352(BX)
	PSRLL $25, X5
	MOVO 176(AX), X6
	MOVO X6, X7
	PSLLL $7, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 368(BX)
	MOVO X7, X8
	PSRLL $8, X7
	PAND X0, X7
	MOVO X7, 384(BX)
	PSRLL $23, X8
	MOVO 192(AX), X9
	MOVO X9, X11
	PSLLL $9, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 400(BX)
	MOVO X11, X12
	PSRLL $6, X11
	PAND X0, X11
	MOVO X11, 416(BX)
	PSRLL $21, X12
	MOVO 208(AX), X10
	MOVO X10, X14
	PSLLL $11, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 432(BX)
	MOVO X14, X15
	PSRLL $4, X14
	PAND X0, X14
	MOVO X14, 448(BX)
	PSRLL $19, X15
	MOVO 224(AX), X13
	MOVO X13, X2
	PSLLL $13, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 464(BX)
	MOVO X2, X3
	PSRLL $2, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLL $17, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_16(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_16(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $65535, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $16, X3
	MOVO X3, 16(BX)
	MOVO 16(AX), X4
	MOVO X4, X5
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLL $16, X5
	MOVO X5, 48(BX)
	MOVO 32(AX), X6
	MOVO X6, X7
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLL $16, X7
	MOVO X7, 80(BX)
	MOVO 48(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLL $16, X9
	MOVO X9, 112(BX)
	MOVO 64(AX), X10
	MOVO X10, X11
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLL $16, X11
	MOVO X11, 144(BX)
	MOVO 80(AX), X12
	MOVO X12, X13
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLL $16, X13
	MOVO X13, 176(BX)
	MOVO 96(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLL $16, X15
	MOVO X15, 208(BX)
	MOVO 112(AX), X1
	MOVO X1, X2
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLL $16, X2
	MOVO X2, 240(BX)
	MOVO 128(AX), X3
	MOVO X3, X4
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLL $16, X4
	MOVO X4, 272(BX)
	MOVO 144(AX), X5
	MOVO X5, X6
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLL $16, X6
	MOVO X6, 304(BX)
	MOVO 160(AX), X7
	MOVO X7, X8
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLL $16, X8
	MOVO X8, 336(BX)
	MOVO 176(AX), X9
	MOVO X9, X10
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLL $16, X10
	MOVO X10, 368(BX)
	MOVO 192(AX), X11
	MOVO X11, X12
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLL $16, X12
	MOVO X12, 400(BX)
	MOVO 208(AX), X13
	MOVO X13, X14
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLL $16, X14
	MOVO X14, 432(BX)
	MOVO 224(AX), X15
	MOVO X15, X1
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLL $16, X1
	MOVO X1, 464(BX)
	MOVO 240(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLL $16, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_17(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_17(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $131071, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $17, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $15, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLL $2, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLL $19, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $13, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLL $4, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLL $21, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $11, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	MOVO X11, X12
	PSRLL $6, X11
	PAND X0, X11
	MOVO X11, 96(BX)
	PSRLL $23, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLL $9, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 112(BX)
	MOVO X14, X15
	PSRLL $8, X14
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLL $25, X15
	MOVO 80(AX), X1
	MOVO X1, X2
	PSLLL $7, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	MOVO X2, X4
	PSRLL $10, X2
	PAND X0, X2
	MOVO X2, 160(BX)
	PSRLL $27, X4
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLL $5, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 176(BX)
	MOVO X5, X7
	PSRLL $12, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLL $29, X7
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLL $3, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 208(BX)
	MOVO X8, X10
	PSRLL $14, X8
	PAND X0, X8
	MOVO X8, 224(BX)
	PSRLL $31, X10
	MOVO 128(AX), X9
	MOVO X9, X11
	PSLLL $1, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 240(BX)
	PSRLL $16, X11
	MOVO 144(AX), X13
	MOVO X13, X12
	PSLLL $16, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 256(BX)
	MOVO X12, X14
	PSRLL $1, X12
	PAND X0, X12
	MOVO X12, 272(BX)
	PSRLL $18, X14
	MOVO 160(AX), X1
	MOVO X1, X15
	PSLLL $14, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	MOVO X15, X2
	PSRLL $3, X15
	PAND X0, X15
	MOVO X15, 304(BX)
	PSRLL $20, X2
	MOVO 176(AX), X3
	MOVO X3, X4
	PSLLL $12, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 320(BX)
	MOVO X4, X5
	PSRLL $5, X4
	PAND X0, X4
	MOVO X4, 336(BX)
	PSRLL $22, X5
	MOVO 192(AX), X6
	MOVO X6, X7
	PSLLL $10, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 352(BX)
	MOVO X7, X8
	PSRLL $7, X7
	PAND X0, X7
	MOVO X7, 368(BX)
	PSRLL $24, X8
	MOVO 208(AX), X9
	MOVO X9, X10
	PSLLL $8, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 384(BX)
	MOVO X10, X13
	PSRLL $9, X10
	PAND X0, X10
	MOVO X10, 400(BX)
	PSRLL $26, X13
	MOVO 224(AX), X11
	MOVO X11, X12
	PSLLL $6, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 416(BX)
	MOVO X12, X1
	PSRLL $11, X12
	PAND X0, X12
	MOVO X12, 432(BX)
	PSRLL $28, X1
	MOVO 240(AX), X14
	MOVO X14, X15
	PSLLL $4, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 448(BX)
	MOVO X15, X3
	PSRLL $13, X15
	PAND X0, X15
	MOVO X15, 464(BX)
	PSRLL $30, X3
	MOVO 256(AX), X2
	MOVO X2, X4
	PSLLL $2, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 480(BX)
	PSRLL $15, X4
	MOVO X4, 496(BX)
	RET

// func unpack32_18(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_18(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $262143, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $18, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $14, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLL $4, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLL $22, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $10, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLL $8, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLL $26, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $6, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	MOVO X11, X12
	PSRLL $12, X11
	PAND X0, X11
	MOVO X11, 96(BX)
	PSRLL $30, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLL $2, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 112(BX)
	PSRLL $16, X14
	MOVO 80(AX), X15
	MOVO X15, X1
	PSLLL $16, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 128(BX)
	MOVO X1, X2
	PSRLL $2, X1
	PAND X0, X1
	MOVO X1, 144(BX)
	PSRLL $20, X2
	MOVO 96(AX), X4
	MOVO X4, X3
	PSLLL $12, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	MOVO X3, X5
	PSRLL $6, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLL $24, X5
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLL $8, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 192(BX)
	MOVO X6, X8
	PSRLL $10, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLL $28, X8
	MOVO 128(AX), X10
	MOVO X10, X9
	PSLLL $4, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	PSRLL $14, X9
	MOVO X9, 240(BX)
	MOVO 144(AX), X11
	MOVO X11, X13
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLL $18, X13
	MOVO 160(AX), X12
	MOVO X12, X15
	PSLLL $14, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 272(BX)
	MOVO X15, X14
	PSRLL $4, X15
	PAND X0, X15
	MOVO X15, 288(BX)
	PSRLL $22, X14
	MOVO 176(AX), X1
	MOVO X1, X4
	PSLLL $10, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 304(BX)
	MOVO X4, X2
	PSRLL $8, X4
	PAND X0, X4
	MOVO X4, 320(BX)
	PSRLL $26, X2
	MOVO 192(AX), X3
	MOVO X3, X7
	PSLLL $6, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 336(BX)
	MOVO X7, X5
	PSRLL $12, X7
	PAND X0, X7
	MOVO X7, 352(BX)
	PSRLL $30, X5
	MOVO 208(AX), X6
	MOVO X6, X10
	PSLLL $2, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 368(BX)
	PSRLL $16, X10
	MOVO 224(AX), X8
	MOVO X8, X9
	PSLLL $16, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 384(BX)
	MOVO X9, X11
	PSRLL $2, X9
	PAND X0, X9
	MOVO X9, 400(BX)
	PSRLL $20, X11
	MOVO 240(AX), X12
	MOVO X12, X13
	PSLLL $12, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 416(BX)
	MOVO X13, X15
	PSRLL $6, X13
	PAND X0, X13
	MOVO X13, 432(BX)
	PSRLL $24, X15
	MOVO 256(AX), X1
	MOVO X1, X14
	PSLLL $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 448(BX)
	MOVO X14, X4
	PSRLL $10, X14
	PAND X0, X14
	MOVO X14, 464(BX)
	PSRLL $28, X4
	MOVO 272(AX), X3
	MOVO X3, X2
	PSLLL $4, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 480(BX)
	PSRLL $14, X2
	MOVO X2, 496(BX)
	RET

// func unpack32_19(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_19(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $524287, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $19, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $13, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLL $6, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLL $25, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $7, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLL $12, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLL $31, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $1, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	PSRLL $18, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLL $14, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	MOVO X13, X14
	PSRLL $5, X13
	PAND X0, X13
	MOVO X13, 112(BX)
	PSRLL $24, X14
	MOVO 80(AX), X15
	MOVO X15, X1
	PSLLL $8, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 128(BX)
	MOVO X1, X2
	PSRLL $11, X1
	PAND X0, X1
	MOVO X1, 144(BX)
	PSRLL $30, X2
	MOVO 96(AX), X4
	MOVO X4, X3
	PSLLL $2, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	PSRLL $17, X3
	MOVO 112(AX), X5
	MOVO X5, X7
	PSLLL $15, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 176(BX)
	MOVO X7, X6
	PSRLL $4, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLL $23, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLL $9, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 208(BX)
	MOVO X10, X9
	PSRLL $10, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLL $29, X9
	MOVO 144(AX), X12
	MOVO X12, X11
	PSLLL $3, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 240(BX)
	PSRLL $16, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLL $16, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 256(BX)
	MOVO X15, X14
	PSRLL $3, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLL $22, X14
	MOVO 176(AX), X1
	MOVO X1, X4
	PSLLL $10, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	MOVO X4, X2
	PSRLL $9, X4
	PAND X0, X4
	MOVO X4, 304(BX)
	PSRLL $28, X2
	MOVO 192(AX), X5
	MOVO X5, X3
	PSLLL $4, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 320(BX)
	PSRLL $15, X3
	MOVO 208(AX), X7
	MOVO X7, X8
	PSLLL $17, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 336(BX)
	MOVO X8, X6
	PSRLL $2, X8
	PAND X0, X8
	MOVO X8, 352(BX)
	PSRLL $21, X6
	MOVO 224(AX), X10
	MOVO X10, X12
	PSLLL $11, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 368(BX)
	MOVO X12, X9
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLL $27, X9
	MOVO 240(AX), X13
	MOVO X13, X11
	PSLLL $5, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 400(BX)
	PSRLL $14, X11
	MOVO 256(AX), X15
	MOVO X15, X1
	PSLLL $18, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 416(BX)
	MOVO X1, X14
	PSRLL $1, X1
	PAND X0, X1
	MOVO X1, 432(BX)
	PSRLL $20, X14
	MOVO 272(AX), X4
	MOVO X4, X5
	PSLLL $12, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 448(BX)
	MOVO X5, X2
	PSRLL $7, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLL $26, X2
	MOVO 288(AX), X7
	MOVO X7, X3
	PSLLL $6, X7
	PAND X0, X7
	POR X7, X2
	MOVO X2, 480(BX)
	PSRLL $13, X3
	MOVO X3, 496(BX)
	RET

// func unpack32_20(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_20(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $1048575, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $20, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $12, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLL $8, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLL $28, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $4, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	PSRLL $16, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $16, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	MOVO X10, X11
	PSRLL $4, X10
	PAND X0, X10
	MOVO X10, 80(BX)
	PSRLL $24, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLL $8, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLL $12, X13
	MOVO X13, 112(BX)
	MOVO 80(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLL $20, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLL $12, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	MOVO X2, X4
	PSRLL $8, X2
	PAND X0, X2
	MOVO X2, 160(BX)
	PSRLL $28, X4
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $4, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 176(BX)
	PSRLL $16, X5
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLL $16, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 192(BX)
	MOVO X6, X9
	PSRLL $4, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLL $24, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLL $8, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 224(BX)
	PSRLL $12, X10
	MOVO X10, 240(BX)
	MOVO 160(AX), X12
	MOVO X12, X11
	PAND X0, X12
	MOVO X12, 256(BX)
	PSRLL $20, X11
	MOVO 176(AX), X13
	MOVO X13, X14
	PSLLL $12, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 272(BX)
	MOVO X14, X1
	PSRLL $8, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLL $28, X1
	MOVO 192(AX), X15
	MOVO X15, X2
	PSLLL $4, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 304(BX)
	PSRLL $16, X2
	MOVO 208(AX), X3
	MOVO X3, X4
	PSLLL $16, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 320(BX)
	MOVO X4, X7
	PSRLL $4, X4
	PAND X0, X4
	MOVO X4, 336(BX)
	PSRLL $24, X7
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLL $8, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 352(BX)
	PSRLL $12, X6
	MOVO X6, 368(BX)
	MOVO 240(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 384(BX)
	PSRLL $20, X9
	MOVO 256(AX), X10
	MOVO X10, X12
	PSLLL $12, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 400(BX)
	MOVO X12, X13
	PSRLL $8, X12
	PAND X0, X12
	MOVO X12, 416(BX)
	PSRLL $28, X13
	MOVO 272(AX), X11
	MOVO X11, X14
	PSLLL $4, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 432(BX)
	PSRLL $16, X14
	MOVO 288(AX), X15
	MOVO X15, X1
	PSLLL $16, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 448(BX)
	MOVO X1, X3
	PSRLL $4, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLL $24, X3
	MOVO 304(AX), X2
	MOVO X2, X4
	PSLLL $8, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 480(BX)
	PSRLL $12, X4
	MOVO X4, 496(BX)
	RET

// func unpack32_21(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_21(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $2097151, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $21, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $11, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLL $10, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLL $31, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $1, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	PSRLL $20, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $12, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	MOVO X10, X11
	PSRLL $9, X10
	PAND X0, X10
	MOVO X10, 80(BX)
	PSRLL $30, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLL $2, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLL $19, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLL $13, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	MOVO X15, X1
	PSRLL $8, X15
	PAND X0, X15
	MOVO X15, 128(BX)
	PSRLL $29, X1
	MOVO 96(AX), X2
	MOVO X2, X4
	PSLLL $3, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 144(BX)
	PSRLL $18, X4
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $14, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 160(BX)
	MOVO X5, X7
	PSRLL $7, X5
	PAND X0, X5
	MOVO X5, 176(BX)
	PSRLL $28, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLL $4, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 192(BX)
	PSRLL $17, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLL $15, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 208(BX)
	MOVO X10, X12
	PSRLL $6, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLL $27, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLL $5, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 240(BX)
	PSRLL $16, X14
	MOVO 176(AX), X13
	MOVO X13, X15
	PSLLL $16, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 256(BX)
	MOVO X15, X2
	PSRLL $5, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLL $26, X2
	MOVO 192(AX), X1
	MOVO X1, X3
	PSLLL $6, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 288(BX)
	PSRLL $15, X3
	MOVO 208(AX), X4
	MOVO X4, X5
	PSLLL $17, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 304(BX)
	MOVO X5, X6
	PSRLL $4, X5
	PAND X0, X5
	MOVO X5, 320(BX)
	PSRLL $25, X6
	MOVO 224(AX), X7
	MOVO X7, X8
	PSLLL $7, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 336(BX)
	PSRLL $14, X8
	MOVO 240(AX), X9
	MOVO X9, X10
	PSLLL $18, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 352(BX)
	MOVO X10, X11
	PSRLL $3, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	PSRLL $24, X11
	MOVO 256(AX), X12
	MOVO X12, X13
	PSLLL $8, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 384(BX)
	PSRLL $13, X13
	MOVO 272(AX), X14
	MOVO X14, X15
	PSLLL $19, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 400(BX)
	MOVO X15, X1
	PSRLL $2, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLL $23, X1
	MOVO 288(AX), X2
	MOVO X2, X4
	PSLLL $9, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 432(BX)
	PSRLL $12, X4
	MOVO 304(AX), X3
	MOVO X3, X5
	PSLLL $20, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 448(BX)
	MOVO X5, X7
	PSRLL $1, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLL $22, X7
	MOVO 320(AX), X6
	MOVO X6, X9
	PSLLL $10, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 480(BX)
	PSRLL $11, X9
	MOVO X9, 496(BX)
	RET

// func unpack32_22(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_22(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $4194303, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $22, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $10, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $12, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $20, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLL $2, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLL $24, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $8, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLL $14, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $18, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	MOVO X12, X13
	PSRLL $4, X12
	PAND X0, X12
	MOVO X12, 96(BX)
	PSRLL $26, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLL $6, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	PSRLL $16, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLL $16, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	MOVO X2, X4
	PSRLL $6, X2
	PAND X0, X2
	MOVO X2, 144(BX)
	PSRLL $28, X4
	MOVO 112(AX), X3
	MOVO X3, X6
	PSLLL $4, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 160(BX)
	PSRLL $18, X6
	MOVO 128(AX), X5
	MOVO X5, X7
	PSLLL $14, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 176(BX)
	MOVO X7, X9
	PSRLL $8, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLL $30, X9
	MOVO 144(AX), X8
	MOVO X8, X11
	PSLLL $2, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 208(BX)
	PSRLL $20, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLL $12, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 224(BX)
	PSRLL $10, X12
	MOVO X12, 240(BX)
	MOVO 176(AX), X14
	MOVO X14, X13
	PAND X0, X14
	MOVO X14, 256(BX)
	PSRLL $22, X13
	MOVO 192(AX), X1
	MOVO X1, X15
	PSLLL $10, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 272(BX)
	PSRLL $12, X15
	MOVO 208(AX), X2
	MOVO X2, X3
	PSLLL $20, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 288(BX)
	MOVO X3, X4
	PSRLL $2, X3
	PAND X0, X3
	MOVO X3, 304(BX)
	PSRLL $24, X4
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLL $8, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 320(BX)
	PSRLL $14, X6
	MOVO 240(AX), X7
	MOVO X7, X8
	PSLLL $18, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 336(BX)
	MOVO X8, X9
	PSRLL $4, X8
	PAND X0, X8
	MOVO X8, 352(BX)
	PSRLL $26, X9
	MOVO 256(AX), X10
	MOVO X10, X11
	PSLLL $6, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 368(BX)
	PSRLL $16, X11
	MOVO 272(AX), X12
	MOVO X12, X14
	PSLLL $16, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 384(BX)
	MOVO X14, X1
	PSRLL $6, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	PSRLL $28, X1
	MOVO 288(AX), X13
	MOVO X13, X2
	PSLLL $4, X13
	PAND X0, X13
	POR X13, X1
	MOVO X1, 416(BX)
	PSRLL $18, X2
	MOVO 304(AX), X15
	MOVO X15, X3
	PSLLL $14, X15
	PAND X0, X15
	POR X15, X2
	MOVO X2, 432(BX)
	MOVO X3, X5
	PSRLL $8, X3
	PAND X0, X3
	MOVO X3, 448(BX)
	PSRLL $30, X5
	MOVO 320(AX), X4
	MOVO X4, X7
	PSLLL $2, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 464(BX)
	PSRLL $20, X7
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLL $12, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 480(BX)
	PSRLL $10, X8
	MOVO X8, 496(BX)
	RET

// func unpack32_23(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_23(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $8388607, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $23, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $9, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $14, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $18, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLL $5, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLL $28, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $4, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLL $19, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $13, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLL $10, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $22, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	MOVO X14, X15
	PSRLL $1, X14
	PAND X0, X14
	MOVO X14, 112(BX)
	PSRLL $24, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLL $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	PSRLL $15, X2
	MOVO 112(AX), X4
	MOVO X4, X3
	PSLLL $17, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	MOVO X3, X6
	PSRLL $6, X3
	PAND X0, X3
	MOVO X3, 160(BX)
	PSRLL $29, X6
	MOVO 128(AX), X5
	MOVO X5, X7
	PSLLL $3, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 176(BX)
	PSRLL $20, X7
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLL $12, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	PSRLL $11, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLL $21, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 208(BX)
	MOVO X10, X13
	PSRLL $2, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLL $25, X13
	MOVO 176(AX), X12
	MOVO X12, X14
	PSLLL $7, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 240(BX)
	PSRLL $16, X14
	MOVO 192(AX), X1
	MOVO X1, X15
	PSLLL $16, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 256(BX)
	MOVO X15, X4
	PSRLL $7, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLL $30, X4
	MOVO 208(AX), X2
	MOVO X2, X3
	PSLLL $2, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 288(BX)
	PSRLL $21, X3
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLL $11, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 304(BX)
	PSRLL $12, X6
	MOVO 240(AX), X9
	MOVO X9, X7
	PSLLL $20, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 320(BX)
	MOVO X7, X11
	PSRLL $3, X7
	PAND X0, X7
	MOVO X7, 336(BX)
	PSRLL $26, X11
	MOVO 256(AX), X8
	MOVO X8, X10
	PSLLL $6, X8
	PAND X0, X8
	POR X8, X11
	MOVO X11, 352(BX)
	PSRLL $17, X10
	MOVO 272(AX), X12
	MOVO X12, X13
	PSLLL $15, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 368(BX)
	MOVO X13, X1
	PSRLL $8, X13
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLL $31, X1
	MOVO 288(AX), X14
	MOVO X14, X15
	PSLLL $1, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 400(BX)
	PSRLL $22, X15
	MOVO 304(AX), X2
	MOVO X2, X4
	PSLLL $10, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 416(BX)
	PSRLL $13, X4
	MOVO 320(AX), X5
	MOVO X5, X3
	PSLLL $19, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 432(BX)
	MOVO X3, X9
	PSRLL $4, X3
	PAND X0, X3
	MOVO X3, 448(BX)
	PSRLL $27, X9
	MOVO 336(AX), X6
	MOVO X6, X7
	PSLLL $5, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 464(BX)
	PSRLL $18, X7
	MOVO 352(AX), X8
	MOVO X8, X11
	PSLLL $14, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 480(BX)
	PSRLL $9, X11
	MOVO X11, 496(BX)
	RET

// func unpack32_24(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_24(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $16777215, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $24, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $8, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $16, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $16, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $8, X7
	MOVO X7, 48(BX)
	MOVO 48(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLL $24, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $8, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	PSRLL $16, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLL $16, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLL $8, X13
	MOVO X13, 112(BX)
	MOVO 96(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLL $24, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLL $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	PSRLL $16, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLL $16, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	PSRLL $8, X3
	MOVO X3, 176(BX)
	MOVO 144(AX), X6
	MOVO X6, X5
	PAND X0, X6
	MOVO X6, 192(BX)
	PSRLL $24, X5
	MOVO 160(AX), X7
	MOVO X7, X8
	PSLLL $8, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 208(BX)
	PSRLL $16, X8
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLL $16, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	PSRLL $8, X9
	MOVO X9, 240(BX)
	MOVO 192(AX), X12
	MOVO X12, X11
	PAND X0, X12
	MOVO X12, 256(BX)
	PSRLL $24, X11
	MOVO 208(AX), X13
	MOVO X13, X14
	PSLLL $8, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 272(BX)
	PSRLL $16, X14
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLL $16, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	PSRLL $8, X15
	MOVO X15, 304(BX)
	MOVO 240(AX), X4
	MOVO X4, X2
	PAND X0, X4
	MOVO X4, 320(BX)
	PSRLL $24, X2
	MOVO 256(AX), X3
	MOVO X3, X6
	PSLLL $8, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 336(BX)
	PSRLL $16, X6
	MOVO 272(AX), X7
	MOVO X7, X5
	PSLLL $16, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 352(BX)
	PSRLL $8, X5
	MOVO X5, 368(BX)
	MOVO 288(AX), X10
	MOVO X10, X8
	PAND X0, X10
	MOVO X10, 384(BX)
	PSRLL $24, X8
	MOVO 304(AX), X9
	MOVO X9, X12
	PSLLL $8, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 400(BX)
	PSRLL $16, X12
	MOVO 320(AX), X13
	MOVO X13, X11
	PSLLL $16, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 416(BX)
	PSRLL $8, X11
	MOVO X11, 432(BX)
	MOVO 336(AX), X1
	MOVO X1, X14
	PAND X0, X1
	MOVO X1, 448(BX)
	PSRLL $24, X14
	MOVO 352(AX), X15
	MOVO X15, X4
	PSLLL $8, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 464(BX)
	PSRLL $16, X4
	MOVO 368(AX), X3
	MOVO X3, X2
	PSLLL $16, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 480(BX)
	PSRLL $8, X2
	MOVO X2, 496(BX)
	RET

// func unpack32_25(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_25(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $33554431, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $25, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $7, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $18, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $14, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $11, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $21, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	MOVO X9, X10
	PSRLL $4, X9
	PAND X0, X9
	MOVO X9, 64(BX)
	PSRLL $29, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $3, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLL $22, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $10, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLL $15, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLL $17, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLL $8, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLL $24, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	MOVO X4, X3
	PSRLL $1, X4
	PAND X0, X4
	MOVO X4, 144(BX)
	PSRLL $26, X3
	MOVO 128(AX), X6
	MOVO X6, X5
	PSLLL $6, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	PSRLL $19, X5
	MOVO 144(AX), X8
	MOVO X8, X7
	PSLLL $13, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLL $12, X7
	MOVO 160(AX), X9
	MOVO X9, X11
	PSLLL $20, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	MOVO X11, X10
	PSRLL $5, X11
	PAND X0, X11
	MOVO X11, 208(BX)
	PSRLL $30, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLL $2, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 224(BX)
	PSRLL $23, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLL $9, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 240(BX)
	PSRLL $16, X14
	MOVO 208(AX), X2
	MOVO X2, X1
	PSLLL $16, X2
	PAND X0, X2
	POR X2, X14
	MOVO X14, 256(BX)
	PSRLL $9, X1
	MOVO 224(AX), X4
	MOVO X4, X6
	PSLLL $23, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 272(BX)
	MOVO X6, X3
	PSRLL $2, X6
	PAND X0, X6
	MOVO X6, 288(BX)
	PSRLL $27, X3
	MOVO 240(AX), X8
	MOVO X8, X5
	PSLLL $5, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 304(BX)
	PSRLL $20, X5
	MOVO 256(AX), X9
	MOVO X9, X7
	PSLLL $12, X9
	PAND X0, X9
	POR X9, X5
	MOVO X5, 320(BX)
	PSRLL $13, X7
	MOVO 272(AX), X11
	MOVO X11, X13
	PSLLL $19, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 336(BX)
	MOVO X13, X10
	PSRLL $6, X13
	PAND X0, X13
	MOVO X13, 352(BX)
	PSRLL $31, X10
	MOVO 288(AX), X15
	MOVO X15, X12
	PSLLL $1, X15
	PAND X0, X15
	POR X15, X10
	MOVO X10, 368(BX)
	PSRLL $24, X12
	MOVO 304(AX), X2
	MOVO X2, X14
	PSLLL $8, X2
	PAND X0, X2
	POR X2, X12
	MOVO X12, 384(BX)
	PSRLL $17, X14
	MOVO 320(AX), X4
	MOVO X4, X1
	PSLLL $15, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 400(BX)
	PSRLL $10, X1
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLL $22, X6
	PAND X0, X6
	POR X6, X1
	MOVO X1, 416(BX)
	MOVO X8, X3
	PSRLL $3, X8
	PAND X0, X8
	MOVO X8, 432(BX)
	PSRLL $28, X3
	MOVO 352(AX), X9
	MOVO X9, X5
	PSLLL $4, X9
	PAND X0, X9
	POR X9, X3
	MOVO X3, 448(BX)
	PSRLL $21, X5
	MOVO 368(AX), X11
	MOVO X11, X7
	PSLLL $11, X11
	PAND X0, X11
	POR X11, X5
	MOVO X5, 464(BX)
	PSRLL $14, X7
	MOVO 384(AX), X13
	MOVO X13, X15
	PSLLL $18, X13
	PAND X0, X13
	POR X13, X7
	MOVO X7, 480(BX)
	PSRLL $7, X15
	MOVO X15, 496(BX)
	RET

// func unpack32_26(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_26(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $67108863, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $26, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $6, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $20, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $12, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $14, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $18, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLL $8, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $24, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	MOVO X11, X12
	PSRLL $2, X11
	PAND X0, X11
	MOVO X11, 80(BX)
	PSRLL $28, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $4, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLL $22, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLL $10, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLL $16, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLL $16, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	PSRLL $10, X4
	MOVO 128(AX), X3
	MOVO X3, X6
	PSLLL $22, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 144(BX)
	MOVO X6, X5
	PSRLL $4, X6
	PAND X0, X6
	MOVO X6, 160(BX)
	PSRLL $30, X5
	MOVO 144(AX), X8
	MOVO X8, X7
	PSLLL $2, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLL $24, X7
	MOVO 160(AX), X10
	MOVO X10, X9
	PSLLL $8, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 192(BX)
	PSRLL $18, X9
	MOVO 176(AX), X11
	MOVO X11, X13
	PSLLL $14, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 208(BX)
	PSRLL $12, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLL $20, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 224(BX)
	PSRLL $6, X15
	MOVO X15, 240(BX)
	MOVO 208(AX), X14
	MOVO X14, X2
	PAND X0, X14
	MOVO X14, 256(BX)
	PSRLL $26, X2
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLL $6, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 272(BX)
	PSRLL $20, X3
	MOVO 240(AX), X4
	MOVO X4, X6
	PSLLL $12, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 288(BX)
	PSRLL $14, X6
	MOVO 256(AX), X8
	MOVO X8, X5
	PSLLL $18, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 304(BX)
	PSRLL $8, X5
	MOVO 272(AX), X10
	MOVO X10, X7
	PSLLL $24, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 320(BX)
	MOVO X7, X11
	PSRLL $2, X7
	PAND X0, X7
	MOVO X7, 336(BX)
	PSRLL $28, X11
	MOVO 288(AX), X9
	MOVO X9, X12
	PSLLL $4, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 352(BX)
	PSRLL $22, X12
	MOVO 304(AX), X13
	MOVO X13, X15
	PSLLL $10, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 368(BX)
	PSRLL $16, X15
	MOVO 320(AX), X14
	MOVO X14, X1
	PSLLL $16, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 384(BX)
	PSRLL $10, X1
	MOVO 336(AX), X2
	MOVO X2, X4
	PSLLL $22, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 400(BX)
	MOVO X4, X3
	PSRLL $4, X4
	PAND X0, X4
	MOVO X4, 416(BX)
	PSRLL $30, X3
	MOVO 352(AX), X8
	MOVO X8, X6
	PSLLL $2, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 432(BX)
	PSRLL $24, X6
	MOVO 368(AX), X10
	MOVO X10, X5
	PSLLL $8, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 448(BX)
	PSRLL $18, X5
	MOVO 384(AX), X7
	MOVO X7, X9
	PSLLL $14, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 464(BX)
	PSRLL $12, X9
	MOVO 400(AX), X11
	MOVO X11, X13
	PSLLL $20, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 480(BX)
	PSRLL $6, X13
	MOVO X13, 496(BX)
	RET

// func unpack32_27(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_27(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $134217727, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $27, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $5, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $22, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $10, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $17, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $15, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLL $12, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $20, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLL $7, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLL $25, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	MOVO X13, X14
	PSRLL $2, X13
	PAND X0, X13
	MOVO X13, 96(BX)
	PSRLL $29, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLL $3, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLL $24, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLL $8, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	PSRLL $19, X4
	MOVO 128(AX), X3
	MOVO X3, X6
	PSLLL $13, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 144(BX)
	PSRLL $14, X6
	MOVO 144(AX), X5
	MOVO X5, X8
	PSLLL $18, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 160(BX)
	PSRLL $9, X8
	MOVO 160(AX), X7
	MOVO X7, X10
	PSLLL $23, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 176(BX)
	MOVO X10, X9
	PSRLL $4, X10
	PAND X0, X10
	MOVO X10, 192(BX)
	PSRLL $31, X9
	MOVO 176(AX), X12
	MOVO X12, X11
	PSLLL $1, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 208(BX)
	PSRLL $26, X11
	MOVO 192(AX), X13
	MOVO X13, X15
	PSLLL $6, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 224(BX)
	PSRLL $21, X15
	MOVO 208(AX), X14
	MOVO X14, X2
	PSLLL $11, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 240(BX)
	PSRLL $16, X2
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLL $16, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 256(BX)
	PSRLL $11, X3
	MOVO 240(AX), X4
	MOVO X4, X5
	PSLLL $21, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 272(BX)
	PSRLL $6, X5
	MOVO 256(AX), X6
	MOVO X6, X7
	PSLLL $26, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 288(BX)
	MOVO X7, X8
	PSRLL $1, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	PSRLL $28, X8
	MOVO 272(AX), X10
	MOVO X10, X12
	PSLLL $4, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 320(BX)
	PSRLL $23, X12
	MOVO 288(AX), X9
	MOVO X9, X13
	PSLLL $9, X9
	PAND X0, X9
	POR X9, X12
	MOVO X12, 336(BX)
	PSRLL $18, X13
	MOVO 304(AX), X11
	MOVO X11, X14
	PSLLL $14, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 352(BX)
	PSRLL $13, X14
	MOVO 320(AX), X15
	MOVO X15, X1
	PSLLL $19, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 368(BX)
	PSRLL $8, X1
	MOVO 336(AX), X2
	MOVO X2, X4
	PSLLL $24, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 384(BX)
	MOVO X4, X3
	PSRLL $3, X4
	PAND X0, X4
	MOVO X4, 400(BX)
	PSRLL $30, X3
	MOVO 352(AX), X6
	MOVO X6, X5
	PSLLL $2, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 416(BX)
	PSRLL $25, X5
	MOVO 368(AX), X7
	MOVO X7, X10
	PSLLL $7, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 432(BX)
	PSRLL $20, X10
	MOVO 384(AX), X8
	MOVO X8, X9
	PSLLL $12, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 448(BX)
	PSRLL $15, X9
	MOVO 400(AX), X12
	MOVO X12, X11
	PSLLL $17, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 464(BX)
	PSRLL $10, X11
	MOVO 416(AX), X13
	MOVO X13, X15
	PSLLL $22, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 480(BX)
	PSRLL $5, X15
	MOVO X15, 496(BX)
	RET

// func unpack32_28(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_28(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $268435455, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $28, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $4, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $24, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $8, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $20, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $12, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLL $16, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $16, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLL $12, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLL $20, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLL $8, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLL $24, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLL $4, X15
	MOVO X15, 112(BX)
	MOVO 112(AX), X1
	MOVO X1, X2
	PAND X0, X1
	MOVO X1, 128(BX)
	PSRLL $28, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLL $4, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	PSRLL $24, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLL $8, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	PSRLL $20, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLL $12, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLL $16, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLL $16, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 192(BX)
	PSRLL $12, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLL $20, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 208(BX)
	PSRLL $8, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLL $24, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 224(BX)
	PSRLL $4, X13
	MOVO X13, 240(BX)
	MOVO 224(AX), X15
	MOVO X15, X1
	PAND X0, X15
	MOVO X15, 256(BX)
	PSRLL $28, X1
	MOVO 240(AX), X4
	MOVO X4, X2
	PSLLL $4, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 272(BX)
	PSRLL $24, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLL $8, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 288(BX)
	PSRLL $20, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLL $12, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 304(BX)
	PSRLL $16, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLL $16, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 320(BX)
	PSRLL $12, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLL $20, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 336(BX)
	PSRLL $8, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLL $24, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 352(BX)
	PSRLL $4, X11
	MOVO X11, 368(BX)
	MOVO 336(AX), X13
	MOVO X13, X15
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLL $28, X15
	MOVO 352(AX), X4
	MOVO X4, X1
	PSLLL $4, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 400(BX)
	PSRLL $24, X1
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLL $8, X6
	PAND X0, X6
	POR X6, X1
	MOVO X1, 416(BX)
	PSRLL $20, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLL $12, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 432(BX)
	PSRLL $16, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLL $16, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 448(BX)
	PSRLL $12, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLL $20, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 464(BX)
	PSRLL $8, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLL $24, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 480(BX)
	PSRLL $4, X9
	MOVO X9, 496(BX)
	RET

// func unpack32_29(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_29(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $536870911, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $29, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $3, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $26, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $6, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $23, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $9, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLL $20, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $12, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLL $17, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLL $15, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLL $14, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLL $18, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLL $11, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLL $21, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLL $8, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLL $24, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLL $5, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLL $27, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	MOVO X5, X8
	PSRLL $2, X5
	PAND X0, X5
	MOVO X5, 160(BX)
	PSRLL $31, X8
	MOVO 160(AX), X7
	MOVO X7, X10
	PSLLL $1, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 176(BX)
	PSRLL $28, X10
	MOVO 176(AX), X9
	MOVO X9, X12
	PSLLL $4, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 192(BX)
	PSRLL $25, X12
	MOVO 192(AX), X11
	MOVO X11, X14
	PSLLL $7, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 208(BX)
	PSRLL $22, X14
	MOVO 208(AX), X13
	MOVO X13, X1
	PSLLL $10, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 224(BX)
	PSRLL $19, X1
	MOVO 224(AX), X15
	MOVO X15, X4
	PSLLL $13, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 240(BX)
	PSRLL $16, X4
	MOVO 240(AX), X2
	MOVO X2, X6
	PSLLL $16, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 256(BX)
	PSRLL $13, X6
	MOVO 256(AX), X3
	MOVO X3, X5
	PSLLL $19, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 272(BX)
	PSRLL $10, X5
	MOVO 272(AX), X7
	MOVO X7, X8
	PSLLL $22, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 288(BX)
	PSRLL $7, X8
	MOVO 288(AX), X9
	MOVO X9, X10
	PSLLL $25, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 304(BX)
	PSRLL $4, X10
	MOVO 304(AX), X11
	MOVO X11, X12
	PSLLL $28, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 320(BX)
	MOVO X12, X13
	PSRLL $1, X12
	PAND X0, X12
	MOVO X12, 336(BX)
	PSRLL $30, X13
	MOVO 320(AX), X14
	MOVO X14, X15
	PSLLL $2, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 352(BX)
	PSRLL $27, X15
	MOVO 336(AX), X1
	MOVO X1, X2
	PSLLL $5, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 368(BX)
	PSRLL $24, X2
	MOVO 352(AX), X4
	MOVO X4, X3
	PSLLL $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 384(BX)
	PSRLL $21, X3
	MOVO 368(AX), X6
	MOVO X6, X7
	PSLLL $11, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 400(BX)
	PSRLL $18, X7
	MOVO 384(AX), X5
	MOVO X5, X9
	PSLLL $14, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 416(BX)
	PSRLL $15, X9
	MOVO 400(AX), X8
	MOVO X8, X11
	PSLLL $17, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 432(BX)
	PSRLL $12, X11
	MOVO 416(AX), X10
	MOVO X10, X12
	PSLLL $20, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 448(BX)
	PSRLL $9, X12
	MOVO 432(AX), X14
	MOVO X14, X13
	PSLLL $23, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 464(BX)
	PSRLL $6, X13
	MOVO 448(AX), X1
	MOVO X1, X15
	PSLLL $26, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 480(BX)
	PSRLL $3, X15
	MOVO X15, 496(BX)
	RET

// func unpack32_30(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_30(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $1073741823, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $30, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $2, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $28, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $4, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $26, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $6, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLL $24, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $8, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLL $22, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLL $10, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLL $20, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLL $12, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLL $18, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLL $14, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLL $16, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLL $16, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLL $14, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLL $18, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLL $12, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLL $20, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLL $10, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLL $22, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	PSRLL $8, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLL $24, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 192(BX)
	PSRLL $6, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLL $26, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 208(BX)
	PSRLL $4, X13
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLL $28, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 224(BX)
	PSRLL $2, X15
	MOVO X15, 240(BX)
	MOVO 240(AX), X4
	MOVO X4, X2
	PAND X0, X4
	MOVO X4, 256(BX)
	PSRLL $30, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLL $2, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 272(BX)
	PSRLL $28, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLL $4, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 288(BX)
	PSRLL $26, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLL $6, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 304(BX)
	PSRLL $24, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLL $8, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 320(BX)
	PSRLL $22, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLL $10, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 336(BX)
	PSRLL $20, X11
	MOVO 336(AX), X1
	MOVO X1, X13
	PSLLL $12, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 352(BX)
	PSRLL $18, X13
	MOVO 352(AX), X15
	MOVO X15, X4
	PSLLL $14, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 368(BX)
	PSRLL $16, X4
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLL $16, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 384(BX)
	PSRLL $14, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLL $18, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 400(BX)
	PSRLL $12, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLL $20, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 416(BX)
	PSRLL $10, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLL $22, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 432(BX)
	PSRLL $8, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLL $24, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 448(BX)
	PSRLL $6, X9
	MOVO 448(AX), X1
	MOVO X1, X11
	PSLLL $26, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 464(BX)
	PSRLL $4, X11
	MOVO 464(AX), X15
	MOVO X15, X13
	PSLLL $28, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 480(BX)
	PSRLL $2, X13
	MOVO X13, 496(BX)
	RET

// func unpack32_31(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_31(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $2147483647, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLL $31, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLL $1, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLL $30, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLL $2, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLL $29, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLL $3, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLL $28, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLL $4, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLL $27, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLL $5, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLL $26, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLL $6, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLL $25, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLL $7, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLL $24, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLL $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLL $23, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLL $9, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLL $22, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLL $10, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLL $21, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLL $11, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	PSRLL $20, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLL $12, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 192(BX)
	PSRLL $19, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLL $13, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 208(BX)
	PSRLL $18, X13
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLL $14, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 224(BX)
	PSRLL $17, X15
	MOVO 240(AX), X4
	MOVO X4, X2
	PSLLL $15, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 240(BX)
	PSRLL $16, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLL $16, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 256(BX)
	PSRLL $15, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLL $17, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 272(BX)
	PSRLL $14, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLL $18, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 288(BX)
	PSRLL $13, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLL $19, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 304(BX)
	PSRLL $12, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLL $20, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 320(BX)
	PSRLL $11, X11
	MOVO 336(AX), X1
	MOVO X1, X13
	PSLLL $21, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 336(BX)
	PSRLL $10, X13
	MOVO 352(AX), X4
	MOVO X4, X15
	PSLLL $22, X4
	PAND X0, X4
	POR X4, X13
	MOVO X13, 352(BX)
	PSRLL $9, X15
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLL $23, X6
	PAND X0, X6
	POR X6, X15
	MOVO X15, 368(BX)
	PSRLL $8, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLL $24, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 384(BX)
	PSRLL $7, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLL $25, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 400(BX)
	PSRLL $6, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLL $26, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 416(BX)
	PSRLL $5, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLL $27, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 432(BX)
	PSRLL $4, X9
	MOVO 448(AX), X1
	MOVO X1, X11
	PSLLL $28, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 448(BX)
	PSRLL $3, X11
	MOVO 464(AX), X4
	MOVO X4, X13
	PSLLL $29, X4
	PAND X0, X4
	POR X4, X11
	MOVO X11, 464(BX)
	PSRLL $2, X13
	MOVO 480(AX), X6
	MOVO X6, X15
	PSLLL $30, X6
	PAND X0, X6
	POR X6, X13
	MOVO X13, 480(BX)
	PSRLL $1, X15
	MOVO X15, 496(BX)
	RET

// func unpack32_32(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack32_32(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ $4294967295, DX
	MOVQ DX, X1
	PSHUFL $0, X1, X0
	MOVO 0(AX), X2
	MOVO X2, 0(BX)
	MOVO 16(AX), X3
	MOVO X3, 16(BX)
	MOVO 32(AX), X4
	MOVO X4, 32(BX)
	MOVO 48(AX), X5
	MOVO X5, 48(BX)
	MOVO 64(AX), X6
	MOVO X6, 64(BX)
	MOVO 80(AX), X7
	MOVO X7, 80(BX)
	MOVO 96(AX), X8
	MOVO X8, 96(BX)
	MOVO 112(AX), X9
	MOVO X9, 112(BX)
	MOVO 128(AX), X10
	MOVO X10, 128(BX)
	MOVO 144(AX), X11
	MOVO X11, 144(BX)
	MOVO 160(AX), X12
	MOVO X12, 160(BX)
	MOVO 176(AX), X13
	MOVO X13, 176(BX)
	MOVO 192(AX), X14
	MOVO X14, 192(BX)
	MOVO 208(AX), X15
	MOVO X15, 208(BX)
	MOVO 224(AX), X1
	MOVO X1, 224(BX)
	MOVO 240(AX), X2
	MOVO X2, 240(BX)
	MOVO 256(AX), X3
	MOVO X3, 256(BX)
	MOVO 272(AX), X4
	MOVO X4, 272(BX)
	MOVO 288(AX), X5
	MOVO X5, 288(BX)
	MOVO 304(AX), X6
	MOVO X6, 304(BX)
	MOVO 320(AX), X7
	MOVO X7, 320(BX)
	MOVO 336(AX), X8
	MOVO X8, 336(BX)
	MOVO 352(AX), X9
	MOVO X9, 352(BX)
	MOVO 368(AX), X10
	MOVO X10, 368(BX)
	MOVO 384(AX), X11
	MOVO X11, 384(BX)
	MOVO 400(AX), X12
	MOVO X12, 400(BX)
	MOVO 416(AX), X13
	MOVO X13, 416(BX)
	MOVO 432(AX), X14
	MOVO X14, 432(BX)
	MOVO 448(AX), X15
	MOVO X15, 448(BX)
	MOVO 464(AX), X1
	MOVO X1, 464(BX)
	MOVO 480(AX), X2
	MOVO X2, 480(BX)
	MOVO 496(AX), X3
	MOVO X3, 496(BX)
	RET

// func unpack64_1(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_1(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $1, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $2, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $3, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $5, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $6, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $7, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $9, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $10, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $11, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $13, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLQ $14, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $15, X2
	PAND X0, X2
	MOVO X2, 240(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $17, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $19, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $20, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $21, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLQ $22, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $23, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLQ $25, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLQ $26, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLQ $27, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $28, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLQ $29, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLQ $30, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $31, X3
	PAND X0, X3
	MOVO X3, 496(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $32, X4
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $33, X5
	PAND X0, X5
	MOVO X5, 528(BX)
	PSRLQ $34, X6
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $35, X7
	PAND X0, X7
	MOVO X7, 560(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $36, X8
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $37, X9
	PAND X0, X9
	MOVO X9, 592(BX)
	PSRLQ $38, X10
	PAND X0, X10
	MOVO X10, 608(BX)
	PSRLQ $39, X11
	PAND X0, X11
	MOVO X11, 624(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X1
	PSRLQ $40, X12
	PAND X0, X12
	MOVO X12, 640(BX)
	PSRLQ $41, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $42, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $43, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	PSRLQ $44, X1
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $45, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $46, X3
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $47, X4
	PAND X0, X4
	MOVO X4, 752(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $48, X5
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $49, X6
	PAND X0, X6
	MOVO X6, 784(BX)
	PSRLQ $50, X7
	PAND X0, X7
	MOVO X7, 800(BX)
	PSRLQ $51, X8
	PAND X0, X8
	MOVO X8, 816(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $52, X9
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $53, X10
	PAND X0, X10
	MOVO X10, 848(BX)
	PSRLQ $54, X11
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $55, X12
	PAND X0, X12
	MOVO X12, 880(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	MOVO X13, X2
	PSRLQ $56, X13
	PAND X0, X13
	MOVO X13, 896(BX)
	PSRLQ $57, X14
	PAND X0, X14
	MOVO X14, 912(BX)
	PSRLQ $58, X15
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $59, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PSRLQ $60, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $61, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $62, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $63, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_2(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_2(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $3, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $2, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $6, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $12, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $14, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $16, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $18, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $20, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $22, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $24, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $26, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLQ $28, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $30, X2
	PAND X0, X2
	MOVO X2, 240(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $32, X3
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $34, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $36, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $38, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $40, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $42, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLQ $44, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $46, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $48, X11
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLQ $50, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLQ $52, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLQ $54, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $56, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLQ $58, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLQ $60, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $62, X3
	MOVO X3, 496(BX)
	MOVO 16(AX), X4
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $2, X5
	PAND X0, X5
	MOVO X5, 528(BX)
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $6, X7
	PAND X0, X7
	MOVO X7, 560(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $10, X9
	PAND X0, X9
	MOVO X9, 592(BX)
	PSRLQ $12, X10
	PAND X0, X10
	MOVO X10, 608(BX)
	PSRLQ $14, X11
	PAND X0, X11
	MOVO X11, 624(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X1
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 640(BX)
	PSRLQ $18, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $20, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $22, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	PSRLQ $24, X1
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $26, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $28, X3
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $30, X4
	PAND X0, X4
	MOVO X4, 752(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $32, X5
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $34, X6
	PAND X0, X6
	MOVO X6, 784(BX)
	PSRLQ $36, X7
	PAND X0, X7
	MOVO X7, 800(BX)
	PSRLQ $38, X8
	PAND X0, X8
	MOVO X8, 816(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $40, X9
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $42, X10
	PAND X0, X10
	MOVO X10, 848(BX)
	PSRLQ $44, X11
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $46, X12
	PAND X0, X12
	MOVO X12, 880(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	MOVO X13, X2
	PSRLQ $48, X13
	PAND X0, X13
	MOVO X13, 896(BX)
	PSRLQ $50, X14
	PAND X0, X14
	MOVO X14, 912(BX)
	PSRLQ $52, X15
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $54, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PSRLQ $56, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $58, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $60, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $62, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_3(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_3(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $7, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $3, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $9, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $12, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $15, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $18, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $21, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $24, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $27, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $30, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $33, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $36, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $39, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLQ $42, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $45, X2
	PAND X0, X2
	MOVO X2, 240(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $48, X3
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $51, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $54, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $57, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	PSRLQ $60, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $63, X8
	MOVO 16(AX), X9
	MOVO X9, X10
	PSLLQ $1, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 336(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $2, X10
	PAND X0, X10
	MOVO X10, 352(BX)
	PSRLQ $5, X11
	PAND X0, X11
	MOVO X11, 368(BX)
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLQ $11, X13
	PAND X0, X13
	MOVO X13, 400(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $14, X14
	PAND X0, X14
	MOVO X14, 416(BX)
	PSRLQ $17, X15
	PAND X0, X15
	MOVO X15, 432(BX)
	PSRLQ $20, X1
	PAND X0, X1
	MOVO X1, 448(BX)
	PSRLQ $23, X2
	PAND X0, X2
	MOVO X2, 464(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $26, X3
	PAND X0, X3
	MOVO X3, 480(BX)
	PSRLQ $29, X4
	PAND X0, X4
	MOVO X4, 496(BX)
	PSRLQ $32, X5
	PAND X0, X5
	MOVO X5, 512(BX)
	PSRLQ $35, X6
	PAND X0, X6
	MOVO X6, 528(BX)
	MOVO X7, X9
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $38, X7
	PAND X0, X7
	MOVO X7, 544(BX)
	PSRLQ $41, X9
	PAND X0, X9
	MOVO X9, 560(BX)
	PSRLQ $44, X8
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $47, X10
	PAND X0, X10
	MOVO X10, 592(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $50, X11
	PAND X0, X11
	MOVO X11, 608(BX)
	PSRLQ $53, X12
	PAND X0, X12
	MOVO X12, 624(BX)
	PSRLQ $56, X13
	PAND X0, X13
	MOVO X13, 640(BX)
	PSRLQ $59, X14
	PAND X0, X14
	MOVO X14, 656(BX)
	PSRLQ $62, X15
	MOVO 32(AX), X1
	MOVO X1, X2
	PSLLQ $2, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 672(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $1, X2
	PAND X0, X2
	MOVO X2, 688(BX)
	PSRLQ $4, X3
	PAND X0, X3
	MOVO X3, 704(BX)
	PSRLQ $7, X4
	PAND X0, X4
	MOVO X4, 720(BX)
	PSRLQ $10, X5
	PAND X0, X5
	MOVO X5, 736(BX)
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X8
	MOVO X6, X10
	PSRLQ $13, X6
	PAND X0, X6
	MOVO X6, 752(BX)
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $19, X9
	PAND X0, X9
	MOVO X9, 784(BX)
	PSRLQ $22, X8
	PAND X0, X8
	MOVO X8, 800(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $25, X10
	PAND X0, X10
	MOVO X10, 816(BX)
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 832(BX)
	PSRLQ $31, X12
	PAND X0, X12
	MOVO X12, 848(BX)
	PSRLQ $34, X13
	PAND X0, X13
	MOVO X13, 864(BX)
	MOVO X14, X1
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $37, X14
	PAND X0, X14
	MOVO X14, 880(BX)
	PSRLQ $40, X1
	PAND X0, X1
	MOVO X1, 896(BX)
	PSRLQ $43, X15
	PAND X0, X15
	MOVO X15, 912(BX)
	PSRLQ $46, X2
	PAND X0, X2
	MOVO X2, 928(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $49, X3
	PAND X0, X3
	MOVO X3, 944(BX)
	PSRLQ $52, X4
	PAND X0, X4
	MOVO X4, 960(BX)
	PSRLQ $55, X5
	PAND X0, X5
	MOVO X5, 976(BX)
	PSRLQ $58, X6
	PAND X0, X6
	MOVO X6, 992(BX)
	PSRLQ $61, X7
	MOVO X7, 1008(BX)
	RET

// func unpack64_4(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_4(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $15, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $4, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $16, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $20, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $24, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $28, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $32, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $36, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $40, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $44, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLQ $48, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $52, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLQ $56, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $60, X2
	MOVO X2, 240(BX)
	MOVO 16(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $8, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $12, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $20, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLQ $24, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $28, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $32, X11
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLQ $36, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLQ $40, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLQ $44, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $48, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLQ $52, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLQ $56, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $60, X3
	MOVO X3, 496(BX)
	MOVO 32(AX), X4
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 528(BX)
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $12, X7
	PAND X0, X7
	MOVO X7, 560(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $20, X9
	PAND X0, X9
	MOVO X9, 592(BX)
	PSRLQ $24, X10
	PAND X0, X10
	MOVO X10, 608(BX)
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 624(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X1
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 640(BX)
	PSRLQ $36, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $40, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $44, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	PSRLQ $48, X1
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $52, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $56, X3
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $60, X4
	MOVO X4, 752(BX)
	MOVO 48(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 784(BX)
	PSRLQ $8, X7
	PAND X0, X7
	MOVO X7, 800(BX)
	PSRLQ $12, X8
	PAND X0, X8
	MOVO X8, 816(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $20, X10
	PAND X0, X10
	MOVO X10, 848(BX)
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $28, X12
	PAND X0, X12
	MOVO X12, 880(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	MOVO X13, X2
	PSRLQ $32, X13
	PAND X0, X13
	MOVO X13, 896(BX)
	PSRLQ $36, X14
	PAND X0, X14
	MOVO X14, 912(BX)
	PSRLQ $40, X15
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $44, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PSRLQ $48, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $52, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $56, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $60, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_5(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_5(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $31, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $5, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $10, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $15, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $25, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $30, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $35, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $40, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $45, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $50, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $55, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	PSRLQ $60, X14
	MOVO 16(AX), X15
	MOVO X15, X1
	PSLLQ $4, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 192(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	PSRLQ $1, X1
	PAND X0, X1
	MOVO X1, 208(BX)
	PSRLQ $6, X2
	PAND X0, X2
	MOVO X2, 224(BX)
	PSRLQ $11, X3
	PAND X0, X3
	MOVO X3, 240(BX)
	PSRLQ $16, X4
	PAND X0, X4
	MOVO X4, 256(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $21, X5
	PAND X0, X5
	MOVO X5, 272(BX)
	PSRLQ $26, X6
	PAND X0, X6
	MOVO X6, 288(BX)
	PSRLQ $31, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	PSRLQ $36, X8
	PAND X0, X8
	MOVO X8, 320(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $41, X9
	PAND X0, X9
	MOVO X9, 336(BX)
	PSRLQ $46, X10
	PAND X0, X10
	MOVO X10, 352(BX)
	PSRLQ $51, X11
	PAND X0, X11
	MOVO X11, 368(BX)
	PSRLQ $56, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLQ $61, X13
	MOVO 32(AX), X15
	MOVO X15, X14
	PSLLQ $3, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 400(BX)
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 416(BX)
	PSRLQ $7, X1
	PAND X0, X1
	MOVO X1, 432(BX)
	PSRLQ $12, X2
	PAND X0, X2
	MOVO X2, 448(BX)
	PSRLQ $17, X3
	PAND X0, X3
	MOVO X3, 464(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $22, X4
	PAND X0, X4
	MOVO X4, 480(BX)
	PSRLQ $27, X5
	PAND X0, X5
	MOVO X5, 496(BX)
	PSRLQ $32, X6
	PAND X0, X6
	MOVO X6, 512(BX)
	PSRLQ $37, X7
	PAND X0, X7
	MOVO X7, 528(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $42, X8
	PAND X0, X8
	MOVO X8, 544(BX)
	PSRLQ $47, X9
	PAND X0, X9
	MOVO X9, 560(BX)
	PSRLQ $52, X10
	PAND X0, X10
	MOVO X10, 576(BX)
	PSRLQ $57, X11
	PAND X0, X11
	MOVO X11, 592(BX)
	PSRLQ $62, X12
	MOVO 48(AX), X15
	MOVO X15, X13
	PSLLQ $2, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 608(BX)
	MOVO X13, X14
	MOVO X13, X1
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $3, X13
	PAND X0, X13
	MOVO X13, 624(BX)
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 640(BX)
	PSRLQ $13, X1
	PAND X0, X1
	MOVO X1, 656(BX)
	PSRLQ $18, X2
	PAND X0, X2
	MOVO X2, 672(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $23, X3
	PAND X0, X3
	MOVO X3, 688(BX)
	PSRLQ $28, X4
	PAND X0, X4
	MOVO X4, 704(BX)
	PSRLQ $33, X5
	PAND X0, X5
	MOVO X5, 720(BX)
	PSRLQ $38, X6
	PAND X0, X6
	MOVO X6, 736(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $43, X7
	PAND X0, X7
	MOVO X7, 752(BX)
	PSRLQ $48, X8
	PAND X0, X8
	MOVO X8, 768(BX)
	PSRLQ $53, X9
	PAND X0, X9
	MOVO X9, 784(BX)
	PSRLQ $58, X10
	PAND X0, X10
	MOVO X10, 800(BX)
	PSRLQ $63, X11
	MOVO 64(AX), X15
	MOVO X15, X12
	PSLLQ $1, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 816(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X1
	MOVO X12, X2
	PSRLQ $4, X12
	PAND X0, X12
	MOVO X12, 832(BX)
	PSRLQ $9, X13
	PAND X0, X13
	MOVO X13, 848(BX)
	PSRLQ $14, X14
	PAND X0, X14
	MOVO X14, 864(BX)
	PSRLQ $19, X1
	PAND X0, X1
	MOVO X1, 880(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $24, X2
	PAND X0, X2
	MOVO X2, 896(BX)
	PSRLQ $29, X3
	PAND X0, X3
	MOVO X3, 912(BX)
	PSRLQ $34, X4
	PAND X0, X4
	MOVO X4, 928(BX)
	PSRLQ $39, X5
	PAND X0, X5
	MOVO X5, 944(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PSRLQ $44, X6
	PAND X0, X6
	MOVO X6, 960(BX)
	PSRLQ $49, X7
	PAND X0, X7
	MOVO X7, 976(BX)
	PSRLQ $54, X8
	PAND X0, X8
	MOVO X8, 992(BX)
	PSRLQ $59, X9
	MOVO X9, 1008(BX)
	RET

// func unpack64_6(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_6(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $63, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $6, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $12, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $24, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $30, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $36, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $42, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $48, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $54, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $60, X12
	MOVO 16(AX), X13
	MOVO X13, X14
	PSLLQ $4, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 160(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 176(BX)
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 192(BX)
	PSRLQ $14, X1
	PAND X0, X1
	MOVO X1, 208(BX)
	PSRLQ $20, X2
	PAND X0, X2
	MOVO X2, 224(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $26, X3
	PAND X0, X3
	MOVO X3, 240(BX)
	PSRLQ $32, X4
	PAND X0, X4
	MOVO X4, 256(BX)
	PSRLQ $38, X5
	PAND X0, X5
	MOVO X5, 272(BX)
	PSRLQ $44, X6
	PAND X0, X6
	MOVO X6, 288(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $50, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	PSRLQ $56, X8
	PAND X0, X8
	MOVO X8, 320(BX)
	PSRLQ $62, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 336(BX)
	MOVO X11, X13
	MOVO X11, X12
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $4, X11
	PAND X0, X11
	MOVO X11, 352(BX)
	PSRLQ $10, X13
	PAND X0, X13
	MOVO X13, 368(BX)
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLQ $22, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $28, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLQ $34, X1
	PAND X0, X1
	MOVO X1, 432(BX)
	PSRLQ $40, X2
	PAND X0, X2
	MOVO X2, 448(BX)
	PSRLQ $46, X3
	PAND X0, X3
	MOVO X3, 464(BX)
	MOVO X4, X5
	PSRLQ $52, X4
	PAND X0, X4
	MOVO X4, 480(BX)
	PSRLQ $58, X5
	MOVO X5, 496(BX)
	MOVO 48(AX), X6
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X10
	MOVO X6, X9
	PAND X0, X6
	MOVO X6, 512(BX)
	PSRLQ $6, X7
	PAND X0, X7
	MOVO X7, 528(BX)
	PSRLQ $12, X8
	PAND X0, X8
	MOVO X8, 544(BX)
	PSRLQ $18, X10
	PAND X0, X10
	MOVO X10, 560(BX)
	MOVO X9, X11
	MOVO X9, X13
	MOVO X9, X12
	MOVO X9, X14
	PSRLQ $24, X9
	PAND X0, X9
	MOVO X9, 576(BX)
	PSRLQ $30, X11
	PAND X0, X11
	MOVO X11, 592(BX)
	PSRLQ $36, X13
	PAND X0, X13
	MOVO X13, 608(BX)
	PSRLQ $42, X12
	PAND X0, X12
	MOVO X12, 624(BX)
	MOVO X14, X15
	MOVO X14, X1
	PSRLQ $48, X14
	PAND X0, X14
	MOVO X14, 640(BX)
	PSRLQ $54, X15
	PAND X0, X15
	MOVO X15, 656(BX)
	PSRLQ $60, X1
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $4, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 672(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $2, X3
	PAND X0, X3
	MOVO X3, 688(BX)
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 704(BX)
	PSRLQ $14, X5
	PAND X0, X5
	MOVO X5, 720(BX)
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 736(BX)
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X9
	MOVO X7, X11
	PSRLQ $26, X7
	PAND X0, X7
	MOVO X7, 752(BX)
	PSRLQ $32, X8
	PAND X0, X8
	MOVO X8, 768(BX)
	PSRLQ $38, X10
	PAND X0, X10
	MOVO X10, 784(BX)
	PSRLQ $44, X9
	PAND X0, X9
	MOVO X9, 800(BX)
	MOVO X11, X13
	MOVO X11, X12
	PSRLQ $50, X11
	PAND X0, X11
	MOVO X11, 816(BX)
	PSRLQ $56, X13
	PAND X0, X13
	MOVO X13, 832(BX)
	PSRLQ $62, X12
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 848(BX)
	MOVO X15, X2
	MOVO X15, X1
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $4, X15
	PAND X0, X15
	MOVO X15, 864(BX)
	PSRLQ $10, X2
	PAND X0, X2
	MOVO X2, 880(BX)
	PSRLQ $16, X1
	PAND X0, X1
	MOVO X1, 896(BX)
	PSRLQ $22, X3
	PAND X0, X3
	MOVO X3, 912(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $28, X4
	PAND X0, X4
	MOVO X4, 928(BX)
	PSRLQ $34, X5
	PAND X0, X5
	MOVO X5, 944(BX)
	PSRLQ $40, X6
	PAND X0, X6
	MOVO X6, 960(BX)
	PSRLQ $46, X7
	PAND X0, X7
	MOVO X7, 976(BX)
	MOVO X8, X10
	PSRLQ $52, X8
	PAND X0, X8
	MOVO X8, 992(BX)
	PSRLQ $58, X10
	MOVO X10, 1008(BX)
	RET

// func unpack64_7(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_7(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $127, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $7, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $14, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $21, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $28, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $35, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $42, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $49, X9
	PAND X0, X9
	MOVO X9, 112(BX)
	MOVO X10, X11
	PSRLQ $56, X10
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $63, X11
	MOVO 16(AX), X12
	MOVO X12, X13
	PSLLQ $1, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 144(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	MOVO X13, X2
	PSRLQ $6, X13
	PAND X0, X13
	MOVO X13, 160(BX)
	PSRLQ $13, X14
	PAND X0, X14
	MOVO X14, 176(BX)
	PSRLQ $20, X15
	PAND X0, X15
	MOVO X15, 192(BX)
	PSRLQ $27, X1
	PAND X0, X1
	MOVO X1, 208(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $34, X2
	PAND X0, X2
	MOVO X2, 224(BX)
	PSRLQ $41, X3
	PAND X0, X3
	MOVO X3, 240(BX)
	PSRLQ $48, X4
	PAND X0, X4
	MOVO X4, 256(BX)
	PSRLQ $55, X5
	PAND X0, X5
	MOVO X5, 272(BX)
	PSRLQ $62, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 288(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X12
	MOVO X8, X11
	PSRLQ $5, X8
	PAND X0, X8
	MOVO X8, 304(BX)
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 320(BX)
	PSRLQ $19, X10
	PAND X0, X10
	MOVO X10, 336(BX)
	PSRLQ $26, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	MOVO X11, X1
	PSRLQ $33, X11
	PAND X0, X11
	MOVO X11, 368(BX)
	PSRLQ $40, X13
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLQ $47, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	PSRLQ $54, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLQ $61, X1
	MOVO 48(AX), X2
	MOVO X2, X3
	PSLLQ $3, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X7
	MOVO X3, X6
	PSRLQ $4, X3
	PAND X0, X3
	MOVO X3, 448(BX)
	PSRLQ $11, X4
	PAND X0, X4
	MOVO X4, 464(BX)
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 480(BX)
	PSRLQ $25, X7
	PAND X0, X7
	MOVO X7, 496(BX)
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X10
	MOVO X6, X12
	PSRLQ $32, X6
	PAND X0, X6
	MOVO X6, 512(BX)
	PSRLQ $39, X8
	PAND X0, X8
	MOVO X8, 528(BX)
	PSRLQ $46, X9
	PAND X0, X9
	MOVO X9, 544(BX)
	PSRLQ $53, X10
	PAND X0, X10
	MOVO X10, 560(BX)
	PSRLQ $60, X12
	MOVO 64(AX), X11
	MOVO X11, X13
	PSLLQ $4, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 576(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X1
	PSRLQ $3, X13
	PAND X0, X13
	MOVO X13, 592(BX)
	PSRLQ $10, X14
	PAND X0, X14
	MOVO X14, 608(BX)
	PSRLQ $17, X15
	PAND X0, X15
	MOVO X15, 624(BX)
	PSRLQ $24, X2
	PAND X0, X2
	MOVO X2, 640(BX)
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	MOVO X1, X7
	PSRLQ $31, X1
	PAND X0, X1
	MOVO X1, 656(BX)
	PSRLQ $38, X3
	PAND X0, X3
	MOVO X3, 672(BX)
	PSRLQ $45, X4
	PAND X0, X4
	MOVO X4, 688(BX)
	PSRLQ $52, X5
	PAND X0, X5
	MOVO X5, 704(BX)
	PSRLQ $59, X7
	MOVO 80(AX), X6
	MOVO X6, X8
	PSLLQ $5, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 720(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $2, X8
	PAND X0, X8
	MOVO X8, 736(BX)
	PSRLQ $9, X9
	PAND X0, X9
	MOVO X9, 752(BX)
	PSRLQ $16, X10
	PAND X0, X10
	MOVO X10, 768(BX)
	PSRLQ $23, X11
	PAND X0, X11
	MOVO X11, 784(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X2
	PSRLQ $30, X12
	PAND X0, X12
	MOVO X12, 800(BX)
	PSRLQ $37, X13
	PAND X0, X13
	MOVO X13, 816(BX)
	PSRLQ $44, X14
	PAND X0, X14
	MOVO X14, 832(BX)
	PSRLQ $51, X15
	PAND X0, X15
	MOVO X15, 848(BX)
	PSRLQ $58, X2
	MOVO 96(AX), X1
	MOVO X1, X3
	PSLLQ $6, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 864(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $1, X3
	PAND X0, X3
	MOVO X3, 880(BX)
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 896(BX)
	PSRLQ $15, X5
	PAND X0, X5
	MOVO X5, 912(BX)
	PSRLQ $22, X6
	PAND X0, X6
	MOVO X6, 928(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $29, X7
	PAND X0, X7
	MOVO X7, 944(BX)
	PSRLQ $36, X8
	PAND X0, X8
	MOVO X8, 960(BX)
	PSRLQ $43, X9
	PAND X0, X9
	MOVO X9, 976(BX)
	PSRLQ $50, X10
	PAND X0, X10
	MOVO X10, 992(BX)
	PSRLQ $57, X11
	MOVO X11, 1008(BX)
	RET

// func unpack64_8(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_8(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $255, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $8, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $16, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $24, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PSRLQ $32, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $40, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $48, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $56, X9
	MOVO X9, 112(BX)
	MOVO 16(AX), X10
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $24, X13
	PAND X0, X13
	MOVO X13, 176(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLQ $32, X14
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $40, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLQ $48, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $56, X2
	MOVO X2, 240(BX)
	MOVO 32(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $24, X6
	PAND X0, X6
	MOVO X6, 304(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $40, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLQ $48, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $56, X10
	MOVO X10, 368(BX)
	MOVO 48(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLQ $24, X14
	PAND X0, X14
	MOVO X14, 432(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $32, X15
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLQ $40, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLQ $48, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $56, X3
	MOVO X3, 496(BX)
	MOVO 64(AX), X4
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $8, X5
	PAND X0, X5
	MOVO X5, 528(BX)
	PSRLQ $16, X6
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $24, X7
	PAND X0, X7
	MOVO X7, 560(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PSRLQ $32, X8
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $40, X9
	PAND X0, X9
	MOVO X9, 592(BX)
	PSRLQ $48, X10
	PAND X0, X10
	MOVO X10, 608(BX)
	PSRLQ $56, X11
	MOVO X11, 624(BX)
	MOVO 80(AX), X12
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X1
	PAND X0, X12
	MOVO X12, 640(BX)
	PSRLQ $8, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $24, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	PSRLQ $32, X1
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $40, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $48, X3
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $56, X4
	MOVO X4, 752(BX)
	MOVO 96(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 784(BX)
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 800(BX)
	PSRLQ $24, X8
	PAND X0, X8
	MOVO X8, 816(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PSRLQ $32, X9
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $40, X10
	PAND X0, X10
	MOVO X10, 848(BX)
	PSRLQ $48, X11
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $56, X12
	MOVO X12, 880(BX)
	MOVO 112(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	MOVO X13, X2
	PAND X0, X13
	MOVO X13, 896(BX)
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 912(BX)
	PSRLQ $16, X15
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $24, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PSRLQ $32, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $40, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $48, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $56, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_9(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_9(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $511, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $9, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $18, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $27, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PSRLQ $36, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $45, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $54, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $63, X9
	MOVO 16(AX), X10
	MOVO X10, X11
	PSLLQ $1, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLQ $17, X12
	PAND X0, X12
	MOVO X12, 144(BX)
	PSRLQ $26, X13
	PAND X0, X13
	MOVO X13, 160(BX)
	PSRLQ $35, X14
	PAND X0, X14
	MOVO X14, 176(BX)
	MOVO X15, X1
	MOVO X15, X2
	PSRLQ $44, X15
	PAND X0, X15
	MOVO X15, 192(BX)
	PSRLQ $53, X1
	PAND X0, X1
	MOVO X1, 208(BX)
	PSRLQ $62, X2
	MOVO 32(AX), X3
	MOVO X3, X4
	PSLLQ $2, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 224(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $7, X4
	PAND X0, X4
	MOVO X4, 240(BX)
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 256(BX)
	PSRLQ $25, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLQ $34, X7
	PAND X0, X7
	MOVO X7, 288(BX)
	MOVO X8, X10
	MOVO X8, X9
	PSRLQ $43, X8
	PAND X0, X8
	MOVO X8, 304(BX)
	PSRLQ $52, X10
	PAND X0, X10
	MOVO X10, 320(BX)
	PSRLQ $61, X9
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $3, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 336(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X1
	PSRLQ $6, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLQ $15, X13
	PAND X0, X13
	MOVO X13, 368(BX)
	PSRLQ $24, X14
	PAND X0, X14
	MOVO X14, 384(BX)
	PSRLQ $33, X15
	PAND X0, X15
	MOVO X15, 400(BX)
	MOVO X1, X3
	MOVO X1, X2
	PSRLQ $42, X1
	PAND X0, X1
	MOVO X1, 416(BX)
	PSRLQ $51, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	PSRLQ $60, X2
	MOVO 64(AX), X4
	MOVO X4, X5
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 448(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X10
	PSRLQ $5, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLQ $14, X6
	PAND X0, X6
	MOVO X6, 480(BX)
	PSRLQ $23, X7
	PAND X0, X7
	MOVO X7, 496(BX)
	PSRLQ $32, X8
	PAND X0, X8
	MOVO X8, 512(BX)
	MOVO X10, X11
	MOVO X10, X9
	PSRLQ $41, X10
	PAND X0, X10
	MOVO X10, 528(BX)
	PSRLQ $50, X11
	PAND X0, X11
	MOVO X11, 544(BX)
	PSRLQ $59, X9
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $5, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 560(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	MOVO X13, X3
	PSRLQ $4, X13
	PAND X0, X13
	MOVO X13, 576(BX)
	PSRLQ $13, X14
	PAND X0, X14
	MOVO X14, 592(BX)
	PSRLQ $22, X15
	PAND X0, X15
	MOVO X15, 608(BX)
	PSRLQ $31, X1
	PAND X0, X1
	MOVO X1, 624(BX)
	MOVO X3, X4
	MOVO X3, X2
	PSRLQ $40, X3
	PAND X0, X3
	MOVO X3, 640(BX)
	PSRLQ $49, X4
	PAND X0, X4
	MOVO X4, 656(BX)
	PSRLQ $58, X2
	MOVO 96(AX), X5
	MOVO X5, X6
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 672(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X10
	MOVO X6, X11
	PSRLQ $3, X6
	PAND X0, X6
	MOVO X6, 688(BX)
	PSRLQ $12, X7
	PAND X0, X7
	MOVO X7, 704(BX)
	PSRLQ $21, X8
	PAND X0, X8
	MOVO X8, 720(BX)
	PSRLQ $30, X10
	PAND X0, X10
	MOVO X10, 736(BX)
	MOVO X11, X12
	MOVO X11, X9
	PSRLQ $39, X11
	PAND X0, X11
	MOVO X11, 752(BX)
	PSRLQ $48, X12
	PAND X0, X12
	MOVO X12, 768(BX)
	PSRLQ $57, X9
	MOVO 112(AX), X13
	MOVO X13, X14
	PSLLQ $7, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 784(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 800(BX)
	PSRLQ $11, X15
	PAND X0, X15
	MOVO X15, 816(BX)
	PSRLQ $20, X1
	PAND X0, X1
	MOVO X1, 832(BX)
	PSRLQ $29, X3
	PAND X0, X3
	MOVO X3, 848(BX)
	MOVO X4, X5
	MOVO X4, X2
	PSRLQ $38, X4
	PAND X0, X4
	MOVO X4, 864(BX)
	PSRLQ $47, X5
	PAND X0, X5
	MOVO X5, 880(BX)
	PSRLQ $56, X2
	MOVO 128(AX), X6
	MOVO X6, X7
	PSLLQ $8, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 896(BX)
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X11
	MOVO X7, X12
	PSRLQ $1, X7
	PAND X0, X7
	MOVO X7, 912(BX)
	PSRLQ $10, X8
	PAND X0, X8
	MOVO X8, 928(BX)
	PSRLQ $19, X10
	PAND X0, X10
	MOVO X10, 944(BX)
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 960(BX)
	MOVO X12, X13
	MOVO X12, X9
	PSRLQ $37, X12
	PAND X0, X12
	MOVO X12, 976(BX)
	PSRLQ $46, X13
	PAND X0, X13
	MOVO X13, 992(BX)
	PSRLQ $55, X9
	MOVO X9, 1008(BX)
	RET

// func unpack64_10(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_10(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1023, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $10, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $20, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $30, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $40, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $50, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $60, X8
	MOVO 16(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 96(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $6, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLQ $16, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLQ $26, X12
	PAND X0, X12
	MOVO X12, 144(BX)
	PSRLQ $36, X13
	PAND X0, X13
	MOVO X13, 160(BX)
	MOVO X14, X15
	PSRLQ $46, X14
	PAND X0, X14
	MOVO X14, 176(BX)
	PSRLQ $56, X15
	MOVO 32(AX), X1
	MOVO X1, X2
	PSLLQ $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 192(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $2, X2
	PAND X0, X2
	MOVO X2, 208(BX)
	PSRLQ $12, X3
	PAND X0, X3
	MOVO X3, 224(BX)
	PSRLQ $22, X4
	PAND X0, X4
	MOVO X4, 240(BX)
	PSRLQ $32, X5
	PAND X0, X5
	MOVO X5, 256(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $42, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLQ $52, X7
	PAND X0, X7
	MOVO X7, 288(BX)
	PSRLQ $62, X9
	MOVO 48(AX), X8
	MOVO X8, X10
	PSLLQ $2, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 304(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 320(BX)
	PSRLQ $18, X11
	PAND X0, X11
	MOVO X11, 336(BX)
	PSRLQ $28, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLQ $38, X13
	PAND X0, X13
	MOVO X13, 368(BX)
	MOVO X14, X1
	PSRLQ $48, X14
	PAND X0, X14
	MOVO X14, 384(BX)
	PSRLQ $58, X1
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLQ $6, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 400(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $4, X2
	PAND X0, X2
	MOVO X2, 416(BX)
	PSRLQ $14, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	PSRLQ $24, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLQ $34, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	MOVO X6, X7
	PSRLQ $44, X6
	PAND X0, X6
	MOVO X6, 480(BX)
	PSRLQ $54, X7
	MOVO X7, 496(BX)
	MOVO 80(AX), X8
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PAND X0, X8
	MOVO X8, 512(BX)
	PSRLQ $10, X9
	PAND X0, X9
	MOVO X9, 528(BX)
	PSRLQ $20, X10
	PAND X0, X10
	MOVO X10, 544(BX)
	PSRLQ $30, X11
	PAND X0, X11
	MOVO X11, 560(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $40, X12
	PAND X0, X12
	MOVO X12, 576(BX)
	PSRLQ $50, X13
	PAND X0, X13
	MOVO X13, 592(BX)
	PSRLQ $60, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $4, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 608(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	PSRLQ $6, X1
	PAND X0, X1
	MOVO X1, 624(BX)
	PSRLQ $16, X2
	PAND X0, X2
	MOVO X2, 640(BX)
	PSRLQ $26, X3
	PAND X0, X3
	MOVO X3, 656(BX)
	PSRLQ $36, X4
	PAND X0, X4
	MOVO X4, 672(BX)
	MOVO X5, X6
	PSRLQ $46, X5
	PAND X0, X5
	MOVO X5, 688(BX)
	PSRLQ $56, X6
	MOVO 112(AX), X7
	MOVO X7, X8
	PSLLQ $8, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 704(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $2, X8
	PAND X0, X8
	MOVO X8, 720(BX)
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 736(BX)
	PSRLQ $22, X10
	PAND X0, X10
	MOVO X10, 752(BX)
	PSRLQ $32, X11
	PAND X0, X11
	MOVO X11, 768(BX)
	MOVO X12, X13
	MOVO X12, X15
	PSRLQ $42, X12
	PAND X0, X12
	MOVO X12, 784(BX)
	PSRLQ $52, X13
	PAND X0, X13
	MOVO X13, 800(BX)
	PSRLQ $62, X15
	MOVO 128(AX), X14
	MOVO X14, X1
	PSLLQ $2, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 816(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 832(BX)
	PSRLQ $18, X2
	PAND X0, X2
	MOVO X2, 848(BX)
	PSRLQ $28, X3
	PAND X0, X3
	MOVO X3, 864(BX)
	PSRLQ $38, X4
	PAND X0, X4
	MOVO X4, 880(BX)
	MOVO X5, X7
	PSRLQ $48, X5
	PAND X0, X5
	MOVO X5, 896(BX)
	PSRLQ $58, X7
	MOVO 144(AX), X6
	MOVO X6, X8
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 912(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $4, X8
	PAND X0, X8
	MOVO X8, 928(BX)
	PSRLQ $14, X9
	PAND X0, X9
	MOVO X9, 944(BX)
	PSRLQ $24, X10
	PAND X0, X10
	MOVO X10, 960(BX)
	PSRLQ $34, X11
	PAND X0, X11
	MOVO X11, 976(BX)
	MOVO X12, X13
	PSRLQ $44, X12
	PAND X0, X12
	MOVO X12, 992(BX)
	PSRLQ $54, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_11(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_11(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $2047, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $11, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $22, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $33, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	PSRLQ $44, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $55, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLQ $9, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 80(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $2, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $13, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLQ $35, X12
	PAND X0, X12
	MOVO X12, 144(BX)
	MOVO X13, X14
	PSRLQ $46, X13
	PAND X0, X13
	MOVO X13, 160(BX)
	PSRLQ $57, X14
	MOVO 32(AX), X15
	MOVO X15, X1
	PSLLQ $7, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 176(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	MOVO X1, X5
	PSRLQ $4, X1
	PAND X0, X1
	MOVO X1, 192(BX)
	PSRLQ $15, X2
	PAND X0, X2
	MOVO X2, 208(BX)
	PSRLQ $26, X3
	PAND X0, X3
	MOVO X3, 224(BX)
	PSRLQ $37, X4
	PAND X0, X4
	MOVO X4, 240(BX)
	MOVO X5, X6
	PSRLQ $48, X5
	PAND X0, X5
	MOVO X5, 256(BX)
	PSRLQ $59, X6
	MOVO 48(AX), X8
	MOVO X8, X7
	PSLLQ $5, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 272(BX)
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	MOVO X7, X12
	PSRLQ $6, X7
	PAND X0, X7
	MOVO X7, 288(BX)
	PSRLQ $17, X9
	PAND X0, X9
	MOVO X9, 304(BX)
	PSRLQ $28, X10
	PAND X0, X10
	MOVO X10, 320(BX)
	PSRLQ $39, X11
	PAND X0, X11
	MOVO X11, 336(BX)
	MOVO X12, X13
	PSRLQ $50, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLQ $61, X13
	MOVO 64(AX), X15
	MOVO X15, X14
	PSLLQ $3, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 368(BX)
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 384(BX)
	PSRLQ $19, X1
	PAND X0, X1
	MOVO X1, 400(BX)
	PSRLQ $30, X2
	PAND X0, X2
	MOVO X2, 416(BX)
	PSRLQ $41, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	MOVO X4, X5
	PSRLQ $52, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLQ $63, X5
	MOVO 80(AX), X8
	MOVO X8, X6
	PSLLQ $1, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 464(BX)
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X10
	MOVO X6, X11
	PSRLQ $10, X6
	PAND X0, X6
	MOVO X6, 480(BX)
	PSRLQ $21, X7
	PAND X0, X7
	MOVO X7, 496(BX)
	PSRLQ $32, X9
	PAND X0, X9
	MOVO X9, 512(BX)
	PSRLQ $43, X10
	PAND X0, X10
	MOVO X10, 528(BX)
	PSRLQ $54, X11
	MOVO 96(AX), X12
	MOVO X12, X15
	PSLLQ $10, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 544(BX)
	MOVO X15, X13
	MOVO X15, X14
	MOVO X15, X1
	MOVO X15, X2
	PSRLQ $1, X15
	PAND X0, X15
	MOVO X15, 560(BX)
	PSRLQ $12, X13
	PAND X0, X13
	MOVO X13, 576(BX)
	PSRLQ $23, X14
	PAND X0, X14
	MOVO X14, 592(BX)
	PSRLQ $34, X1
	PAND X0, X1
	MOVO X1, 608(BX)
	MOVO X2, X3
	PSRLQ $45, X2
	PAND X0, X2
	MOVO X2, 624(BX)
	PSRLQ $56, X3
	MOVO 112(AX), X4
	MOVO X4, X8
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 640(BX)
	MOVO X8, X5
	MOVO X8, X6
	MOVO X8, X7
	MOVO X8, X9
	PSRLQ $3, X8
	PAND X0, X8
	MOVO X8, 656(BX)
	PSRLQ $14, X5
	PAND X0, X5
	MOVO X5, 672(BX)
	PSRLQ $25, X6
	PAND X0, X6
	MOVO X6, 688(BX)
	PSRLQ $36, X7
	PAND X0, X7
	MOVO X7, 704(BX)
	MOVO X9, X10
	PSRLQ $47, X9
	PAND X0, X9
	MOVO X9, 720(BX)
	PSRLQ $58, X10
	MOVO 128(AX), X12
	MOVO X12, X11
	PSLLQ $6, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 736(BX)
	MOVO X11, X15
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X1
	PSRLQ $5, X11
	PAND X0, X11
	MOVO X11, 752(BX)
	PSRLQ $16, X15
	PAND X0, X15
	MOVO X15, 768(BX)
	PSRLQ $27, X13
	PAND X0, X13
	MOVO X13, 784(BX)
	PSRLQ $38, X14
	PAND X0, X14
	MOVO X14, 800(BX)
	MOVO X1, X2
	PSRLQ $49, X1
	PAND X0, X1
	MOVO X1, 816(BX)
	PSRLQ $60, X2
	MOVO 144(AX), X4
	MOVO X4, X3
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 832(BX)
	MOVO X3, X8
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $7, X3
	PAND X0, X3
	MOVO X3, 848(BX)
	PSRLQ $18, X8
	PAND X0, X8
	MOVO X8, 864(BX)
	PSRLQ $29, X5
	PAND X0, X5
	MOVO X5, 880(BX)
	PSRLQ $40, X6
	PAND X0, X6
	MOVO X6, 896(BX)
	MOVO X7, X9
	PSRLQ $51, X7
	PAND X0, X7
	MOVO X7, 912(BX)
	PSRLQ $62, X9
	MOVO 160(AX), X12
	MOVO X12, X10
	PSLLQ $2, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 928(BX)
	MOVO X10, X11
	MOVO X10, X15
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $9, X10
	PAND X0, X10
	MOVO X10, 944(BX)
	PSRLQ $20, X11
	PAND X0, X11
	MOVO X11, 960(BX)
	PSRLQ $31, X15
	PAND X0, X15
	MOVO X15, 976(BX)
	PSRLQ $42, X13
	PAND X0, X13
	MOVO X13, 992(BX)
	PSRLQ $53, X14
	MOVO X14, 1008(BX)
	RET

// func unpack64_12(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_12(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $4095, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $12, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $24, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $36, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	MOVO X6, X7
	PSRLQ $48, X6
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $60, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 80(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $8, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $20, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLQ $32, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLQ $44, X12
	PAND X0, X12
	MOVO X12, 144(BX)
	PSRLQ $56, X13
	MOVO 32(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 160(BX)
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $4, X15
	PAND X0, X15
	MOVO X15, 176(BX)
	PSRLQ $16, X1
	PAND X0, X1
	MOVO X1, 192(BX)
	PSRLQ $28, X2
	PAND X0, X2
	MOVO X2, 208(BX)
	PSRLQ $40, X3
	PAND X0, X3
	MOVO X3, 224(BX)
	PSRLQ $52, X4
	MOVO X4, 240(BX)
	MOVO 48(AX), X5
	MOVO X5, X6
	MOVO X5, X8
	MOVO X5, X7
	MOVO X5, X9
	PAND X0, X5
	MOVO X5, 256(BX)
	PSRLQ $12, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLQ $24, X8
	PAND X0, X8
	MOVO X8, 288(BX)
	PSRLQ $36, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	MOVO X9, X10
	PSRLQ $48, X9
	PAND X0, X9
	MOVO X9, 320(BX)
	PSRLQ $60, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 336(BX)
	MOVO X12, X14
	MOVO X12, X13
	MOVO X12, X15
	MOVO X12, X1
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLQ $20, X14
	PAND X0, X14
	MOVO X14, 368(BX)
	PSRLQ $32, X13
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLQ $44, X15
	PAND X0, X15
	MOVO X15, 400(BX)
	PSRLQ $56, X1
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $8, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 416(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X8
	PSRLQ $4, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	PSRLQ $16, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLQ $28, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLQ $40, X6
	PAND X0, X6
	MOVO X6, 480(BX)
	PSRLQ $52, X8
	MOVO X8, 496(BX)
	MOVO 96(AX), X7
	MOVO X7, X9
	MOVO X7, X11
	MOVO X7, X10
	MOVO X7, X12
	PAND X0, X7
	MOVO X7, 512(BX)
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 528(BX)
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 544(BX)
	PSRLQ $36, X10
	PAND X0, X10
	MOVO X10, 560(BX)
	MOVO X12, X14
	PSRLQ $48, X12
	PAND X0, X12
	MOVO X12, 576(BX)
	PSRLQ $60, X14
	MOVO 112(AX), X13
	MOVO X13, X15
	PSLLQ $4, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 592(BX)
	MOVO X15, X2
	MOVO X15, X1
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 608(BX)
	PSRLQ $20, X2
	PAND X0, X2
	MOVO X2, 624(BX)
	PSRLQ $32, X1
	PAND X0, X1
	MOVO X1, 640(BX)
	PSRLQ $44, X3
	PAND X0, X3
	MOVO X3, 656(BX)
	PSRLQ $56, X4
	MOVO 128(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 672(BX)
	MOVO X6, X8
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X11
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 688(BX)
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 704(BX)
	PSRLQ $28, X7
	PAND X0, X7
	MOVO X7, 720(BX)
	PSRLQ $40, X9
	PAND X0, X9
	MOVO X9, 736(BX)
	PSRLQ $52, X11
	MOVO X11, 752(BX)
	MOVO 144(AX), X10
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	MOVO X10, X15
	PAND X0, X10
	MOVO X10, 768(BX)
	PSRLQ $12, X12
	PAND X0, X12
	MOVO X12, 784(BX)
	PSRLQ $24, X13
	PAND X0, X13
	MOVO X13, 800(BX)
	PSRLQ $36, X14
	PAND X0, X14
	MOVO X14, 816(BX)
	MOVO X15, X2
	PSRLQ $48, X15
	PAND X0, X15
	MOVO X15, 832(BX)
	PSRLQ $60, X2
	MOVO 160(AX), X1
	MOVO X1, X3
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 848(BX)
	MOVO X3, X5
	MOVO X3, X4
	MOVO X3, X6
	MOVO X3, X8
	PSRLQ $8, X3
	PAND X0, X3
	MOVO X3, 864(BX)
	PSRLQ $20, X5
	PAND X0, X5
	MOVO X5, 880(BX)
	PSRLQ $32, X4
	PAND X0, X4
	MOVO X4, 896(BX)
	PSRLQ $44, X6
	PAND X0, X6
	MOVO X6, 912(BX)
	PSRLQ $56, X8
	MOVO 176(AX), X7
	MOVO X7, X9
	PSLLQ $8, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 928(BX)
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 944(BX)
	PSRLQ $16, X11
	PAND X0, X11
	MOVO X11, 960(BX)
	PSRLQ $28, X10
	PAND X0, X10
	MOVO X10, 976(BX)
	PSRLQ $40, X12
	PAND X0, X12
	MOVO X12, 992(BX)
	PSRLQ $52, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_13(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_13(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $8191, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $13, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $26, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $39, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	PSRLQ $52, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $12, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 64(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $1, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $14, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $27, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLQ $40, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLQ $53, X12
	MOVO 32(AX), X13
	MOVO X13, X14
	PSLLQ $11, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 144(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 160(BX)
	PSRLQ $15, X15
	PAND X0, X15
	MOVO X15, 176(BX)
	PSRLQ $28, X1
	PAND X0, X1
	MOVO X1, 192(BX)
	PSRLQ $41, X2
	PAND X0, X2
	MOVO X2, 208(BX)
	PSRLQ $54, X3
	MOVO 48(AX), X4
	MOVO X4, X5
	PSLLQ $10, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 224(BX)
	MOVO X5, X7
	MOVO X5, X6
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $3, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $29, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLQ $42, X8
	PAND X0, X8
	MOVO X8, 288(BX)
	PSRLQ $55, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $9, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 304(BX)
	MOVO X11, X13
	MOVO X11, X12
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $4, X11
	PAND X0, X11
	MOVO X11, 320(BX)
	PSRLQ $17, X13
	PAND X0, X13
	MOVO X13, 336(BX)
	PSRLQ $30, X12
	PAND X0, X12
	MOVO X12, 352(BX)
	PSRLQ $43, X14
	PAND X0, X14
	MOVO X14, 368(BX)
	PSRLQ $56, X15
	MOVO 80(AX), X1
	MOVO X1, X2
	PSLLQ $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 384(BX)
	MOVO X2, X4
	MOVO X2, X3
	MOVO X2, X5
	MOVO X2, X7
	PSRLQ $5, X2
	PAND X0, X2
	MOVO X2, 400(BX)
	PSRLQ $18, X4
	PAND X0, X4
	MOVO X4, 416(BX)
	PSRLQ $31, X3
	PAND X0, X3
	MOVO X3, 432(BX)
	PSRLQ $44, X5
	PAND X0, X5
	MOVO X5, 448(BX)
	PSRLQ $57, X7
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLQ $7, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 464(BX)
	MOVO X8, X10
	MOVO X8, X9
	MOVO X8, X11
	MOVO X8, X13
	PSRLQ $6, X8
	PAND X0, X8
	MOVO X8, 480(BX)
	PSRLQ $19, X10
	PAND X0, X10
	MOVO X10, 496(BX)
	PSRLQ $32, X9
	PAND X0, X9
	MOVO X9, 512(BX)
	PSRLQ $45, X11
	PAND X0, X11
	MOVO X11, 528(BX)
	PSRLQ $58, X13
	MOVO 112(AX), X12
	MOVO X12, X14
	PSLLQ $6, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 544(BX)
	MOVO X14, X1
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X4
	PSRLQ $7, X14
	PAND X0, X14
	MOVO X14, 560(BX)
	PSRLQ $20, X1
	PAND X0, X1
	MOVO X1, 576(BX)
	PSRLQ $33, X15
	PAND X0, X15
	MOVO X15, 592(BX)
	PSRLQ $46, X2
	PAND X0, X2
	MOVO X2, 608(BX)
	PSRLQ $59, X4
	MOVO 128(AX), X3
	MOVO X3, X5
	PSLLQ $5, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 624(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X10
	PSRLQ $8, X5
	PAND X0, X5
	MOVO X5, 640(BX)
	PSRLQ $21, X6
	PAND X0, X6
	MOVO X6, 656(BX)
	PSRLQ $34, X7
	PAND X0, X7
	MOVO X7, 672(BX)
	PSRLQ $47, X8
	PAND X0, X8
	MOVO X8, 688(BX)
	PSRLQ $60, X10
	MOVO 144(AX), X9
	MOVO X9, X11
	PSLLQ $4, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 704(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X1
	PSRLQ $9, X11
	PAND X0, X11
	MOVO X11, 720(BX)
	PSRLQ $22, X12
	PAND X0, X12
	MOVO X12, 736(BX)
	PSRLQ $35, X13
	PAND X0, X13
	MOVO X13, 752(BX)
	PSRLQ $48, X14
	PAND X0, X14
	MOVO X14, 768(BX)
	PSRLQ $61, X1
	MOVO 160(AX), X15
	MOVO X15, X2
	PSLLQ $3, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 784(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $10, X2
	PAND X0, X2
	MOVO X2, 800(BX)
	PSRLQ $23, X3
	PAND X0, X3
	MOVO X3, 816(BX)
	PSRLQ $36, X4
	PAND X0, X4
	MOVO X4, 832(BX)
	PSRLQ $49, X5
	PAND X0, X5
	MOVO X5, 848(BX)
	PSRLQ $62, X6
	MOVO 176(AX), X7
	MOVO X7, X8
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 864(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $11, X8
	PAND X0, X8
	MOVO X8, 880(BX)
	PSRLQ $24, X9
	PAND X0, X9
	MOVO X9, 896(BX)
	PSRLQ $37, X10
	PAND X0, X10
	MOVO X10, 912(BX)
	PSRLQ $50, X11
	PAND X0, X11
	MOVO X11, 928(BX)
	PSRLQ $63, X12
	MOVO 192(AX), X13
	MOVO X13, X14
	PSLLQ $1, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 944(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 960(BX)
	PSRLQ $25, X15
	PAND X0, X15
	MOVO X15, 976(BX)
	PSRLQ $38, X1
	PAND X0, X1
	MOVO X1, 992(BX)
	PSRLQ $51, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_14(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_14(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $16383, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $14, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $28, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $42, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	PSRLQ $56, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $8, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 64(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	PSRLQ $6, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $20, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $34, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLQ $48, X11
	PAND X0, X11
	MOVO X11, 128(BX)
	PSRLQ $62, X12
	MOVO 32(AX), X13
	MOVO X13, X14
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 144(BX)
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 160(BX)
	PSRLQ $26, X15
	PAND X0, X15
	MOVO X15, 176(BX)
	PSRLQ $40, X1
	PAND X0, X1
	MOVO X1, 192(BX)
	PSRLQ $54, X2
	MOVO 48(AX), X3
	MOVO X3, X4
	PSLLQ $10, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 208(BX)
	MOVO X4, X5
	MOVO X4, X7
	MOVO X4, X6
	MOVO X4, X8
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 224(BX)
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $46, X6
	PAND X0, X6
	MOVO X6, 272(BX)
	PSRLQ $60, X8
	MOVO 64(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 288(BX)
	MOVO X10, X11
	MOVO X10, X13
	MOVO X10, X12
	PSRLQ $10, X10
	PAND X0, X10
	MOVO X10, 304(BX)
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 320(BX)
	PSRLQ $38, X13
	PAND X0, X13
	MOVO X13, 336(BX)
	PSRLQ $52, X12
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 352(BX)
	MOVO X15, X1
	MOVO X15, X3
	MOVO X15, X2
	MOVO X15, X4
	PSRLQ $2, X15
	PAND X0, X15
	MOVO X15, 368(BX)
	PSRLQ $16, X1
	PAND X0, X1
	MOVO X1, 384(BX)
	PSRLQ $30, X3
	PAND X0, X3
	MOVO X3, 400(BX)
	PSRLQ $44, X2
	PAND X0, X2
	MOVO X2, 416(BX)
	PSRLQ $58, X4
	MOVO 96(AX), X5
	MOVO X5, X7
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 432(BX)
	MOVO X7, X6
	MOVO X7, X9
	MOVO X7, X8
	PSRLQ $8, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLQ $22, X6
	PAND X0, X6
	MOVO X6, 464(BX)
	PSRLQ $36, X9
	PAND X0, X9
	MOVO X9, 480(BX)
	PSRLQ $50, X8
	MOVO X8, 496(BX)
	MOVO 112(AX), X10
	MOVO X10, X11
	MOVO X10, X13
	MOVO X10, X14
	MOVO X10, X12
	PAND X0, X10
	MOVO X10, 512(BX)
	PSRLQ $14, X11
	PAND X0, X11
	MOVO X11, 528(BX)
	PSRLQ $28, X13
	PAND X0, X13
	MOVO X13, 544(BX)
	PSRLQ $42, X14
	PAND X0, X14
	MOVO X14, 560(BX)
	PSRLQ $56, X12
	MOVO 128(AX), X15
	MOVO X15, X1
	PSLLQ $8, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 576(BX)
	MOVO X1, X3
	MOVO X1, X2
	MOVO X1, X5
	MOVO X1, X4
	PSRLQ $6, X1
	PAND X0, X1
	MOVO X1, 592(BX)
	PSRLQ $20, X3
	PAND X0, X3
	MOVO X3, 608(BX)
	PSRLQ $34, X2
	PAND X0, X2
	MOVO X2, 624(BX)
	PSRLQ $48, X5
	PAND X0, X5
	MOVO X5, 640(BX)
	PSRLQ $62, X4
	MOVO 144(AX), X7
	MOVO X7, X6
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X4
	MOVO X4, 656(BX)
	MOVO X6, X9
	MOVO X6, X8
	MOVO X6, X10
	PSRLQ $12, X6
	PAND X0, X6
	MOVO X6, 672(BX)
	PSRLQ $26, X9
	PAND X0, X9
	MOVO X9, 688(BX)
	PSRLQ $40, X8
	PAND X0, X8
	MOVO X8, 704(BX)
	PSRLQ $54, X10
	MOVO 160(AX), X11
	MOVO X11, X13
	PSLLQ $10, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 720(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X12
	MOVO X13, X1
	PSRLQ $4, X13
	PAND X0, X13
	MOVO X13, 736(BX)
	PSRLQ $18, X14
	PAND X0, X14
	MOVO X14, 752(BX)
	PSRLQ $32, X15
	PAND X0, X15
	MOVO X15, 768(BX)
	PSRLQ $46, X12
	PAND X0, X12
	MOVO X12, 784(BX)
	PSRLQ $60, X1
	MOVO 176(AX), X3
	MOVO X3, X2
	PSLLQ $4, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 800(BX)
	MOVO X2, X5
	MOVO X2, X7
	MOVO X2, X4
	PSRLQ $10, X2
	PAND X0, X2
	MOVO X2, 816(BX)
	PSRLQ $24, X5
	PAND X0, X5
	MOVO X5, 832(BX)
	PSRLQ $38, X7
	PAND X0, X7
	MOVO X7, 848(BX)
	PSRLQ $52, X4
	MOVO 192(AX), X6
	MOVO X6, X9
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 864(BX)
	MOVO X9, X8
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X13
	PSRLQ $2, X9
	PAND X0, X9
	MOVO X9, 880(BX)
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 896(BX)
	PSRLQ $30, X11
	PAND X0, X11
	MOVO X11, 912(BX)
	PSRLQ $44, X10
	PAND X0, X10
	MOVO X10, 928(BX)
	PSRLQ $58, X13
	MOVO 208(AX), X14
	MOVO X14, X15
	PSLLQ $6, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 944(BX)
	MOVO X15, X12
	MOVO X15, X3
	MOVO X15, X1
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 960(BX)
	PSRLQ $22, X12
	PAND X0, X12
	MOVO X12, 976(BX)
	PSRLQ $36, X3
	PAND X0, X3
	MOVO X3, 992(BX)
	PSRLQ $50, X1
	MOVO X1, 1008(BX)
	RET

// func unpack64_15(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_15(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $32767, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $15, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $30, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $45, X5
	PAND X0, X5
	MOVO X5, 48(BX)
	PSRLQ $60, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 64(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PSRLQ $11, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $26, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $41, X10
	PAND X0, X10
	MOVO X10, 112(BX)
	PSRLQ $56, X11
	MOVO 32(AX), X12
	MOVO X12, X13
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 128(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	PSRLQ $7, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLQ $22, X14
	PAND X0, X14
	MOVO X14, 160(BX)
	PSRLQ $37, X15
	PAND X0, X15
	MOVO X15, 176(BX)
	PSRLQ $52, X1
	MOVO 48(AX), X2
	MOVO X2, X3
	PSLLQ $12, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 192(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X7
	MOVO X3, X6
	PSRLQ $3, X3
	PAND X0, X3
	MOVO X3, 208(BX)
	PSRLQ $18, X4
	PAND X0, X4
	MOVO X4, 224(BX)
	PSRLQ $33, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLQ $48, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $63, X6
	MOVO 64(AX), X8
	MOVO X8, X9
	PSLLQ $1, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 272(BX)
	MOVO X9, X10
	MOVO X9, X12
	MOVO X9, X11
	PSRLQ $14, X9
	PAND X0, X9
	MOVO X9, 288(BX)
	PSRLQ $29, X10
	PAND X0, X10
	MOVO X10, 304(BX)
	PSRLQ $44, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLQ $59, X11
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $5, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 336(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X1
	PSRLQ $10, X14
	PAND X0, X14
	MOVO X14, 352(BX)
	PSRLQ $25, X15
	PAND X0, X15
	MOVO X15, 368(BX)
	PSRLQ $40, X2
	PAND X0, X2
	MOVO X2, 384(BX)
	PSRLQ $55, X1
	MOVO 96(AX), X3
	MOVO X3, X4
	PSLLQ $9, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 400(BX)
	MOVO X4, X5
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 416(BX)
	PSRLQ $21, X5
	PAND X0, X5
	MOVO X5, 432(BX)
	PSRLQ $36, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLQ $51, X8
	MOVO 112(AX), X6
	MOVO X6, X9
	PSLLQ $13, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 464(BX)
	MOVO X9, X10
	MOVO X9, X12
	MOVO X9, X13
	MOVO X9, X11
	PSRLQ $2, X9
	PAND X0, X9
	MOVO X9, 480(BX)
	PSRLQ $17, X10
	PAND X0, X10
	MOVO X10, 496(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $47, X13
	PAND X0, X13
	MOVO X13, 528(BX)
	PSRLQ $62, X11
	MOVO 128(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 544(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X1
	PSRLQ $13, X15
	PAND X0, X15
	MOVO X15, 560(BX)
	PSRLQ $28, X2
	PAND X0, X2
	MOVO X2, 576(BX)
	PSRLQ $43, X3
	PAND X0, X3
	MOVO X3, 592(BX)
	PSRLQ $58, X1
	MOVO 144(AX), X4
	MOVO X4, X5
	PSLLQ $6, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 608(BX)
	MOVO X5, X7
	MOVO X5, X6
	MOVO X5, X8
	PSRLQ $9, X5
	PAND X0, X5
	MOVO X5, 624(BX)
	PSRLQ $24, X7
	PAND X0, X7
	MOVO X7, 640(BX)
	PSRLQ $39, X6
	PAND X0, X6
	MOVO X6, 656(BX)
	PSRLQ $54, X8
	MOVO 160(AX), X9
	MOVO X9, X10
	PSLLQ $10, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 672(BX)
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $5, X10
	PAND X0, X10
	MOVO X10, 688(BX)
	PSRLQ $20, X12
	PAND X0, X12
	MOVO X12, 704(BX)
	PSRLQ $35, X13
	PAND X0, X13
	MOVO X13, 720(BX)
	PSRLQ $50, X14
	MOVO 176(AX), X11
	MOVO X11, X15
	PSLLQ $14, X11
	PAND X0, X11
	POR X11, X14
	MOVO X14, 736(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X1
	PSRLQ $1, X15
	PAND X0, X15
	MOVO X15, 752(BX)
	PSRLQ $16, X2
	PAND X0, X2
	MOVO X2, 768(BX)
	PSRLQ $31, X3
	PAND X0, X3
	MOVO X3, 784(BX)
	PSRLQ $46, X4
	PAND X0, X4
	MOVO X4, 800(BX)
	PSRLQ $61, X1
	MOVO 192(AX), X5
	MOVO X5, X7
	PSLLQ $3, X5
	PAND X0, X5
	POR X5, X1
	MOVO X1, 816(BX)
	MOVO X7, X6
	MOVO X7, X9
	MOVO X7, X8
	PSRLQ $12, X7
	PAND X0, X7
	MOVO X7, 832(BX)
	PSRLQ $27, X6
	PAND X0, X6
	MOVO X6, 848(BX)
	PSRLQ $42, X9
	PAND X0, X9
	MOVO X9, 864(BX)
	PSRLQ $57, X8
	MOVO 208(AX), X10
	MOVO X10, X12
	PSLLQ $7, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 880(BX)
	MOVO X12, X13
	MOVO X12, X11
	MOVO X12, X14
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 896(BX)
	PSRLQ $23, X13
	PAND X0, X13
	MOVO X13, 912(BX)
	PSRLQ $38, X11
	PAND X0, X11
	MOVO X11, 928(BX)
	PSRLQ $53, X14
	MOVO 224(AX), X15
	MOVO X15, X2
	PSLLQ $11, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 944(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PSRLQ $4, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $19, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $34, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $49, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_16(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_16(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $65535, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $32, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $48, X5
	MOVO X5, 48(BX)
	MOVO 16(AX), X6
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 80(BX)
	PSRLQ $32, X8
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $48, X9
	MOVO X9, 112(BX)
	MOVO 32(AX), X10
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $16, X11
	PAND X0, X11
	MOVO X11, 144(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $48, X13
	MOVO X13, 176(BX)
	MOVO 48(AX), X14
	MOVO X14, X15
	MOVO X14, X1
	MOVO X14, X2
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $16, X15
	PAND X0, X15
	MOVO X15, 208(BX)
	PSRLQ $32, X1
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $48, X2
	MOVO X2, 240(BX)
	MOVO 64(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $16, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $32, X5
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $48, X6
	MOVO X6, 304(BX)
	MOVO 80(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 336(BX)
	PSRLQ $32, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $48, X10
	MOVO X10, 368(BX)
	MOVO 96(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 400(BX)
	PSRLQ $32, X13
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLQ $48, X14
	MOVO X14, 432(BX)
	MOVO 112(AX), X15
	MOVO X15, X1
	MOVO X15, X2
	MOVO X15, X3
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLQ $16, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLQ $32, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $48, X3
	MOVO X3, 496(BX)
	MOVO 128(AX), X4
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 528(BX)
	PSRLQ $32, X6
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $48, X7
	MOVO X7, 560(BX)
	MOVO 144(AX), X8
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 592(BX)
	PSRLQ $32, X10
	PAND X0, X10
	MOVO X10, 608(BX)
	PSRLQ $48, X11
	MOVO X11, 624(BX)
	MOVO 160(AX), X12
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	PAND X0, X12
	MOVO X12, 640(BX)
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $32, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $48, X15
	MOVO X15, 688(BX)
	MOVO 176(AX), X1
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $16, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $32, X3
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $48, X4
	MOVO X4, 752(BX)
	MOVO 192(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $16, X6
	PAND X0, X6
	MOVO X6, 784(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 800(BX)
	PSRLQ $48, X8
	MOVO X8, 816(BX)
	MOVO 208(AX), X9
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $16, X10
	PAND X0, X10
	MOVO X10, 848(BX)
	PSRLQ $32, X11
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $48, X12
	MOVO X12, 880(BX)
	MOVO 224(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X1
	PAND X0, X13
	MOVO X13, 896(BX)
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 912(BX)
	PSRLQ $32, X15
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $48, X1
	MOVO X1, 944(BX)
	MOVO 240(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $32, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $48, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_17(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_17(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $131071, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $17, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $34, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $51, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $13, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $4, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $21, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $38, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $55, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLQ $9, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 112(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLQ $25, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLQ $42, X14
	PAND X0, X14
	MOVO X14, 160(BX)
	PSRLQ $59, X15
	MOVO 48(AX), X1
	MOVO X1, X2
	PSLLQ $5, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 176(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X6
	PSRLQ $12, X2
	PAND X0, X2
	MOVO X2, 192(BX)
	PSRLQ $29, X3
	PAND X0, X3
	MOVO X3, 208(BX)
	PSRLQ $46, X4
	PAND X0, X4
	MOVO X4, 224(BX)
	PSRLQ $63, X6
	MOVO 64(AX), X5
	MOVO X5, X7
	PSLLQ $1, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 240(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $33, X8
	PAND X0, X8
	MOVO X8, 272(BX)
	PSRLQ $50, X9
	MOVO 80(AX), X11
	MOVO X11, X10
	PSLLQ $14, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 288(BX)
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $3, X10
	PAND X0, X10
	MOVO X10, 304(BX)
	PSRLQ $20, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLQ $37, X13
	PAND X0, X13
	MOVO X13, 336(BX)
	PSRLQ $54, X14
	MOVO 96(AX), X1
	MOVO X1, X15
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 352(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $7, X15
	PAND X0, X15
	MOVO X15, 368(BX)
	PSRLQ $24, X2
	PAND X0, X2
	MOVO X2, 384(BX)
	PSRLQ $41, X3
	PAND X0, X3
	MOVO X3, 400(BX)
	PSRLQ $58, X4
	MOVO 112(AX), X5
	MOVO X5, X6
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 416(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X11
	PSRLQ $11, X6
	PAND X0, X6
	MOVO X6, 432(BX)
	PSRLQ $28, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLQ $45, X8
	PAND X0, X8
	MOVO X8, 464(BX)
	PSRLQ $62, X11
	MOVO 128(AX), X9
	MOVO X9, X10
	PSLLQ $2, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 480(BX)
	MOVO X10, X12
	MOVO X10, X13
	PSRLQ $15, X10
	PAND X0, X10
	MOVO X10, 496(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $49, X13
	MOVO 144(AX), X1
	MOVO X1, X14
	PSLLQ $15, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 528(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 544(BX)
	PSRLQ $19, X15
	PAND X0, X15
	MOVO X15, 560(BX)
	PSRLQ $36, X2
	PAND X0, X2
	MOVO X2, 576(BX)
	PSRLQ $53, X3
	MOVO 160(AX), X5
	MOVO X5, X4
	PSLLQ $11, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 592(BX)
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 608(BX)
	PSRLQ $23, X6
	PAND X0, X6
	MOVO X6, 624(BX)
	PSRLQ $40, X7
	PAND X0, X7
	MOVO X7, 640(BX)
	PSRLQ $57, X8
	MOVO 176(AX), X9
	MOVO X9, X11
	PSLLQ $7, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 656(BX)
	MOVO X11, X10
	MOVO X11, X12
	MOVO X11, X1
	PSRLQ $10, X11
	PAND X0, X11
	MOVO X11, 672(BX)
	PSRLQ $27, X10
	PAND X0, X10
	MOVO X10, 688(BX)
	PSRLQ $44, X12
	PAND X0, X12
	MOVO X12, 704(BX)
	PSRLQ $61, X1
	MOVO 192(AX), X13
	MOVO X13, X14
	PSLLQ $3, X13
	PAND X0, X13
	POR X13, X1
	MOVO X1, 720(BX)
	MOVO X14, X15
	MOVO X14, X2
	PSRLQ $14, X14
	PAND X0, X14
	MOVO X14, 736(BX)
	PSRLQ $31, X15
	PAND X0, X15
	MOVO X15, 752(BX)
	PSRLQ $48, X2
	MOVO 208(AX), X5
	MOVO X5, X3
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 768(BX)
	MOVO X3, X4
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $1, X3
	PAND X0, X3
	MOVO X3, 784(BX)
	PSRLQ $18, X4
	PAND X0, X4
	MOVO X4, 800(BX)
	PSRLQ $35, X6
	PAND X0, X6
	MOVO X6, 816(BX)
	PSRLQ $52, X7
	MOVO 224(AX), X9
	MOVO X9, X8
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 832(BX)
	MOVO X8, X11
	MOVO X8, X10
	MOVO X8, X12
	PSRLQ $5, X8
	PAND X0, X8
	MOVO X8, 848(BX)
	PSRLQ $22, X11
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $39, X10
	PAND X0, X10
	MOVO X10, 880(BX)
	PSRLQ $56, X12
	MOVO 240(AX), X13
	MOVO X13, X1
	PSLLQ $8, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 896(BX)
	MOVO X1, X14
	MOVO X1, X15
	MOVO X1, X5
	PSRLQ $9, X1
	PAND X0, X1
	MOVO X1, 912(BX)
	PSRLQ $26, X14
	PAND X0, X14
	MOVO X14, 928(BX)
	PSRLQ $43, X15
	PAND X0, X15
	MOVO X15, 944(BX)
	PSRLQ $60, X5
	MOVO 256(AX), X2
	MOVO X2, X3
	PSLLQ $4, X2
	PAND X0, X2
	POR X2, X5
	MOVO X5, 960(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLQ $13, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $30, X4
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $47, X6
	MOVO X6, 1008(BX)
	RET

// func unpack64_18(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_18(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $262143, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $18, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $36, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $54, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $10, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $8, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $26, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $44, X9
	PAND X0, X9
	MOVO X9, 96(BX)
	PSRLQ $62, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 112(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLQ $34, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLQ $52, X14
	MOVO 48(AX), X15
	MOVO X15, X1
	PSLLQ $12, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 160(BX)
	MOVO X1, X2
	MOVO X1, X3
	MOVO X1, X4
	PSRLQ $6, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLQ $24, X2
	PAND X0, X2
	MOVO X2, 192(BX)
	PSRLQ $42, X3
	PAND X0, X3
	MOVO X3, 208(BX)
	PSRLQ $60, X4
	MOVO 64(AX), X6
	MOVO X6, X5
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 224(BX)
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $14, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $50, X8
	MOVO 80(AX), X9
	MOVO X9, X11
	PSLLQ $14, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 272(BX)
	MOVO X11, X10
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $4, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLQ $22, X10
	PAND X0, X10
	MOVO X10, 304(BX)
	PSRLQ $40, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLQ $58, X13
	MOVO 96(AX), X15
	MOVO X15, X14
	PSLLQ $6, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 336(BX)
	MOVO X14, X1
	MOVO X14, X2
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 352(BX)
	PSRLQ $30, X1
	PAND X0, X1
	MOVO X1, 368(BX)
	PSRLQ $48, X2
	MOVO 112(AX), X3
	MOVO X3, X6
	PSLLQ $16, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 384(BX)
	MOVO X6, X4
	MOVO X6, X5
	MOVO X6, X7
	PSRLQ $2, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLQ $20, X4
	PAND X0, X4
	MOVO X4, 416(BX)
	PSRLQ $38, X5
	PAND X0, X5
	MOVO X5, 432(BX)
	PSRLQ $56, X7
	MOVO 128(AX), X9
	MOVO X9, X8
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 448(BX)
	MOVO X8, X11
	MOVO X8, X10
	PSRLQ $10, X8
	PAND X0, X8
	MOVO X8, 464(BX)
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 480(BX)
	PSRLQ $46, X10
	MOVO X10, 496(BX)
	MOVO 144(AX), X12
	MOVO X12, X15
	MOVO X12, X13
	MOVO X12, X14
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $18, X15
	PAND X0, X15
	MOVO X15, 528(BX)
	PSRLQ $36, X13
	PAND X0, X13
	MOVO X13, 544(BX)
	PSRLQ $54, X14
	MOVO 160(AX), X1
	MOVO X1, X3
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 560(BX)
	MOVO X3, X2
	MOVO X3, X6
	MOVO X3, X4
	PSRLQ $8, X3
	PAND X0, X3
	MOVO X3, 576(BX)
	PSRLQ $26, X2
	PAND X0, X2
	MOVO X2, 592(BX)
	PSRLQ $44, X6
	PAND X0, X6
	MOVO X6, 608(BX)
	PSRLQ $62, X4
	MOVO 176(AX), X5
	MOVO X5, X9
	PSLLQ $2, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 624(BX)
	MOVO X9, X7
	MOVO X9, X8
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 640(BX)
	PSRLQ $34, X7
	PAND X0, X7
	MOVO X7, 656(BX)
	PSRLQ $52, X8
	MOVO 192(AX), X11
	MOVO X11, X10
	PSLLQ $12, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 672(BX)
	MOVO X10, X12
	MOVO X10, X15
	MOVO X10, X13
	PSRLQ $6, X10
	PAND X0, X10
	MOVO X10, 688(BX)
	PSRLQ $24, X12
	PAND X0, X12
	MOVO X12, 704(BX)
	PSRLQ $42, X15
	PAND X0, X15
	MOVO X15, 720(BX)
	PSRLQ $60, X13
	MOVO 208(AX), X1
	MOVO X1, X14
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 736(BX)
	MOVO X14, X3
	MOVO X14, X2
	PSRLQ $14, X14
	PAND X0, X14
	MOVO X14, 752(BX)
	PSRLQ $32, X3
	PAND X0, X3
	MOVO X3, 768(BX)
	PSRLQ $50, X2
	MOVO 224(AX), X6
	MOVO X6, X5
	PSLLQ $14, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 784(BX)
	MOVO X5, X4
	MOVO X5, X9
	MOVO X5, X7
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 800(BX)
	PSRLQ $22, X4
	PAND X0, X4
	MOVO X4, 816(BX)
	PSRLQ $40, X9
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $58, X7
	MOVO 240(AX), X11
	MOVO X11, X8
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 848(BX)
	MOVO X8, X10
	MOVO X8, X12
	PSRLQ $12, X8
	PAND X0, X8
	MOVO X8, 864(BX)
	PSRLQ $30, X10
	PAND X0, X10
	MOVO X10, 880(BX)
	PSRLQ $48, X12
	MOVO 256(AX), X15
	MOVO X15, X1
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 896(BX)
	MOVO X1, X13
	MOVO X1, X14
	MOVO X1, X3
	PSRLQ $2, X1
	PAND X0, X1
	MOVO X1, 912(BX)
	PSRLQ $20, X13
	PAND X0, X13
	MOVO X13, 928(BX)
	PSRLQ $38, X14
	PAND X0, X14
	MOVO X14, 944(BX)
	PSRLQ $56, X3
	MOVO 272(AX), X6
	MOVO X6, X2
	PSLLQ $8, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 960(BX)
	MOVO X2, X5
	MOVO X2, X4
	PSRLQ $10, X2
	PAND X0, X2
	MOVO X2, 976(BX)
	PSRLQ $28, X5
	PAND X0, X5
	MOVO X5, 992(BX)
	PSRLQ $46, X4
	MOVO X4, 1008(BX)
	RET

// func unpack64_19(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_19(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $524287, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $19, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $38, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $57, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $7, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $12, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $31, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $50, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $14, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 96(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $5, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLQ $24, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLQ $43, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLQ $62, X14
	MOVO 48(AX), X15
	MOVO X15, X1
	PSLLQ $2, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 160(BX)
	MOVO X1, X2
	MOVO X1, X3
	PSRLQ $17, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLQ $36, X2
	PAND X0, X2
	MOVO X2, 192(BX)
	PSRLQ $55, X3
	MOVO 64(AX), X4
	MOVO X4, X6
	PSLLQ $9, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 208(BX)
	MOVO X6, X5
	MOVO X6, X7
	PSRLQ $10, X6
	PAND X0, X6
	MOVO X6, 224(BX)
	PSRLQ $29, X5
	PAND X0, X5
	MOVO X5, 240(BX)
	PSRLQ $48, X7
	MOVO 80(AX), X8
	MOVO X8, X10
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 256(BX)
	MOVO X10, X9
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $3, X10
	PAND X0, X10
	MOVO X10, 272(BX)
	PSRLQ $22, X9
	PAND X0, X9
	MOVO X9, 288(BX)
	PSRLQ $41, X11
	PAND X0, X11
	MOVO X11, 304(BX)
	PSRLQ $60, X12
	MOVO 96(AX), X13
	MOVO X13, X15
	PSLLQ $4, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 320(BX)
	MOVO X15, X14
	MOVO X15, X1
	PSRLQ $15, X15
	PAND X0, X15
	MOVO X15, 336(BX)
	PSRLQ $34, X14
	PAND X0, X14
	MOVO X14, 352(BX)
	PSRLQ $53, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $11, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 368(BX)
	MOVO X4, X3
	MOVO X4, X6
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 384(BX)
	PSRLQ $27, X3
	PAND X0, X3
	MOVO X3, 400(BX)
	PSRLQ $46, X6
	MOVO 128(AX), X5
	MOVO X5, X8
	PSLLQ $18, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 416(BX)
	MOVO X8, X7
	MOVO X8, X10
	MOVO X8, X9
	PSRLQ $1, X8
	PAND X0, X8
	MOVO X8, 432(BX)
	PSRLQ $20, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLQ $39, X10
	PAND X0, X10
	MOVO X10, 464(BX)
	PSRLQ $58, X9
	MOVO 144(AX), X11
	MOVO X11, X13
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 480(BX)
	MOVO X13, X12
	MOVO X13, X15
	PSRLQ $13, X13
	PAND X0, X13
	MOVO X13, 496(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $51, X15
	MOVO 160(AX), X14
	MOVO X14, X2
	PSLLQ $13, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 528(BX)
	MOVO X2, X1
	MOVO X2, X4
	MOVO X2, X3
	PSRLQ $6, X2
	PAND X0, X2
	MOVO X2, 544(BX)
	PSRLQ $25, X1
	PAND X0, X1
	MOVO X1, 560(BX)
	PSRLQ $44, X4
	PAND X0, X4
	MOVO X4, 576(BX)
	PSRLQ $63, X3
	MOVO 176(AX), X5
	MOVO X5, X6
	PSLLQ $1, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 592(BX)
	MOVO X6, X8
	MOVO X6, X7
	PSRLQ $18, X6
	PAND X0, X6
	MOVO X6, 608(BX)
	PSRLQ $37, X8
	PAND X0, X8
	MOVO X8, 624(BX)
	PSRLQ $56, X7
	MOVO 192(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 640(BX)
	MOVO X11, X9
	MOVO X11, X13
	PSRLQ $11, X11
	PAND X0, X11
	MOVO X11, 656(BX)
	PSRLQ $30, X9
	PAND X0, X9
	MOVO X9, 672(BX)
	PSRLQ $49, X13
	MOVO 208(AX), X12
	MOVO X12, X14
	PSLLQ $15, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 688(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X1
	PSRLQ $4, X14
	PAND X0, X14
	MOVO X14, 704(BX)
	PSRLQ $23, X15
	PAND X0, X15
	MOVO X15, 720(BX)
	PSRLQ $42, X2
	PAND X0, X2
	MOVO X2, 736(BX)
	PSRLQ $61, X1
	MOVO 224(AX), X4
	MOVO X4, X5
	PSLLQ $3, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 752(BX)
	MOVO X5, X3
	MOVO X5, X6
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $35, X3
	PAND X0, X3
	MOVO X3, 784(BX)
	PSRLQ $54, X6
	MOVO 240(AX), X8
	MOVO X8, X10
	PSLLQ $10, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 800(BX)
	MOVO X10, X7
	MOVO X10, X11
	PSRLQ $9, X10
	PAND X0, X10
	MOVO X10, 816(BX)
	PSRLQ $28, X7
	PAND X0, X7
	MOVO X7, 832(BX)
	PSRLQ $47, X11
	MOVO 256(AX), X9
	MOVO X9, X12
	PSLLQ $17, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 848(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	PSRLQ $2, X12
	PAND X0, X12
	MOVO X12, 864(BX)
	PSRLQ $21, X13
	PAND X0, X13
	MOVO X13, 880(BX)
	PSRLQ $40, X14
	PAND X0, X14
	MOVO X14, 896(BX)
	PSRLQ $59, X15
	MOVO 272(AX), X2
	MOVO X2, X4
	PSLLQ $5, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 912(BX)
	MOVO X4, X1
	MOVO X4, X5
	PSRLQ $14, X4
	PAND X0, X4
	MOVO X4, 928(BX)
	PSRLQ $33, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	PSRLQ $52, X5
	MOVO 288(AX), X3
	MOVO X3, X8
	PSLLQ $12, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 960(BX)
	MOVO X8, X6
	MOVO X8, X10
	PSRLQ $7, X8
	PAND X0, X8
	MOVO X8, 976(BX)
	PSRLQ $26, X6
	PAND X0, X6
	MOVO X6, 992(BX)
	PSRLQ $45, X10
	MOVO X10, 1008(BX)
	RET

// func unpack64_20(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_20(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1048575, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $20, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $40, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $60, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $36, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $56, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 96(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $12, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLQ $52, X13
	MOVO 48(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 144(BX)
	MOVO X15, X1
	MOVO X15, X2
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 160(BX)
	PSRLQ $28, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLQ $48, X2
	MOVO 64(AX), X3
	MOVO X3, X4
	PSLLQ $16, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 192(BX)
	MOVO X4, X6
	MOVO X4, X5
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLQ $24, X6
	PAND X0, X6
	MOVO X6, 224(BX)
	PSRLQ $44, X5
	MOVO X5, 240(BX)
	MOVO 80(AX), X7
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X9
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $20, X8
	PAND X0, X8
	MOVO X8, 272(BX)
	PSRLQ $40, X10
	PAND X0, X10
	MOVO X10, 288(BX)
	PSRLQ $60, X9
	MOVO 96(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 304(BX)
	MOVO X12, X14
	MOVO X12, X13
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLQ $36, X14
	PAND X0, X14
	MOVO X14, 336(BX)
	PSRLQ $56, X13
	MOVO 112(AX), X15
	MOVO X15, X1
	PSLLQ $8, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 352(BX)
	MOVO X1, X3
	MOVO X1, X2
	PSRLQ $12, X1
	PAND X0, X1
	MOVO X1, 368(BX)
	PSRLQ $32, X3
	PAND X0, X3
	MOVO X3, 384(BX)
	PSRLQ $52, X2
	MOVO 128(AX), X4
	MOVO X4, X6
	PSLLQ $12, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 400(BX)
	MOVO X6, X5
	MOVO X6, X7
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 416(BX)
	PSRLQ $28, X5
	PAND X0, X5
	MOVO X5, 432(BX)
	PSRLQ $48, X7
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 448(BX)
	MOVO X10, X11
	MOVO X10, X9
	PSRLQ $4, X10
	PAND X0, X10
	MOVO X10, 464(BX)
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 480(BX)
	PSRLQ $44, X9
	MOVO X9, 496(BX)
	MOVO 160(AX), X12
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X13
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $20, X14
	PAND X0, X14
	MOVO X14, 528(BX)
	PSRLQ $40, X15
	PAND X0, X15
	MOVO X15, 544(BX)
	PSRLQ $60, X13
	MOVO 176(AX), X1
	MOVO X1, X3
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 560(BX)
	MOVO X3, X4
	MOVO X3, X2
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 576(BX)
	PSRLQ $36, X4
	PAND X0, X4
	MOVO X4, 592(BX)
	PSRLQ $56, X2
	MOVO 192(AX), X6
	MOVO X6, X5
	PSLLQ $8, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 608(BX)
	MOVO X5, X8
	MOVO X5, X7
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 624(BX)
	PSRLQ $32, X8
	PAND X0, X8
	MOVO X8, 640(BX)
	PSRLQ $52, X7
	MOVO 208(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 656(BX)
	MOVO X11, X9
	MOVO X11, X12
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 672(BX)
	PSRLQ $28, X9
	PAND X0, X9
	MOVO X9, 688(BX)
	PSRLQ $48, X12
	MOVO 224(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 704(BX)
	MOVO X15, X1
	MOVO X15, X13
	PSRLQ $4, X15
	PAND X0, X15
	MOVO X15, 720(BX)
	PSRLQ $24, X1
	PAND X0, X1
	MOVO X1, 736(BX)
	PSRLQ $44, X13
	MOVO X13, 752(BX)
	MOVO 240(AX), X3
	MOVO X3, X4
	MOVO X3, X6
	MOVO X3, X2
	PAND X0, X3
	MOVO X3, 768(BX)
	PSRLQ $20, X4
	PAND X0, X4
	MOVO X4, 784(BX)
	PSRLQ $40, X6
	PAND X0, X6
	MOVO X6, 800(BX)
	PSRLQ $60, X2
	MOVO 256(AX), X5
	MOVO X5, X8
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 816(BX)
	MOVO X8, X10
	MOVO X8, X7
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 832(BX)
	PSRLQ $36, X10
	PAND X0, X10
	MOVO X10, 848(BX)
	PSRLQ $56, X7
	MOVO 272(AX), X11
	MOVO X11, X9
	PSLLQ $8, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 864(BX)
	MOVO X9, X14
	MOVO X9, X12
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 880(BX)
	PSRLQ $32, X14
	PAND X0, X14
	MOVO X14, 896(BX)
	PSRLQ $52, X12
	MOVO 288(AX), X15
	MOVO X15, X1
	PSLLQ $12, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 912(BX)
	MOVO X1, X13
	MOVO X1, X3
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 928(BX)
	PSRLQ $28, X13
	PAND X0, X13
	MOVO X13, 944(BX)
	PSRLQ $48, X3
	MOVO 304(AX), X4
	MOVO X4, X6
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 960(BX)
	MOVO X6, X5
	MOVO X6, X2
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 976(BX)
	PSRLQ $24, X5
	PAND X0, X5
	MOVO X5, 992(BX)
	PSRLQ $44, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_21(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_21(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $2097151, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $21, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $42, X4
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $63, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $1, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $20, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $41, X8
	PAND X0, X8
	MOVO X8, 80(BX)
	PSRLQ $62, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 96(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $19, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLQ $40, X12
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLQ $61, X13
	MOVO 48(AX), X14
	MOVO X14, X15
	PSLLQ $3, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 144(BX)
	MOVO X15, X1
	MOVO X15, X2
	PSRLQ $18, X15
	PAND X0, X15
	MOVO X15, 160(BX)
	PSRLQ $39, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLQ $60, X2
	MOVO 64(AX), X3
	MOVO X3, X4
	PSLLQ $4, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 192(BX)
	MOVO X4, X6
	MOVO X4, X5
	PSRLQ $17, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLQ $38, X6
	PAND X0, X6
	MOVO X6, 224(BX)
	PSRLQ $59, X5
	MOVO 80(AX), X7
	MOVO X7, X8
	PSLLQ $5, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 240(BX)
	MOVO X8, X10
	MOVO X8, X9
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 256(BX)
	PSRLQ $37, X10
	PAND X0, X10
	MOVO X10, 272(BX)
	PSRLQ $58, X9
	MOVO 96(AX), X11
	MOVO X11, X12
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 288(BX)
	MOVO X12, X14
	MOVO X12, X13
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 304(BX)
	PSRLQ $36, X14
	PAND X0, X14
	MOVO X14, 320(BX)
	PSRLQ $57, X13
	MOVO 112(AX), X15
	MOVO X15, X1
	PSLLQ $7, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 336(BX)
	MOVO X1, X3
	MOVO X1, X2
	PSRLQ $14, X1
	PAND X0, X1
	MOVO X1, 352(BX)
	PSRLQ $35, X3
	PAND X0, X3
	MOVO X3, 368(BX)
	PSRLQ $56, X2
	MOVO 128(AX), X4
	MOVO X4, X6
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 384(BX)
	MOVO X6, X7
	MOVO X6, X5
	PSRLQ $13, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLQ $34, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLQ $55, X5
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $9, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 432(BX)
	MOVO X10, X11
	MOVO X10, X9
	PSRLQ $12, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLQ $33, X11
	PAND X0, X11
	MOVO X11, 464(BX)
	PSRLQ $54, X9
	MOVO 160(AX), X12
	MOVO X12, X14
	PSLLQ $10, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 480(BX)
	MOVO X14, X15
	MOVO X14, X13
	PSRLQ $11, X14
	PAND X0, X14
	MOVO X14, 496(BX)
	PSRLQ $32, X15
	PAND X0, X15
	MOVO X15, 512(BX)
	PSRLQ $53, X13
	MOVO 176(AX), X1
	MOVO X1, X3
	PSLLQ $11, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 528(BX)
	MOVO X3, X4
	MOVO X3, X2
	PSRLQ $10, X3
	PAND X0, X3
	MOVO X3, 544(BX)
	PSRLQ $31, X4
	PAND X0, X4
	MOVO X4, 560(BX)
	PSRLQ $52, X2
	MOVO 192(AX), X6
	MOVO X6, X7
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 576(BX)
	MOVO X7, X8
	MOVO X7, X5
	PSRLQ $9, X7
	PAND X0, X7
	MOVO X7, 592(BX)
	PSRLQ $30, X8
	PAND X0, X8
	MOVO X8, 608(BX)
	PSRLQ $51, X5
	MOVO 208(AX), X10
	MOVO X10, X11
	PSLLQ $13, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 624(BX)
	MOVO X11, X12
	MOVO X11, X9
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 640(BX)
	PSRLQ $29, X12
	PAND X0, X12
	MOVO X12, 656(BX)
	PSRLQ $50, X9
	MOVO 224(AX), X14
	MOVO X14, X15
	PSLLQ $14, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 672(BX)
	MOVO X15, X1
	MOVO X15, X13
	PSRLQ $7, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	PSRLQ $28, X1
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $49, X13
	MOVO 240(AX), X3
	MOVO X3, X4
	PSLLQ $15, X3
	PAND X0, X3
	POR X3, X13
	MOVO X13, 720(BX)
	MOVO X4, X6
	MOVO X4, X2
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 736(BX)
	PSRLQ $27, X6
	PAND X0, X6
	MOVO X6, 752(BX)
	PSRLQ $48, X2
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X0, X7
	POR X7, X2
	MOVO X2, 768(BX)
	MOVO X8, X10
	MOVO X8, X5
	PSRLQ $5, X8
	PAND X0, X8
	MOVO X8, 784(BX)
	PSRLQ $26, X10
	PAND X0, X10
	MOVO X10, 800(BX)
	PSRLQ $47, X5
	MOVO 272(AX), X11
	MOVO X11, X12
	PSLLQ $17, X11
	PAND X0, X11
	POR X11, X5
	MOVO X5, 816(BX)
	MOVO X12, X14
	MOVO X12, X9
	PSRLQ $4, X12
	PAND X0, X12
	MOVO X12, 832(BX)
	PSRLQ $25, X14
	PAND X0, X14
	MOVO X14, 848(BX)
	PSRLQ $46, X9
	MOVO 288(AX), X15
	MOVO X15, X1
	PSLLQ $18, X15
	PAND X0, X15
	POR X15, X9
	MOVO X9, 864(BX)
	MOVO X1, X3
	MOVO X1, X13
	PSRLQ $3, X1
	PAND X0, X1
	MOVO X1, 880(BX)
	PSRLQ $24, X3
	PAND X0, X3
	MOVO X3, 896(BX)
	PSRLQ $45, X13
	MOVO 304(AX), X4
	MOVO X4, X6
	PSLLQ $19, X4
	PAND X0, X4
	POR X4, X13
	MOVO X13, 912(BX)
	MOVO X6, X7
	MOVO X6, X2
	PSRLQ $2, X6
	PAND X0, X6
	MOVO X6, 928(BX)
	PSRLQ $23, X7
	PAND X0, X7
	MOVO X7, 944(BX)
	PSRLQ $44, X2
	MOVO 320(AX), X8
	MOVO X8, X10
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 960(BX)
	MOVO X10, X11
	MOVO X10, X5
	PSRLQ $1, X10
	PAND X0, X10
	MOVO X10, 976(BX)
	PSRLQ $22, X11
	PAND X0, X11
	MOVO X11, 992(BX)
	PSRLQ $43, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_22(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_22(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $4194303, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $22, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $44, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $20, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $2, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $24, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $46, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $18, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 80(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $4, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLQ $26, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLQ $48, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 128(BX)
	MOVO X14, X15
	MOVO X14, X1
	PSRLQ $6, X14
	PAND X0, X14
	MOVO X14, 144(BX)
	PSRLQ $28, X15
	PAND X0, X15
	MOVO X15, 160(BX)
	PSRLQ $50, X1
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $14, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 176(BX)
	MOVO X3, X5
	MOVO X3, X4
	PSRLQ $8, X3
	PAND X0, X3
	MOVO X3, 192(BX)
	PSRLQ $30, X5
	PAND X0, X5
	MOVO X5, 208(BX)
	PSRLQ $52, X4
	MOVO 80(AX), X6
	MOVO X6, X7
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 224(BX)
	MOVO X7, X9
	MOVO X7, X8
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 240(BX)
	PSRLQ $32, X9
	PAND X0, X9
	MOVO X9, 256(BX)
	PSRLQ $54, X8
	MOVO 96(AX), X10
	MOVO X10, X11
	PSLLQ $10, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 272(BX)
	MOVO X11, X13
	MOVO X11, X12
	PSRLQ $12, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLQ $34, X13
	PAND X0, X13
	MOVO X13, 304(BX)
	PSRLQ $56, X12
	MOVO 112(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 320(BX)
	MOVO X15, X2
	MOVO X15, X1
	PSRLQ $14, X15
	PAND X0, X15
	MOVO X15, 336(BX)
	PSRLQ $36, X2
	PAND X0, X2
	MOVO X2, 352(BX)
	PSRLQ $58, X1
	MOVO 128(AX), X3
	MOVO X3, X5
	PSLLQ $6, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 368(BX)
	MOVO X5, X6
	MOVO X5, X4
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 384(BX)
	PSRLQ $38, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLQ $60, X4
	MOVO 144(AX), X7
	MOVO X7, X9
	PSLLQ $4, X7
	PAND X0, X7
	POR X7, X4
	MOVO X4, 416(BX)
	MOVO X9, X10
	MOVO X9, X8
	PSRLQ $18, X9
	PAND X0, X9
	MOVO X9, 432(BX)
	PSRLQ $40, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLQ $62, X8
	MOVO 160(AX), X11
	MOVO X11, X13
	PSLLQ $2, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 464(BX)
	MOVO X13, X14
	PSRLQ $20, X13
	PAND X0, X13
	MOVO X13, 480(BX)
	PSRLQ $42, X14
	MOVO X14, 496(BX)
	MOVO 176(AX), X12
	MOVO X12, X15
	MOVO X12, X2
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $22, X15
	PAND X0, X15
	MOVO X15, 528(BX)
	PSRLQ $44, X2
	MOVO 192(AX), X3
	MOVO X3, X1
	PSLLQ $20, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 544(BX)
	MOVO X1, X5
	MOVO X1, X6
	PSRLQ $2, X1
	PAND X0, X1
	MOVO X1, 560(BX)
	PSRLQ $24, X5
	PAND X0, X5
	MOVO X5, 576(BX)
	PSRLQ $46, X6
	MOVO 208(AX), X7
	MOVO X7, X4
	PSLLQ $18, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 592(BX)
	MOVO X4, X9
	MOVO X4, X10
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 608(BX)
	PSRLQ $26, X9
	PAND X0, X9
	MOVO X9, 624(BX)
	PSRLQ $48, X10
	MOVO 224(AX), X11
	MOVO X11, X8
	PSLLQ $16, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 640(BX)
	MOVO X8, X13
	MOVO X8, X14
	PSRLQ $6, X8
	PAND X0, X8
	MOVO X8, 656(BX)
	PSRLQ $28, X13
	PAND X0, X13
	MOVO X13, 672(BX)
	PSRLQ $50, X14
	MOVO 240(AX), X12
	MOVO X12, X15
	PSLLQ $14, X12
	PAND X0, X12
	POR X12, X14
	MOVO X14, 688(BX)
	MOVO X15, X3
	MOVO X15, X2
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 704(BX)
	PSRLQ $30, X3
	PAND X0, X3
	MOVO X3, 720(BX)
	PSRLQ $52, X2
	MOVO 256(AX), X1
	MOVO X1, X5
	PSLLQ $12, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 736(BX)
	MOVO X5, X7
	MOVO X5, X6
	PSRLQ $10, X5
	PAND X0, X5
	MOVO X5, 752(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $54, X6
	MOVO 272(AX), X4
	MOVO X4, X9
	PSLLQ $10, X4
	PAND X0, X4
	POR X4, X6
	MOVO X6, 784(BX)
	MOVO X9, X11
	MOVO X9, X10
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 800(BX)
	PSRLQ $34, X11
	PAND X0, X11
	MOVO X11, 816(BX)
	PSRLQ $56, X10
	MOVO 288(AX), X8
	MOVO X8, X13
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 832(BX)
	MOVO X13, X12
	MOVO X13, X14
	PSRLQ $14, X13
	PAND X0, X13
	MOVO X13, 848(BX)
	PSRLQ $36, X12
	PAND X0, X12
	MOVO X12, 864(BX)
	PSRLQ $58, X14
	MOVO 304(AX), X15
	MOVO X15, X3
	PSLLQ $6, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 880(BX)
	MOVO X3, X1
	MOVO X3, X2
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 896(BX)
	PSRLQ $38, X1
	PAND X0, X1
	MOVO X1, 912(BX)
	PSRLQ $60, X2
	MOVO 320(AX), X5
	MOVO X5, X7
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 928(BX)
	MOVO X7, X4
	MOVO X7, X6
	PSRLQ $18, X7
	PAND X0, X7
	MOVO X7, 944(BX)
	PSRLQ $40, X4
	PAND X0, X4
	MOVO X4, 960(BX)
	PSRLQ $62, X6
	MOVO 336(AX), X9
	MOVO X9, X11
	PSLLQ $2, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 976(BX)
	MOVO X11, X8
	PSRLQ $20, X11
	PAND X0, X11
	MOVO X11, 992(BX)
	PSRLQ $42, X8
	MOVO X8, 1008(BX)
	RET

// func unpack64_23(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_23(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $8388607, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $23, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $46, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $18, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $5, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $28, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $51, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $13, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 80(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $10, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLQ $33, X11
	PAND X0, X11
	MOVO X11, 112(BX)
	PSRLQ $56, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLQ $8, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 128(BX)
	MOVO X14, X15
	MOVO X14, X1
	PSRLQ $15, X14
	PAND X0, X14
	MOVO X14, 144(BX)
	PSRLQ $38, X15
	PAND X0, X15
	MOVO X15, 160(BX)
	PSRLQ $61, X1
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $3, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 176(BX)
	MOVO X3, X5
	PSRLQ $20, X3
	PAND X0, X3
	MOVO X3, 192(BX)
	PSRLQ $43, X5
	MOVO 80(AX), X4
	MOVO X4, X6
	PSLLQ $21, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 208(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $2, X6
	PAND X0, X6
	MOVO X6, 224(BX)
	PSRLQ $25, X7
	PAND X0, X7
	MOVO X7, 240(BX)
	PSRLQ $48, X9
	MOVO 96(AX), X8
	MOVO X8, X10
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 256(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLQ $7, X10
	PAND X0, X10
	MOVO X10, 272(BX)
	PSRLQ $30, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLQ $53, X13
	MOVO 112(AX), X12
	MOVO X12, X14
	PSLLQ $11, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 304(BX)
	MOVO X14, X15
	MOVO X14, X2
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 320(BX)
	PSRLQ $35, X15
	PAND X0, X15
	MOVO X15, 336(BX)
	PSRLQ $58, X2
	MOVO 128(AX), X1
	MOVO X1, X3
	PSLLQ $6, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 352(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLQ $17, X3
	PAND X0, X3
	MOVO X3, 368(BX)
	PSRLQ $40, X4
	PAND X0, X4
	MOVO X4, 384(BX)
	PSRLQ $63, X5
	MOVO 144(AX), X6
	MOVO X6, X7
	PSLLQ $1, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 400(BX)
	MOVO X7, X8
	PSRLQ $22, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLQ $45, X8
	MOVO 160(AX), X9
	MOVO X9, X10
	PSLLQ $19, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 432(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $4, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLQ $27, X11
	PAND X0, X11
	MOVO X11, 464(BX)
	PSRLQ $50, X12
	MOVO 176(AX), X13
	MOVO X13, X14
	PSLLQ $14, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 480(BX)
	MOVO X14, X15
	MOVO X14, X1
	PSRLQ $9, X14
	PAND X0, X14
	MOVO X14, 496(BX)
	PSRLQ $32, X15
	PAND X0, X15
	MOVO X15, 512(BX)
	PSRLQ $55, X1
	MOVO 192(AX), X2
	MOVO X2, X3
	PSLLQ $9, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 528(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLQ $14, X3
	PAND X0, X3
	MOVO X3, 544(BX)
	PSRLQ $37, X4
	PAND X0, X4
	MOVO X4, 560(BX)
	PSRLQ $60, X6
	MOVO 208(AX), X5
	MOVO X5, X7
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 576(BX)
	MOVO X7, X9
	PSRLQ $19, X7
	PAND X0, X7
	MOVO X7, 592(BX)
	PSRLQ $42, X9
	MOVO 224(AX), X8
	MOVO X8, X10
	PSLLQ $22, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 608(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLQ $1, X10
	PAND X0, X10
	MOVO X10, 624(BX)
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 640(BX)
	PSRLQ $47, X13
	MOVO 240(AX), X12
	MOVO X12, X14
	PSLLQ $17, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 656(BX)
	MOVO X14, X15
	MOVO X14, X2
	PSRLQ $6, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $29, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	PSRLQ $52, X2
	MOVO 256(AX), X1
	MOVO X1, X3
	PSLLQ $12, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 704(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLQ $11, X3
	PAND X0, X3
	MOVO X3, 720(BX)
	PSRLQ $34, X4
	PAND X0, X4
	MOVO X4, 736(BX)
	PSRLQ $57, X5
	MOVO 272(AX), X6
	MOVO X6, X7
	PSLLQ $7, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 752(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $39, X8
	PAND X0, X8
	MOVO X8, 784(BX)
	PSRLQ $62, X9
	MOVO 288(AX), X10
	MOVO X10, X11
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 800(BX)
	MOVO X11, X12
	PSRLQ $21, X11
	PAND X0, X11
	MOVO X11, 816(BX)
	PSRLQ $44, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 832(BX)
	MOVO X14, X15
	MOVO X14, X1
	PSRLQ $3, X14
	PAND X0, X14
	MOVO X14, 848(BX)
	PSRLQ $26, X15
	PAND X0, X15
	MOVO X15, 864(BX)
	PSRLQ $49, X1
	MOVO 320(AX), X2
	MOVO X2, X3
	PSLLQ $15, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 880(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLQ $8, X3
	PAND X0, X3
	MOVO X3, 896(BX)
	PSRLQ $31, X4
	PAND X0, X4
	MOVO X4, 912(BX)
	PSRLQ $54, X6
	MOVO 336(AX), X5
	MOVO X5, X7
	PSLLQ $10, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 928(BX)
	MOVO X7, X8
	MOVO X7, X10
	PSRLQ $13, X7
	PAND X0, X7
	MOVO X7, 944(BX)
	PSRLQ $36, X8
	PAND X0, X8
	MOVO X8, 960(BX)
	PSRLQ $59, X10
	MOVO 352(AX), X9
	MOVO X9, X11
	PSLLQ $5, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 976(BX)
	MOVO X11, X13
	PSRLQ $18, X11
	PAND X0, X11
	MOVO X11, 992(BX)
	PSRLQ $41, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_24(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_24(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $16777215, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $24, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $48, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $56, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 80(BX)
	MOVO X10, X11
	PSRLQ $16, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLQ $40, X11
	MOVO X11, 112(BX)
	MOVO 48(AX), X12
	MOVO X12, X13
	MOVO X12, X14
	PAND X0, X12
	MOVO X12, 128(BX)
	PSRLQ $24, X13
	PAND X0, X13
	MOVO X13, 144(BX)
	PSRLQ $48, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 160(BX)
	MOVO X1, X2
	MOVO X1, X3
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 176(BX)
	PSRLQ $32, X2
	PAND X0, X2
	MOVO X2, 192(BX)
	PSRLQ $56, X3
	MOVO 80(AX), X5
	MOVO X5, X4
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 208(BX)
	MOVO X4, X6
	PSRLQ $16, X4
	PAND X0, X4
	MOVO X4, 224(BX)
	PSRLQ $40, X6
	MOVO X6, 240(BX)
	MOVO 96(AX), X7
	MOVO X7, X9
	MOVO X7, X8
	PAND X0, X7
	MOVO X7, 256(BX)
	PSRLQ $24, X9
	PAND X0, X9
	MOVO X9, 272(BX)
	PSRLQ $48, X8
	MOVO 112(AX), X10
	MOVO X10, X11
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 288(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 304(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 320(BX)
	PSRLQ $56, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLQ $8, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 336(BX)
	MOVO X14, X1
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 352(BX)
	PSRLQ $40, X1
	MOVO X1, 368(BX)
	MOVO 144(AX), X2
	MOVO X2, X5
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 384(BX)
	PSRLQ $24, X5
	PAND X0, X5
	MOVO X5, 400(BX)
	PSRLQ $48, X3
	MOVO 160(AX), X4
	MOVO X4, X6
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 416(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 432(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 448(BX)
	PSRLQ $56, X9
	MOVO 176(AX), X10
	MOVO X10, X8
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 464(BX)
	MOVO X8, X11
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 480(BX)
	PSRLQ $40, X11
	MOVO X11, 496(BX)
	MOVO 192(AX), X12
	MOVO X12, X15
	MOVO X12, X13
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $24, X15
	PAND X0, X15
	MOVO X15, 528(BX)
	PSRLQ $48, X13
	MOVO 208(AX), X14
	MOVO X14, X1
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 544(BX)
	MOVO X1, X2
	MOVO X1, X5
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 560(BX)
	PSRLQ $32, X2
	PAND X0, X2
	MOVO X2, 576(BX)
	PSRLQ $56, X5
	MOVO 224(AX), X4
	MOVO X4, X3
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 592(BX)
	MOVO X3, X6
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 608(BX)
	PSRLQ $40, X6
	MOVO X6, 624(BX)
	MOVO 240(AX), X7
	MOVO X7, X10
	MOVO X7, X9
	PAND X0, X7
	MOVO X7, 640(BX)
	PSRLQ $24, X10
	PAND X0, X10
	MOVO X10, 656(BX)
	PSRLQ $48, X9
	MOVO 256(AX), X8
	MOVO X8, X11
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 672(BX)
	MOVO X11, X12
	MOVO X11, X15
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 688(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 704(BX)
	PSRLQ $56, X15
	MOVO 272(AX), X14
	MOVO X14, X13
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 720(BX)
	MOVO X13, X1
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 736(BX)
	PSRLQ $40, X1
	MOVO X1, 752(BX)
	MOVO 288(AX), X2
	MOVO X2, X4
	MOVO X2, X5
	PAND X0, X2
	MOVO X2, 768(BX)
	PSRLQ $24, X4
	PAND X0, X4
	MOVO X4, 784(BX)
	PSRLQ $48, X5
	MOVO 304(AX), X3
	MOVO X3, X6
	PSLLQ $16, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 800(BX)
	MOVO X6, X7
	MOVO X6, X10
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 816(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 832(BX)
	PSRLQ $56, X10
	MOVO 320(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 848(BX)
	MOVO X9, X11
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 864(BX)
	PSRLQ $40, X11
	MOVO X11, 880(BX)
	MOVO 336(AX), X12
	MOVO X12, X14
	MOVO X12, X15
	PAND X0, X12
	MOVO X12, 896(BX)
	PSRLQ $24, X14
	PAND X0, X14
	MOVO X14, 912(BX)
	PSRLQ $48, X15
	MOVO 352(AX), X13
	MOVO X13, X1
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 928(BX)
	MOVO X1, X2
	MOVO X1, X4
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	PSRLQ $32, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $56, X4
	MOVO 368(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 976(BX)
	MOVO X5, X6
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 992(BX)
	PSRLQ $40, X6
	MOVO X6, 1008(BX)
	RET

// func unpack64_25(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_25(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $33554431, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $25, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $50, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $14, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $11, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $36, X7
	PAND X0, X7
	MOVO X7, 64(BX)
	PSRLQ $61, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $3, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 80(BX)
	MOVO X10, X11
	PSRLQ $22, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLQ $47, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $17, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 112(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLQ $8, X13
	PAND X0, X13
	MOVO X13, 128(BX)
	PSRLQ $33, X14
	PAND X0, X14
	MOVO X14, 144(BX)
	PSRLQ $58, X15
	MOVO 64(AX), X1
	MOVO X1, X2
	PSLLQ $6, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 160(BX)
	MOVO X2, X3
	PSRLQ $19, X2
	PAND X0, X2
	MOVO X2, 176(BX)
	PSRLQ $44, X3
	MOVO 80(AX), X5
	MOVO X5, X4
	PSLLQ $20, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 192(BX)
	MOVO X4, X6
	MOVO X4, X7
	PSRLQ $5, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLQ $30, X6
	PAND X0, X6
	MOVO X6, 224(BX)
	PSRLQ $55, X7
	MOVO 96(AX), X9
	MOVO X9, X8
	PSLLQ $9, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 240(BX)
	MOVO X8, X10
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 256(BX)
	PSRLQ $41, X10
	MOVO 112(AX), X12
	MOVO X12, X11
	PSLLQ $23, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 272(BX)
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $2, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLQ $27, X13
	PAND X0, X13
	MOVO X13, 304(BX)
	PSRLQ $52, X14
	MOVO 128(AX), X1
	MOVO X1, X15
	PSLLQ $12, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 320(BX)
	MOVO X15, X2
	MOVO X15, X5
	PSRLQ $13, X15
	PAND X0, X15
	MOVO X15, 336(BX)
	PSRLQ $38, X2
	PAND X0, X2
	MOVO X2, 352(BX)
	PSRLQ $63, X5
	MOVO 144(AX), X3
	MOVO X3, X4
	PSLLQ $1, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 368(BX)
	MOVO X4, X6
	PSRLQ $24, X4
	PAND X0, X4
	MOVO X4, 384(BX)
	PSRLQ $49, X6
	MOVO 160(AX), X9
	MOVO X9, X7
	PSLLQ $15, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 400(BX)
	MOVO X7, X8
	MOVO X7, X12
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLQ $35, X8
	PAND X0, X8
	MOVO X8, 432(BX)
	PSRLQ $60, X12
	MOVO 176(AX), X10
	MOVO X10, X11
	PSLLQ $4, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 448(BX)
	MOVO X11, X13
	PSRLQ $21, X11
	PAND X0, X11
	MOVO X11, 464(BX)
	PSRLQ $46, X13
	MOVO 192(AX), X1
	MOVO X1, X14
	PSLLQ $18, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 480(BX)
	MOVO X14, X15
	MOVO X14, X2
	PSRLQ $7, X14
	PAND X0, X14
	MOVO X14, 496(BX)
	PSRLQ $32, X15
	PAND X0, X15
	MOVO X15, 512(BX)
	PSRLQ $57, X2
	MOVO 208(AX), X3
	MOVO X3, X5
	PSLLQ $7, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 528(BX)
	MOVO X5, X4
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 544(BX)
	PSRLQ $43, X4
	MOVO 224(AX), X9
	MOVO X9, X6
	PSLLQ $21, X9
	PAND X0, X9
	POR X9, X4
	MOVO X4, 560(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 576(BX)
	PSRLQ $29, X7
	PAND X0, X7
	MOVO X7, 592(BX)
	PSRLQ $54, X8
	MOVO 240(AX), X10
	MOVO X10, X12
	PSLLQ $10, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 608(BX)
	MOVO X12, X11
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 624(BX)
	PSRLQ $40, X11
	MOVO 256(AX), X1
	MOVO X1, X13
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 640(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLQ $1, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $26, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $51, X15
	MOVO 272(AX), X3
	MOVO X3, X2
	PSLLQ $13, X3
	PAND X0, X3
	POR X3, X15
	MOVO X15, 688(BX)
	MOVO X2, X5
	MOVO X2, X9
	PSRLQ $12, X2
	PAND X0, X2
	MOVO X2, 704(BX)
	PSRLQ $37, X5
	PAND X0, X5
	MOVO X5, 720(BX)
	PSRLQ $62, X9
	MOVO 288(AX), X4
	MOVO X4, X6
	PSLLQ $2, X4
	PAND X0, X4
	POR X4, X9
	MOVO X9, 736(BX)
	MOVO X6, X7
	PSRLQ $23, X6
	PAND X0, X6
	MOVO X6, 752(BX)
	PSRLQ $48, X7
	MOVO 304(AX), X10
	MOVO X10, X8
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 768(BX)
	MOVO X8, X12
	MOVO X8, X1
	PSRLQ $9, X8
	PAND X0, X8
	MOVO X8, 784(BX)
	PSRLQ $34, X12
	PAND X0, X12
	MOVO X12, 800(BX)
	PSRLQ $59, X1
	MOVO 320(AX), X11
	MOVO X11, X13
	PSLLQ $5, X11
	PAND X0, X11
	POR X11, X1
	MOVO X1, 816(BX)
	MOVO X13, X14
	PSRLQ $20, X13
	PAND X0, X13
	MOVO X13, 832(BX)
	PSRLQ $45, X14
	MOVO 336(AX), X3
	MOVO X3, X15
	PSLLQ $19, X3
	PAND X0, X3
	POR X3, X14
	MOVO X14, 848(BX)
	MOVO X15, X2
	MOVO X15, X5
	PSRLQ $6, X15
	PAND X0, X15
	MOVO X15, 864(BX)
	PSRLQ $31, X2
	PAND X0, X2
	MOVO X2, 880(BX)
	PSRLQ $56, X5
	MOVO 352(AX), X4
	MOVO X4, X9
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 896(BX)
	MOVO X9, X6
	PSRLQ $17, X9
	PAND X0, X9
	MOVO X9, 912(BX)
	PSRLQ $42, X6
	MOVO 368(AX), X10
	MOVO X10, X7
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 928(BX)
	MOVO X7, X8
	MOVO X7, X12
	PSRLQ $3, X7
	PAND X0, X7
	MOVO X7, 944(BX)
	PSRLQ $28, X8
	PAND X0, X8
	MOVO X8, 960(BX)
	PSRLQ $53, X12
	MOVO 384(AX), X11
	MOVO X11, X1
	PSLLQ $11, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 976(BX)
	MOVO X1, X13
	PSRLQ $14, X1
	PAND X0, X1
	MOVO X1, 992(BX)
	PSRLQ $39, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_26(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_26(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $67108863, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $26, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $52, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $12, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLQ $14, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $40, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	PSRLQ $2, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLQ $28, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLQ $54, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $10, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 112(BX)
	MOVO X13, X14
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 128(BX)
	PSRLQ $42, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLQ $22, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 144(BX)
	MOVO X1, X2
	MOVO X1, X3
	PSRLQ $4, X1
	PAND X0, X1
	MOVO X1, 160(BX)
	PSRLQ $30, X2
	PAND X0, X2
	MOVO X2, 176(BX)
	PSRLQ $56, X3
	MOVO 80(AX), X5
	MOVO X5, X4
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 192(BX)
	MOVO X4, X6
	PSRLQ $18, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLQ $44, X6
	MOVO 96(AX), X8
	MOVO X8, X7
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 224(BX)
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $6, X7
	PAND X0, X7
	MOVO X7, 240(BX)
	PSRLQ $32, X9
	PAND X0, X9
	MOVO X9, 256(BX)
	PSRLQ $58, X10
	MOVO 112(AX), X12
	MOVO X12, X11
	PSLLQ $6, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 272(BX)
	MOVO X11, X13
	PSRLQ $20, X11
	PAND X0, X11
	MOVO X11, 288(BX)
	PSRLQ $46, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLQ $18, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 304(BX)
	MOVO X14, X1
	MOVO X14, X2
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 320(BX)
	PSRLQ $34, X1
	PAND X0, X1
	MOVO X1, 336(BX)
	PSRLQ $60, X2
	MOVO 144(AX), X5
	MOVO X5, X3
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 352(BX)
	MOVO X3, X4
	PSRLQ $22, X3
	PAND X0, X3
	MOVO X3, 368(BX)
	PSRLQ $48, X4
	MOVO 160(AX), X8
	MOVO X8, X6
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 384(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $10, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLQ $36, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLQ $62, X9
	MOVO 176(AX), X12
	MOVO X12, X10
	PSLLQ $2, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 432(BX)
	MOVO X10, X11
	PSRLQ $24, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLQ $50, X11
	MOVO 192(AX), X15
	MOVO X15, X13
	PSLLQ $14, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 464(BX)
	MOVO X13, X14
	PSRLQ $12, X13
	PAND X0, X13
	MOVO X13, 480(BX)
	PSRLQ $38, X14
	MOVO X14, 496(BX)
	MOVO 208(AX), X1
	MOVO X1, X5
	MOVO X1, X2
	PAND X0, X1
	MOVO X1, 512(BX)
	PSRLQ $26, X5
	PAND X0, X5
	MOVO X5, 528(BX)
	PSRLQ $52, X2
	MOVO 224(AX), X3
	MOVO X3, X8
	PSLLQ $12, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 544(BX)
	MOVO X8, X4
	PSRLQ $14, X8
	PAND X0, X8
	MOVO X8, 560(BX)
	PSRLQ $40, X4
	MOVO 240(AX), X6
	MOVO X6, X7
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 576(BX)
	MOVO X7, X12
	MOVO X7, X9
	PSRLQ $2, X7
	PAND X0, X7
	MOVO X7, 592(BX)
	PSRLQ $28, X12
	PAND X0, X12
	MOVO X12, 608(BX)
	PSRLQ $54, X9
	MOVO 256(AX), X10
	MOVO X10, X15
	PSLLQ $10, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 624(BX)
	MOVO X15, X11
	PSRLQ $16, X15
	PAND X0, X15
	MOVO X15, 640(BX)
	PSRLQ $42, X11
	MOVO 272(AX), X13
	MOVO X13, X14
	PSLLQ $22, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 656(BX)
	MOVO X14, X1
	MOVO X14, X5
	PSRLQ $4, X14
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $30, X1
	PAND X0, X1
	MOVO X1, 688(BX)
	PSRLQ $56, X5
	MOVO 288(AX), X3
	MOVO X3, X2
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 704(BX)
	MOVO X2, X8
	PSRLQ $18, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $44, X8
	MOVO 304(AX), X6
	MOVO X6, X4
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 736(BX)
	MOVO X4, X7
	MOVO X4, X12
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 752(BX)
	PSRLQ $32, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $58, X12
	MOVO 320(AX), X10
	MOVO X10, X9
	PSLLQ $6, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 784(BX)
	MOVO X9, X15
	PSRLQ $20, X9
	PAND X0, X9
	MOVO X9, 800(BX)
	PSRLQ $46, X15
	MOVO 336(AX), X13
	MOVO X13, X11
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 816(BX)
	MOVO X11, X14
	MOVO X11, X1
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 832(BX)
	PSRLQ $34, X14
	PAND X0, X14
	MOVO X14, 848(BX)
	PSRLQ $60, X1
	MOVO 352(AX), X3
	MOVO X3, X5
	PSLLQ $4, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 864(BX)
	MOVO X5, X2
	PSRLQ $22, X5
	PAND X0, X5
	MOVO X5, 880(BX)
	PSRLQ $48, X2
	MOVO 368(AX), X6
	MOVO X6, X8
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 896(BX)
	MOVO X8, X4
	MOVO X8, X7
	PSRLQ $10, X8
	PAND X0, X8
	MOVO X8, 912(BX)
	PSRLQ $36, X4
	PAND X0, X4
	MOVO X4, 928(BX)
	PSRLQ $62, X7
	MOVO 384(AX), X10
	MOVO X10, X12
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 944(BX)
	MOVO X12, X9
	PSRLQ $24, X12
	PAND X0, X12
	MOVO X12, 960(BX)
	PSRLQ $50, X9
	MOVO 400(AX), X13
	MOVO X13, X15
	PSLLQ $14, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 976(BX)
	MOVO X15, X11
	PSRLQ $12, X15
	PAND X0, X15
	MOVO X15, 992(BX)
	PSRLQ $38, X11
	MOVO X11, 1008(BX)
	RET

// func unpack64_27(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_27(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $134217727, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $27, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $54, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $10, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLQ $17, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $44, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	PSRLQ $7, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLQ $34, X10
	PAND X0, X10
	MOVO X10, 96(BX)
	PSRLQ $61, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $3, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 112(BX)
	MOVO X13, X14
	PSRLQ $24, X13
	PAND X0, X13
	MOVO X13, 128(BX)
	PSRLQ $51, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLQ $13, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 144(BX)
	MOVO X1, X2
	PSRLQ $14, X1
	PAND X0, X1
	MOVO X1, 160(BX)
	PSRLQ $41, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLQ $23, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 176(BX)
	MOVO X5, X4
	MOVO X5, X6
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLQ $31, X4
	PAND X0, X4
	MOVO X4, 208(BX)
	PSRLQ $58, X6
	MOVO 96(AX), X8
	MOVO X8, X7
	PSLLQ $6, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 224(BX)
	MOVO X7, X9
	PSRLQ $21, X7
	PAND X0, X7
	MOVO X7, 240(BX)
	PSRLQ $48, X9
	MOVO 112(AX), X10
	MOVO X10, X12
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 256(BX)
	MOVO X12, X11
	PSRLQ $11, X12
	PAND X0, X12
	MOVO X12, 272(BX)
	PSRLQ $38, X11
	MOVO 128(AX), X13
	MOVO X13, X15
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 288(BX)
	MOVO X15, X14
	MOVO X15, X1
	PSRLQ $1, X15
	PAND X0, X15
	MOVO X15, 304(BX)
	PSRLQ $28, X14
	PAND X0, X14
	MOVO X14, 320(BX)
	PSRLQ $55, X1
	MOVO 144(AX), X3
	MOVO X3, X2
	PSLLQ $9, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 336(BX)
	MOVO X2, X5
	PSRLQ $18, X2
	PAND X0, X2
	MOVO X2, 352(BX)
	PSRLQ $45, X5
	MOVO 160(AX), X4
	MOVO X4, X8
	PSLLQ $19, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 368(BX)
	MOVO X8, X6
	MOVO X8, X7
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 384(BX)
	PSRLQ $35, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLQ $62, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 416(BX)
	MOVO X9, X12
	PSRLQ $25, X9
	PAND X0, X9
	MOVO X9, 432(BX)
	PSRLQ $52, X12
	MOVO 192(AX), X13
	MOVO X13, X11
	PSLLQ $12, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 448(BX)
	MOVO X11, X15
	PSRLQ $15, X11
	PAND X0, X11
	MOVO X11, 464(BX)
	PSRLQ $42, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLQ $22, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 480(BX)
	MOVO X3, X1
	MOVO X3, X2
	PSRLQ $5, X3
	PAND X0, X3
	MOVO X3, 496(BX)
	PSRLQ $32, X1
	PAND X0, X1
	MOVO X1, 512(BX)
	PSRLQ $59, X2
	MOVO 224(AX), X4
	MOVO X4, X5
	PSLLQ $5, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 528(BX)
	MOVO X5, X8
	PSRLQ $22, X5
	PAND X0, X5
	MOVO X5, 544(BX)
	PSRLQ $49, X8
	MOVO 240(AX), X6
	MOVO X6, X10
	PSLLQ $15, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 560(BX)
	MOVO X10, X7
	PSRLQ $12, X10
	PAND X0, X10
	MOVO X10, 576(BX)
	PSRLQ $39, X7
	MOVO 256(AX), X9
	MOVO X9, X13
	PSLLQ $25, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 592(BX)
	MOVO X13, X12
	MOVO X13, X11
	PSRLQ $2, X13
	PAND X0, X13
	MOVO X13, 608(BX)
	PSRLQ $29, X12
	PAND X0, X12
	MOVO X12, 624(BX)
	PSRLQ $56, X11
	MOVO 272(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 640(BX)
	MOVO X15, X3
	PSRLQ $19, X15
	PAND X0, X15
	MOVO X15, 656(BX)
	PSRLQ $46, X3
	MOVO 288(AX), X1
	MOVO X1, X4
	PSLLQ $18, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 672(BX)
	MOVO X4, X2
	MOVO X4, X5
	PSRLQ $9, X4
	PAND X0, X4
	MOVO X4, 688(BX)
	PSRLQ $36, X2
	PAND X0, X2
	MOVO X2, 704(BX)
	PSRLQ $63, X5
	MOVO 304(AX), X6
	MOVO X6, X8
	PSLLQ $1, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 720(BX)
	MOVO X8, X10
	PSRLQ $26, X8
	PAND X0, X8
	MOVO X8, 736(BX)
	PSRLQ $53, X10
	MOVO 320(AX), X9
	MOVO X9, X7
	PSLLQ $11, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 752(BX)
	MOVO X7, X13
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $43, X13
	MOVO 336(AX), X12
	MOVO X12, X14
	PSLLQ $21, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 784(BX)
	MOVO X14, X11
	MOVO X14, X15
	PSRLQ $6, X14
	PAND X0, X14
	MOVO X14, 800(BX)
	PSRLQ $33, X11
	PAND X0, X11
	MOVO X11, 816(BX)
	PSRLQ $60, X15
	MOVO 352(AX), X1
	MOVO X1, X3
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 832(BX)
	MOVO X3, X4
	PSRLQ $23, X3
	PAND X0, X3
	MOVO X3, 848(BX)
	PSRLQ $50, X4
	MOVO 368(AX), X2
	MOVO X2, X6
	PSLLQ $14, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 864(BX)
	MOVO X6, X5
	PSRLQ $13, X6
	PAND X0, X6
	MOVO X6, 880(BX)
	PSRLQ $40, X5
	MOVO 384(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 896(BX)
	MOVO X9, X10
	MOVO X9, X7
	PSRLQ $3, X9
	PAND X0, X9
	MOVO X9, 912(BX)
	PSRLQ $30, X10
	PAND X0, X10
	MOVO X10, 928(BX)
	PSRLQ $57, X7
	MOVO 400(AX), X12
	MOVO X12, X13
	PSLLQ $7, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 944(BX)
	MOVO X13, X14
	PSRLQ $20, X13
	PAND X0, X13
	MOVO X13, 960(BX)
	PSRLQ $47, X14
	MOVO 416(AX), X11
	MOVO X11, X1
	PSLLQ $17, X11
	PAND X0, X11
	POR X11, X14
	MOVO X14, 976(BX)
	MOVO X1, X15
	PSRLQ $10, X1
	PAND X0, X1
	MOVO X1, 992(BX)
	PSRLQ $37, X15
	MOVO X15, 1008(BX)
	RET

// func unpack64_28(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_28(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $268435455, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $28, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $56, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $48, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLQ $40, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $24, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 96(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $4, X12
	PAND X0, X12
	MOVO X12, 112(BX)
	PSRLQ $32, X13
	PAND X0, X13
	MOVO X13, 128(BX)
	PSRLQ $60, X14
	MOVO 64(AX), X15
	MOVO X15, X1
	PSLLQ $4, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 144(BX)
	MOVO X1, X2
	PSRLQ $24, X1
	PAND X0, X1
	MOVO X1, 160(BX)
	PSRLQ $52, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLQ $12, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 176(BX)
	MOVO X5, X4
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLQ $44, X4
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 208(BX)
	MOVO X8, X7
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 224(BX)
	PSRLQ $36, X7
	MOVO X7, 240(BX)
	MOVO 112(AX), X9
	MOVO X9, X11
	MOVO X9, X10
	PAND X0, X9
	MOVO X9, 256(BX)
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 272(BX)
	PSRLQ $56, X10
	MOVO 128(AX), X12
	MOVO X12, X13
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 288(BX)
	MOVO X13, X15
	PSRLQ $20, X13
	PAND X0, X13
	MOVO X13, 304(BX)
	PSRLQ $48, X15
	MOVO 144(AX), X14
	MOVO X14, X1
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 320(BX)
	MOVO X1, X3
	PSRLQ $12, X1
	PAND X0, X1
	MOVO X1, 336(BX)
	PSRLQ $40, X3
	MOVO 160(AX), X2
	MOVO X2, X5
	PSLLQ $24, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 352(BX)
	MOVO X5, X6
	MOVO X5, X4
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 368(BX)
	PSRLQ $32, X6
	PAND X0, X6
	MOVO X6, 384(BX)
	PSRLQ $60, X4
	MOVO 176(AX), X8
	MOVO X8, X7
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 400(BX)
	MOVO X7, X9
	PSRLQ $24, X7
	PAND X0, X7
	MOVO X7, 416(BX)
	PSRLQ $52, X9
	MOVO 192(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 432(BX)
	MOVO X12, X10
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 448(BX)
	PSRLQ $44, X10
	MOVO 208(AX), X13
	MOVO X13, X14
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 464(BX)
	MOVO X14, X15
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 480(BX)
	PSRLQ $36, X15
	MOVO X15, 496(BX)
	MOVO 224(AX), X1
	MOVO X1, X2
	MOVO X1, X3
	PAND X0, X1
	MOVO X1, 512(BX)
	PSRLQ $28, X2
	PAND X0, X2
	MOVO X2, 528(BX)
	PSRLQ $56, X3
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 544(BX)
	MOVO X6, X8
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 560(BX)
	PSRLQ $48, X8
	MOVO 256(AX), X4
	MOVO X4, X7
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X8
	MOVO X8, 576(BX)
	MOVO X7, X11
	PSRLQ $12, X7
	PAND X0, X7
	MOVO X7, 592(BX)
	PSRLQ $40, X11
	MOVO 272(AX), X9
	MOVO X9, X12
	PSLLQ $24, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 608(BX)
	MOVO X12, X13
	MOVO X12, X10
	PSRLQ $4, X12
	PAND X0, X12
	MOVO X12, 624(BX)
	PSRLQ $32, X13
	PAND X0, X13
	MOVO X13, 640(BX)
	PSRLQ $60, X10
	MOVO 288(AX), X14
	MOVO X14, X15
	PSLLQ $4, X14
	PAND X0, X14
	POR X14, X10
	MOVO X10, 656(BX)
	MOVO X15, X1
	PSRLQ $24, X15
	PAND X0, X15
	MOVO X15, 672(BX)
	PSRLQ $52, X1
	MOVO 304(AX), X2
	MOVO X2, X5
	PSLLQ $12, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 688(BX)
	MOVO X5, X3
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 704(BX)
	PSRLQ $44, X3
	MOVO 320(AX), X6
	MOVO X6, X4
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 720(BX)
	MOVO X4, X8
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 736(BX)
	PSRLQ $36, X8
	MOVO X8, 752(BX)
	MOVO 336(AX), X7
	MOVO X7, X9
	MOVO X7, X11
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $28, X9
	PAND X0, X9
	MOVO X9, 784(BX)
	PSRLQ $56, X11
	MOVO 352(AX), X12
	MOVO X12, X13
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 800(BX)
	MOVO X13, X14
	PSRLQ $20, X13
	PAND X0, X13
	MOVO X13, 816(BX)
	PSRLQ $48, X14
	MOVO 368(AX), X10
	MOVO X10, X15
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X14
	MOVO X14, 832(BX)
	MOVO X15, X2
	PSRLQ $12, X15
	PAND X0, X15
	MOVO X15, 848(BX)
	PSRLQ $40, X2
	MOVO 384(AX), X1
	MOVO X1, X5
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 864(BX)
	MOVO X5, X6
	MOVO X5, X3
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 880(BX)
	PSRLQ $32, X6
	PAND X0, X6
	MOVO X6, 896(BX)
	PSRLQ $60, X3
	MOVO 400(AX), X4
	MOVO X4, X8
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 912(BX)
	MOVO X8, X7
	PSRLQ $24, X8
	PAND X0, X8
	MOVO X8, 928(BX)
	PSRLQ $52, X7
	MOVO 416(AX), X9
	MOVO X9, X12
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 944(BX)
	MOVO X12, X11
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 960(BX)
	PSRLQ $44, X11
	MOVO 432(AX), X13
	MOVO X13, X10
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 976(BX)
	MOVO X10, X14
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 992(BX)
	PSRLQ $36, X14
	MOVO X14, 1008(BX)
	RET

// func unpack64_29(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_29(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $536870911, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $29, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $58, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLQ $23, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $52, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $12, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	PSRLQ $17, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLQ $46, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $18, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 96(BX)
	MOVO X12, X13
	PSRLQ $11, X12
	PAND X0, X12
	MOVO X12, 112(BX)
	PSRLQ $40, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $24, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 128(BX)
	MOVO X15, X1
	MOVO X15, X2
	PSRLQ $5, X15
	PAND X0, X15
	MOVO X15, 144(BX)
	PSRLQ $34, X1
	PAND X0, X1
	MOVO X1, 160(BX)
	PSRLQ $63, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLQ $1, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 176(BX)
	MOVO X5, X4
	PSRLQ $28, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLQ $57, X4
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLQ $7, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 208(BX)
	MOVO X8, X7
	PSRLQ $22, X8
	PAND X0, X8
	MOVO X8, 224(BX)
	PSRLQ $51, X7
	MOVO 112(AX), X9
	MOVO X9, X11
	PSLLQ $13, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 240(BX)
	MOVO X11, X10
	PSRLQ $16, X11
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLQ $45, X10
	MOVO 128(AX), X12
	MOVO X12, X14
	PSLLQ $19, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 272(BX)
	MOVO X14, X13
	PSRLQ $10, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLQ $39, X13
	MOVO 144(AX), X15
	MOVO X15, X1
	PSLLQ $25, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 304(BX)
	MOVO X1, X3
	MOVO X1, X2
	PSRLQ $4, X1
	PAND X0, X1
	MOVO X1, 320(BX)
	PSRLQ $33, X3
	PAND X0, X3
	MOVO X3, 336(BX)
	PSRLQ $62, X2
	MOVO 160(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 352(BX)
	MOVO X6, X4
	PSRLQ $27, X6
	PAND X0, X6
	MOVO X6, 368(BX)
	PSRLQ $56, X4
	MOVO 176(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 384(BX)
	MOVO X9, X7
	PSRLQ $21, X9
	PAND X0, X9
	MOVO X9, 400(BX)
	PSRLQ $50, X7
	MOVO 192(AX), X11
	MOVO X11, X12
	PSLLQ $14, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 416(BX)
	MOVO X12, X10
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 432(BX)
	PSRLQ $44, X10
	MOVO 208(AX), X14
	MOVO X14, X15
	PSLLQ $20, X14
	PAND X0, X14
	POR X14, X10
	MOVO X10, 448(BX)
	MOVO X15, X13
	PSRLQ $9, X15
	PAND X0, X15
	MOVO X15, 464(BX)
	PSRLQ $38, X13
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLQ $26, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 480(BX)
	MOVO X3, X5
	MOVO X3, X2
	PSRLQ $3, X3
	PAND X0, X3
	MOVO X3, 496(BX)
	PSRLQ $32, X5
	PAND X0, X5
	MOVO X5, 512(BX)
	PSRLQ $61, X2
	MOVO 240(AX), X6
	MOVO X6, X8
	PSLLQ $3, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 528(BX)
	MOVO X8, X4
	PSRLQ $26, X8
	PAND X0, X8
	MOVO X8, 544(BX)
	PSRLQ $55, X4
	MOVO 256(AX), X9
	MOVO X9, X11
	PSLLQ $9, X9
	PAND X0, X9
	POR X9, X4
	MOVO X4, 560(BX)
	MOVO X11, X7
	PSRLQ $20, X11
	PAND X0, X11
	MOVO X11, 576(BX)
	PSRLQ $49, X7
	MOVO 272(AX), X12
	MOVO X12, X14
	PSLLQ $15, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 592(BX)
	MOVO X14, X10
	PSRLQ $14, X14
	PAND X0, X14
	MOVO X14, 608(BX)
	PSRLQ $43, X10
	MOVO 288(AX), X15
	MOVO X15, X1
	PSLLQ $21, X15
	PAND X0, X15
	POR X15, X10
	MOVO X10, 624(BX)
	MOVO X1, X13
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 640(BX)
	PSRLQ $37, X13
	MOVO 304(AX), X3
	MOVO X3, X5
	PSLLQ $27, X3
	PAND X0, X3
	POR X3, X13
	MOVO X13, 656(BX)
	MOVO X5, X6
	MOVO X5, X2
	PSRLQ $2, X5
	PAND X0, X5
	MOVO X5, 672(BX)
	PSRLQ $31, X6
	PAND X0, X6
	MOVO X6, 688(BX)
	PSRLQ $60, X2
	MOVO 320(AX), X8
	MOVO X8, X9
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 704(BX)
	MOVO X9, X4
	PSRLQ $25, X9
	PAND X0, X9
	MOVO X9, 720(BX)
	PSRLQ $54, X4
	MOVO 336(AX), X11
	MOVO X11, X12
	PSLLQ $10, X11
	PAND X0, X11
	POR X11, X4
	MOVO X4, 736(BX)
	MOVO X12, X7
	PSRLQ $19, X12
	PAND X0, X12
	MOVO X12, 752(BX)
	PSRLQ $48, X7
	MOVO 352(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 768(BX)
	MOVO X15, X10
	PSRLQ $13, X15
	PAND X0, X15
	MOVO X15, 784(BX)
	PSRLQ $42, X10
	MOVO 368(AX), X1
	MOVO X1, X3
	PSLLQ $22, X1
	PAND X0, X1
	POR X1, X10
	MOVO X10, 800(BX)
	MOVO X3, X13
	PSRLQ $7, X3
	PAND X0, X3
	MOVO X3, 816(BX)
	PSRLQ $36, X13
	MOVO 384(AX), X5
	MOVO X5, X6
	PSLLQ $28, X5
	PAND X0, X5
	POR X5, X13
	MOVO X13, 832(BX)
	MOVO X6, X8
	MOVO X6, X2
	PSRLQ $1, X6
	PAND X0, X6
	MOVO X6, 848(BX)
	PSRLQ $30, X8
	PAND X0, X8
	MOVO X8, 864(BX)
	PSRLQ $59, X2
	MOVO 400(AX), X9
	MOVO X9, X11
	PSLLQ $5, X9
	PAND X0, X9
	POR X9, X2
	MOVO X2, 880(BX)
	MOVO X11, X4
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 896(BX)
	PSRLQ $53, X4
	MOVO 416(AX), X12
	MOVO X12, X14
	PSLLQ $11, X12
	PAND X0, X12
	POR X12, X4
	MOVO X4, 912(BX)
	MOVO X14, X7
	PSRLQ $18, X14
	PAND X0, X14
	MOVO X14, 928(BX)
	PSRLQ $47, X7
	MOVO 432(AX), X15
	MOVO X15, X1
	PSLLQ $17, X15
	PAND X0, X15
	POR X15, X7
	MOVO X7, 944(BX)
	MOVO X1, X10
	PSRLQ $12, X1
	PAND X0, X1
	MOVO X1, 960(BX)
	PSRLQ $41, X10
	MOVO 448(AX), X3
	MOVO X3, X5
	PSLLQ $23, X3
	PAND X0, X3
	POR X3, X10
	MOVO X10, 976(BX)
	MOVO X5, X13
	PSRLQ $6, X5
	PAND X0, X5
	MOVO X5, 992(BX)
	PSRLQ $35, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_30(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_30(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1073741823, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $30, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $60, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLQ $26, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $56, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	PSRLQ $22, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLQ $52, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 96(BX)
	MOVO X12, X13
	PSRLQ $18, X12
	PAND X0, X12
	MOVO X12, 112(BX)
	PSRLQ $48, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 128(BX)
	MOVO X15, X1
	PSRLQ $14, X15
	PAND X0, X15
	MOVO X15, 144(BX)
	PSRLQ $44, X1
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $20, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 160(BX)
	MOVO X3, X5
	PSRLQ $10, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLQ $40, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 192(BX)
	MOVO X6, X8
	PSRLQ $6, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLQ $36, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLQ $28, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 224(BX)
	MOVO X9, X11
	MOVO X9, X10
	PSRLQ $2, X9
	PAND X0, X9
	MOVO X9, 240(BX)
	PSRLQ $32, X11
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLQ $62, X10
	MOVO 128(AX), X12
	MOVO X12, X14
	PSLLQ $2, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 272(BX)
	MOVO X14, X13
	PSRLQ $28, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLQ $58, X13
	MOVO 144(AX), X15
	MOVO X15, X2
	PSLLQ $6, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 304(BX)
	MOVO X2, X1
	PSRLQ $24, X2
	PAND X0, X2
	MOVO X2, 320(BX)
	PSRLQ $54, X1
	MOVO 160(AX), X3
	MOVO X3, X4
	PSLLQ $10, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 336(BX)
	MOVO X4, X5
	PSRLQ $20, X4
	PAND X0, X4
	MOVO X4, 352(BX)
	PSRLQ $50, X5
	MOVO 176(AX), X6
	MOVO X6, X7
	PSLLQ $14, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 368(BX)
	MOVO X7, X8
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 384(BX)
	PSRLQ $46, X8
	MOVO 192(AX), X9
	MOVO X9, X11
	PSLLQ $18, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 400(BX)
	MOVO X11, X12
	PSRLQ $12, X11
	PAND X0, X11
	MOVO X11, 416(BX)
	PSRLQ $42, X12
	MOVO 208(AX), X10
	MOVO X10, X14
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 432(BX)
	MOVO X14, X15
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 448(BX)
	PSRLQ $38, X15
	MOVO 224(AX), X13
	MOVO X13, X2
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 464(BX)
	MOVO X2, X3
	PSRLQ $4, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $34, X3
	MOVO X3, 496(BX)
	MOVO 240(AX), X1
	MOVO X1, X4
	MOVO X1, X6
	PAND X0, X1
	MOVO X1, 512(BX)
	PSRLQ $30, X4
	PAND X0, X4
	MOVO X4, 528(BX)
	PSRLQ $60, X6
	MOVO 256(AX), X5
	MOVO X5, X7
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 544(BX)
	MOVO X7, X9
	PSRLQ $26, X7
	PAND X0, X7
	MOVO X7, 560(BX)
	PSRLQ $56, X9
	MOVO 272(AX), X8
	MOVO X8, X11
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 576(BX)
	MOVO X11, X10
	PSRLQ $22, X11
	PAND X0, X11
	MOVO X11, 592(BX)
	PSRLQ $52, X10
	MOVO 288(AX), X12
	MOVO X12, X14
	PSLLQ $12, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 608(BX)
	MOVO X14, X13
	PSRLQ $18, X14
	PAND X0, X14
	MOVO X14, 624(BX)
	PSRLQ $48, X13
	MOVO 304(AX), X15
	MOVO X15, X2
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 640(BX)
	MOVO X2, X3
	PSRLQ $14, X2
	PAND X0, X2
	MOVO X2, 656(BX)
	PSRLQ $44, X3
	MOVO 320(AX), X1
	MOVO X1, X4
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 672(BX)
	MOVO X4, X5
	PSRLQ $10, X4
	PAND X0, X4
	MOVO X4, 688(BX)
	PSRLQ $40, X5
	MOVO 336(AX), X6
	MOVO X6, X7
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 704(BX)
	MOVO X7, X8
	PSRLQ $6, X7
	PAND X0, X7
	MOVO X7, 720(BX)
	PSRLQ $36, X8
	MOVO 352(AX), X9
	MOVO X9, X11
	PSLLQ $28, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 736(BX)
	MOVO X11, X12
	MOVO X11, X10
	PSRLQ $2, X11
	PAND X0, X11
	MOVO X11, 752(BX)
	PSRLQ $32, X12
	PAND X0, X12
	MOVO X12, 768(BX)
	PSRLQ $62, X10
	MOVO 368(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X0, X14
	POR X14, X10
	MOVO X10, 784(BX)
	MOVO X15, X13
	PSRLQ $28, X15
	PAND X0, X15
	MOVO X15, 800(BX)
	PSRLQ $58, X13
	MOVO 384(AX), X2
	MOVO X2, X1
	PSLLQ $6, X2
	PAND X0, X2
	POR X2, X13
	MOVO X13, 816(BX)
	MOVO X1, X3
	PSRLQ $24, X1
	PAND X0, X1
	MOVO X1, 832(BX)
	PSRLQ $54, X3
	MOVO 400(AX), X4
	MOVO X4, X6
	PSLLQ $10, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 848(BX)
	MOVO X6, X5
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 864(BX)
	PSRLQ $50, X5
	MOVO 416(AX), X7
	MOVO X7, X9
	PSLLQ $14, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 880(BX)
	MOVO X9, X8
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 896(BX)
	PSRLQ $46, X8
	MOVO 432(AX), X11
	MOVO X11, X12
	PSLLQ $18, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 912(BX)
	MOVO X12, X14
	PSRLQ $12, X12
	PAND X0, X12
	MOVO X12, 928(BX)
	PSRLQ $42, X14
	MOVO 448(AX), X10
	MOVO X10, X15
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X14
	MOVO X14, 944(BX)
	MOVO X15, X2
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 960(BX)
	PSRLQ $38, X2
	MOVO 464(AX), X13
	MOVO X13, X1
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X2
	MOVO X2, 976(BX)
	MOVO X1, X4
	PSRLQ $4, X1
	PAND X0, X1
	MOVO X1, 992(BX)
	PSRLQ $34, X4
	MOVO X4, 1008(BX)
	RET

// func unpack64_31(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_31(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $2147483647, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	MOVO X2, X4
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $31, X3
	PAND X0, X3
	MOVO X3, 16(BX)
	PSRLQ $62, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 32(BX)
	MOVO X6, X7
	PSRLQ $29, X6
	PAND X0, X6
	MOVO X6, 48(BX)
	PSRLQ $60, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 64(BX)
	MOVO X9, X10
	PSRLQ $27, X9
	PAND X0, X9
	MOVO X9, 80(BX)
	PSRLQ $58, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 96(BX)
	MOVO X12, X13
	PSRLQ $25, X12
	PAND X0, X12
	MOVO X12, 112(BX)
	PSRLQ $56, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 128(BX)
	MOVO X15, X1
	PSRLQ $23, X15
	PAND X0, X15
	MOVO X15, 144(BX)
	PSRLQ $54, X1
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $10, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 160(BX)
	MOVO X3, X5
	PSRLQ $21, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLQ $52, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLQ $12, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 192(BX)
	MOVO X6, X8
	PSRLQ $19, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLQ $50, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLQ $14, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 224(BX)
	MOVO X9, X11
	PSRLQ $17, X9
	PAND X0, X9
	MOVO X9, 240(BX)
	PSRLQ $48, X11
	MOVO 128(AX), X10
	MOVO X10, X12
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 256(BX)
	MOVO X12, X14
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 272(BX)
	PSRLQ $46, X14
	MOVO 144(AX), X13
	MOVO X13, X15
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 288(BX)
	MOVO X15, X2
	PSRLQ $13, X15
	PAND X0, X15
	MOVO X15, 304(BX)
	PSRLQ $44, X2
	MOVO 160(AX), X1
	MOVO X1, X3
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 320(BX)
	MOVO X3, X4
	PSRLQ $11, X3
	PAND X0, X3
	MOVO X3, 336(BX)
	PSRLQ $42, X4
	MOVO 176(AX), X5
	MOVO X5, X6
	PSLLQ $22, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 352(BX)
	MOVO X6, X7
	PSRLQ $9, X6
	PAND X0, X6
	MOVO X6, 368(BX)
	PSRLQ $40, X7
	MOVO 192(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 384(BX)
	MOVO X9, X10
	PSRLQ $7, X9
	PAND X0, X9
	MOVO X9, 400(BX)
	PSRLQ $38, X10
	MOVO 208(AX), X11
	MOVO X11, X12
	PSLLQ $26, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 416(BX)
	MOVO X12, X13
	PSRLQ $5, X12
	PAND X0, X12
	MOVO X12, 432(BX)
	PSRLQ $36, X13
	MOVO 224(AX), X14
	MOVO X14, X15
	PSLLQ $28, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 448(BX)
	MOVO X15, X1
	PSRLQ $3, X15
	PAND X0, X15
	MOVO X15, 464(BX)
	PSRLQ $34, X1
	MOVO 240(AX), X2
	MOVO X2, X3
	PSLLQ $30, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 480(BX)
	MOVO X3, X5
	MOVO X3, X4
	PSRLQ $1, X3
	PAND X0, X3
	MOVO X3, 496(BX)
	PSRLQ $32, X5
	PAND X0, X5
	MOVO X5, 512(BX)
	PSRLQ $63, X4
	MOVO 256(AX), X6
	MOVO X6, X8
	PSLLQ $1, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 528(BX)
	MOVO X8, X7
	PSRLQ $30, X8
	PAND X0, X8
	MOVO X8, 544(BX)
	PSRLQ $61, X7
	MOVO 272(AX), X9
	MOVO X9, X11
	PSLLQ $3, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 560(BX)
	MOVO X11, X10
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 576(BX)
	PSRLQ $59, X10
	MOVO 288(AX), X12
	MOVO X12, X14
	PSLLQ $5, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 592(BX)
	MOVO X14, X13
	PSRLQ $26, X14
	PAND X0, X14
	MOVO X14, 608(BX)
	PSRLQ $57, X13
	MOVO 304(AX), X15
	MOVO X15, X2
	PSLLQ $7, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 624(BX)
	MOVO X2, X1
	PSRLQ $24, X2
	PAND X0, X2
	MOVO X2, 640(BX)
	PSRLQ $55, X1
	MOVO 320(AX), X3
	MOVO X3, X5
	PSLLQ $9, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 656(BX)
	MOVO X5, X6
	PSRLQ $22, X5
	PAND X0, X5
	MOVO X5, 672(BX)
	PSRLQ $53, X6
	MOVO 336(AX), X4
	MOVO X4, X8
	PSLLQ $11, X4
	PAND X0, X4
	POR X4, X6
	MOVO X6, 688(BX)
	MOVO X8, X9
	PSRLQ $20, X8
	PAND X0, X8
	MOVO X8, 704(BX)
	PSRLQ $51, X9
	MOVO 352(AX), X7
	MOVO X7, X11
	PSLLQ $13, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 720(BX)
	MOVO X11, X12
	PSRLQ $18, X11
	PAND X0, X11
	MOVO X11, 736(BX)
	PSRLQ $49, X12
	MOVO 368(AX), X10
	MOVO X10, X14
	PSLLQ $15, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 752(BX)
	MOVO X14, X15
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 768(BX)
	PSRLQ $47, X15
	MOVO 384(AX), X13
	MOVO X13, X2
	PSLLQ $17, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 784(BX)
	MOVO X2, X3
	PSRLQ $14, X2
	PAND X0, X2
	MOVO X2, 800(BX)
	PSRLQ $45, X3
	MOVO 400(AX), X1
	MOVO X1, X5
	PSLLQ $19, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 816(BX)
	MOVO X5, X4
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 832(BX)
	PSRLQ $43, X4
	MOVO 416(AX), X6
	MOVO X6, X8
	PSLLQ $21, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 848(BX)
	MOVO X8, X7
	PSRLQ $10, X8
	PAND X0, X8
	MOVO X8, 864(BX)
	PSRLQ $41, X7
	MOVO 432(AX), X9
	MOVO X9, X11
	PSLLQ $23, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 880(BX)
	MOVO X11, X10
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 896(BX)
	PSRLQ $39, X10
	MOVO 448(AX), X12
	MOVO X12, X14
	PSLLQ $25, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 912(BX)
	MOVO X14, X13
	PSRLQ $6, X14
	PAND X0, X14
	MOVO X14, 928(BX)
	PSRLQ $37, X13
	MOVO 464(AX), X15
	MOVO X15, X2
	PSLLQ $27, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 944(BX)
	MOVO X2, X1
	PSRLQ $4, X2
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $35, X1
	MOVO 480(AX), X3
	MOVO X3, X5
	PSLLQ $29, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 976(BX)
	MOVO X5, X6
	PSRLQ $2, X5
	PAND X0, X5
	MOVO X5, 992(BX)
	PSRLQ $33, X6
	MOVO X6, 1008(BX)
	RET

// func unpack64_32(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_32(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $4294967295, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $32, X3
	MOVO X3, 16(BX)
	MOVO 16(AX), X4
	MOVO X4, X5
	PAND X0, X4
	MOVO X4, 32(BX)
	PSRLQ $32, X5
	MOVO X5, 48(BX)
	MOVO 32(AX), X6
	MOVO X6, X7
	PAND X0, X6
	MOVO X6, 64(BX)
	PSRLQ $32, X7
	MOVO X7, 80(BX)
	MOVO 48(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 96(BX)
	PSRLQ $32, X9
	MOVO X9, 112(BX)
	MOVO 64(AX), X10
	MOVO X10, X11
	PAND X0, X10
	MOVO X10, 128(BX)
	PSRLQ $32, X11
	MOVO X11, 144(BX)
	MOVO 80(AX), X12
	MOVO X12, X13
	PAND X0, X12
	MOVO X12, 160(BX)
	PSRLQ $32, X13
	MOVO X13, 176(BX)
	MOVO 96(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 192(BX)
	PSRLQ $32, X15
	MOVO X15, 208(BX)
	MOVO 112(AX), X1
	MOVO X1, X2
	PAND X0, X1
	MOVO X1, 224(BX)
	PSRLQ $32, X2
	MOVO X2, 240(BX)
	MOVO 128(AX), X3
	MOVO X3, X4
	PAND X0, X3
	MOVO X3, 256(BX)
	PSRLQ $32, X4
	MOVO X4, 272(BX)
	MOVO 144(AX), X5
	MOVO X5, X6
	PAND X0, X5
	MOVO X5, 288(BX)
	PSRLQ $32, X6
	MOVO X6, 304(BX)
	MOVO 160(AX), X7
	MOVO X7, X8
	PAND X0, X7
	MOVO X7, 320(BX)
	PSRLQ $32, X8
	MOVO X8, 336(BX)
	MOVO 176(AX), X9
	MOVO X9, X10
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $32, X10
	MOVO X10, 368(BX)
	MOVO 192(AX), X11
	MOVO X11, X12
	PAND X0, X11
	MOVO X11, 384(BX)
	PSRLQ $32, X12
	MOVO X12, 400(BX)
	MOVO 208(AX), X13
	MOVO X13, X14
	PAND X0, X13
	MOVO X13, 416(BX)
	PSRLQ $32, X14
	MOVO X14, 432(BX)
	MOVO 224(AX), X15
	MOVO X15, X1
	PAND X0, X15
	MOVO X15, 448(BX)
	PSRLQ $32, X1
	MOVO X1, 464(BX)
	MOVO 240(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $32, X3
	MOVO X3, 496(BX)
	MOVO 256(AX), X4
	MOVO X4, X5
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $32, X5
	MOVO X5, 528(BX)
	MOVO 272(AX), X6
	MOVO X6, X7
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $32, X7
	MOVO X7, 560(BX)
	MOVO 288(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $32, X9
	MOVO X9, 592(BX)
	MOVO 304(AX), X10
	MOVO X10, X11
	PAND X0, X10
	MOVO X10, 608(BX)
	PSRLQ $32, X11
	MOVO X11, 624(BX)
	MOVO 320(AX), X12
	MOVO X12, X13
	PAND X0, X12
	MOVO X12, 640(BX)
	PSRLQ $32, X13
	MOVO X13, 656(BX)
	MOVO 336(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 672(BX)
	PSRLQ $32, X15
	MOVO X15, 688(BX)
	MOVO 352(AX), X1
	MOVO X1, X2
	PAND X0, X1
	MOVO X1, 704(BX)
	PSRLQ $32, X2
	MOVO X2, 720(BX)
	MOVO 368(AX), X3
	MOVO X3, X4
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $32, X4
	MOVO X4, 752(BX)
	MOVO 384(AX), X5
	MOVO X5, X6
	PAND X0, X5
	MOVO X5, 768(BX)
	PSRLQ $32, X6
	MOVO X6, 784(BX)
	MOVO 400(AX), X7
	MOVO X7, X8
	PAND X0, X7
	MOVO X7, 800(BX)
	PSRLQ $32, X8
	MOVO X8, 816(BX)
	MOVO 416(AX), X9
	MOVO X9, X10
	PAND X0, X9
	MOVO X9, 832(BX)
	PSRLQ $32, X10
	MOVO X10, 848(BX)
	MOVO 432(AX), X11
	MOVO X11, X12
	PAND X0, X11
	MOVO X11, 864(BX)
	PSRLQ $32, X12
	MOVO X12, 880(BX)
	MOVO 448(AX), X13
	MOVO X13, X14
	PAND X0, X13
	MOVO X13, 896(BX)
	PSRLQ $32, X14
	MOVO X14, 912(BX)
	MOVO 464(AX), X15
	MOVO X15, X1
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $32, X1
	MOVO X1, 944(BX)
	MOVO 480(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $32, X3
	MOVO X3, 976(BX)
	MOVO 496(AX), X4
	MOVO X4, X5
	PAND X0, X4
	MOVO X4, 992(BX)
	PSRLQ $32, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_33(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_33(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $8589934591, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $33, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $31, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $2, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $35, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $29, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLQ $4, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $37, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $27, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	MOVO X11, X12
	PSRLQ $6, X11
	PAND X0, X11
	MOVO X11, 96(BX)
	PSRLQ $39, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $25, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 112(BX)
	MOVO X14, X15
	PSRLQ $8, X14
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLQ $41, X15
	MOVO 80(AX), X1
	MOVO X1, X2
	PSLLQ $23, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	MOVO X2, X4
	PSRLQ $10, X2
	PAND X0, X2
	MOVO X2, 160(BX)
	PSRLQ $43, X4
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $21, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 176(BX)
	MOVO X5, X7
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLQ $45, X7
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLQ $19, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 208(BX)
	MOVO X8, X10
	PSRLQ $14, X8
	PAND X0, X8
	MOVO X8, 224(BX)
	PSRLQ $47, X10
	MOVO 128(AX), X9
	MOVO X9, X11
	PSLLQ $17, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 240(BX)
	MOVO X11, X13
	PSRLQ $16, X11
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLQ $49, X13
	MOVO 144(AX), X12
	MOVO X12, X14
	PSLLQ $15, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 272(BX)
	MOVO X14, X1
	PSRLQ $18, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLQ $51, X1
	MOVO 160(AX), X15
	MOVO X15, X2
	PSLLQ $13, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 304(BX)
	MOVO X2, X3
	PSRLQ $20, X2
	PAND X0, X2
	MOVO X2, 320(BX)
	PSRLQ $53, X3
	MOVO 176(AX), X4
	MOVO X4, X5
	PSLLQ $11, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 336(BX)
	MOVO X5, X6
	PSRLQ $22, X5
	PAND X0, X5
	MOVO X5, 352(BX)
	PSRLQ $55, X6
	MOVO 192(AX), X7
	MOVO X7, X8
	PSLLQ $9, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 368(BX)
	MOVO X8, X9
	PSRLQ $24, X8
	PAND X0, X8
	MOVO X8, 384(BX)
	PSRLQ $57, X9
	MOVO 208(AX), X10
	MOVO X10, X11
	PSLLQ $7, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 400(BX)
	MOVO X11, X12
	PSRLQ $26, X11
	PAND X0, X11
	MOVO X11, 416(BX)
	PSRLQ $59, X12
	MOVO 224(AX), X13
	MOVO X13, X14
	PSLLQ $5, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 432(BX)
	MOVO X14, X15
	PSRLQ $28, X14
	PAND X0, X14
	MOVO X14, 448(BX)
	PSRLQ $61, X15
	MOVO 240(AX), X1
	MOVO X1, X2
	PSLLQ $3, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 464(BX)
	MOVO X2, X4
	PSRLQ $30, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $63, X4
	MOVO 256(AX), X3
	MOVO X3, X5
	PSLLQ $1, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 496(BX)
	PSRLQ $32, X5
	MOVO 272(AX), X7
	MOVO X7, X6
	PSLLQ $32, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 512(BX)
	MOVO X6, X8
	PSRLQ $1, X6
	PAND X0, X6
	MOVO X6, 528(BX)
	PSRLQ $34, X8
	MOVO 288(AX), X10
	MOVO X10, X9
	PSLLQ $30, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 544(BX)
	MOVO X9, X11
	PSRLQ $3, X9
	PAND X0, X9
	MOVO X9, 560(BX)
	PSRLQ $36, X11
	MOVO 304(AX), X13
	MOVO X13, X12
	PSLLQ $28, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 576(BX)
	MOVO X12, X14
	PSRLQ $5, X12
	PAND X0, X12
	MOVO X12, 592(BX)
	PSRLQ $38, X14
	MOVO 320(AX), X1
	MOVO X1, X15
	PSLLQ $26, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 608(BX)
	MOVO X15, X2
	PSRLQ $7, X15
	PAND X0, X15
	MOVO X15, 624(BX)
	PSRLQ $40, X2
	MOVO 336(AX), X3
	MOVO X3, X4
	PSLLQ $24, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 640(BX)
	MOVO X4, X7
	PSRLQ $9, X4
	PAND X0, X4
	MOVO X4, 656(BX)
	PSRLQ $42, X7
	MOVO 352(AX), X5
	MOVO X5, X6
	PSLLQ $22, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 672(BX)
	MOVO X6, X10
	PSRLQ $11, X6
	PAND X0, X6
	MOVO X6, 688(BX)
	PSRLQ $44, X10
	MOVO 368(AX), X8
	MOVO X8, X9
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 704(BX)
	MOVO X9, X13
	PSRLQ $13, X9
	PAND X0, X9
	MOVO X9, 720(BX)
	PSRLQ $46, X13
	MOVO 384(AX), X11
	MOVO X11, X12
	PSLLQ $18, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 736(BX)
	MOVO X12, X1
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 752(BX)
	PSRLQ $48, X1
	MOVO 400(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 768(BX)
	MOVO X15, X3
	PSRLQ $17, X15
	PAND X0, X15
	MOVO X15, 784(BX)
	PSRLQ $50, X3
	MOVO 416(AX), X2
	MOVO X2, X4
	PSLLQ $14, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 800(BX)
	MOVO X4, X5
	PSRLQ $19, X4
	PAND X0, X4
	MOVO X4, 816(BX)
	PSRLQ $52, X5
	MOVO 432(AX), X7
	MOVO X7, X6
	PSLLQ $12, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 832(BX)
	MOVO X6, X8
	PSRLQ $21, X6
	PAND X0, X6
	MOVO X6, 848(BX)
	PSRLQ $54, X8
	MOVO 448(AX), X10
	MOVO X10, X9
	PSLLQ $10, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 864(BX)
	MOVO X9, X11
	PSRLQ $23, X9
	PAND X0, X9
	MOVO X9, 880(BX)
	PSRLQ $56, X11
	MOVO 464(AX), X13
	MOVO X13, X12
	PSLLQ $8, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 896(BX)
	MOVO X12, X14
	PSRLQ $25, X12
	PAND X0, X12
	MOVO X12, 912(BX)
	PSRLQ $58, X14
	MOVO 480(AX), X1
	MOVO X1, X15
	PSLLQ $6, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 928(BX)
	MOVO X15, X2
	PSRLQ $27, X15
	PAND X0, X15
	MOVO X15, 944(BX)
	PSRLQ $60, X2
	MOVO 496(AX), X3
	MOVO X3, X4
	PSLLQ $4, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 960(BX)
	MOVO X4, X7
	PSRLQ $29, X4
	PAND X0, X4
	MOVO X4, 976(BX)
	PSRLQ $62, X7
	MOVO 512(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 992(BX)
	PSRLQ $31, X6
	MOVO X6, 1008(BX)
	RET

// func unpack64_34(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_34(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $17179869183, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $34, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $30, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $38, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $26, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $42, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	MOVO X11, X12
	PSRLQ $12, X11
	PAND X0, X11
	MOVO X11, 96(BX)
	PSRLQ $46, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 112(BX)
	MOVO X14, X15
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLQ $50, X15
	MOVO 80(AX), X1
	MOVO X1, X2
	PSLLQ $14, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	MOVO X2, X4
	PSRLQ $20, X2
	PAND X0, X2
	MOVO X2, 160(BX)
	PSRLQ $54, X4
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $10, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 176(BX)
	MOVO X5, X7
	PSRLQ $24, X5
	PAND X0, X5
	MOVO X5, 192(BX)
	PSRLQ $58, X7
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 208(BX)
	MOVO X8, X10
	PSRLQ $28, X8
	PAND X0, X8
	MOVO X8, 224(BX)
	PSRLQ $62, X10
	MOVO 128(AX), X9
	MOVO X9, X11
	PSLLQ $2, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 240(BX)
	PSRLQ $32, X11
	MOVO 144(AX), X13
	MOVO X13, X12
	PSLLQ $32, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 256(BX)
	MOVO X12, X14
	PSRLQ $2, X12
	PAND X0, X12
	MOVO X12, 272(BX)
	PSRLQ $36, X14
	MOVO 160(AX), X1
	MOVO X1, X15
	PSLLQ $28, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	MOVO X15, X2
	PSRLQ $6, X15
	PAND X0, X15
	MOVO X15, 304(BX)
	PSRLQ $40, X2
	MOVO 176(AX), X3
	MOVO X3, X4
	PSLLQ $24, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 320(BX)
	MOVO X4, X5
	PSRLQ $10, X4
	PAND X0, X4
	MOVO X4, 336(BX)
	PSRLQ $44, X5
	MOVO 192(AX), X6
	MOVO X6, X7
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 352(BX)
	MOVO X7, X8
	PSRLQ $14, X7
	PAND X0, X7
	MOVO X7, 368(BX)
	PSRLQ $48, X8
	MOVO 208(AX), X9
	MOVO X9, X10
	PSLLQ $16, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 384(BX)
	MOVO X10, X13
	PSRLQ $18, X10
	PAND X0, X10
	MOVO X10, 400(BX)
	PSRLQ $52, X13
	MOVO 224(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 416(BX)
	MOVO X12, X1
	PSRLQ $22, X12
	PAND X0, X12
	MOVO X12, 432(BX)
	PSRLQ $56, X1
	MOVO 240(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 448(BX)
	MOVO X15, X3
	PSRLQ $26, X15
	PAND X0, X15
	MOVO X15, 464(BX)
	PSRLQ $60, X3
	MOVO 256(AX), X2
	MOVO X2, X4
	PSLLQ $4, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 480(BX)
	PSRLQ $30, X4
	MOVO X4, 496(BX)
	MOVO 272(AX), X6
	MOVO X6, X5
	PAND X0, X6
	MOVO X6, 512(BX)
	PSRLQ $34, X5
	MOVO 288(AX), X7
	MOVO X7, X9
	PSLLQ $30, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 528(BX)
	MOVO X9, X8
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 544(BX)
	PSRLQ $38, X8
	MOVO 304(AX), X10
	MOVO X10, X11
	PSLLQ $26, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 560(BX)
	MOVO X11, X13
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 576(BX)
	PSRLQ $42, X13
	MOVO 320(AX), X12
	MOVO X12, X14
	PSLLQ $22, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 592(BX)
	MOVO X14, X1
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 608(BX)
	PSRLQ $46, X1
	MOVO 336(AX), X15
	MOVO X15, X2
	PSLLQ $18, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 624(BX)
	MOVO X2, X3
	PSRLQ $16, X2
	PAND X0, X2
	MOVO X2, 640(BX)
	PSRLQ $50, X3
	MOVO 352(AX), X4
	MOVO X4, X6
	PSLLQ $14, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 656(BX)
	MOVO X6, X7
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 672(BX)
	PSRLQ $54, X7
	MOVO 368(AX), X5
	MOVO X5, X9
	PSLLQ $10, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 688(BX)
	MOVO X9, X10
	PSRLQ $24, X9
	PAND X0, X9
	MOVO X9, 704(BX)
	PSRLQ $58, X10
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLQ $6, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 720(BX)
	MOVO X11, X12
	PSRLQ $28, X11
	PAND X0, X11
	MOVO X11, 736(BX)
	PSRLQ $62, X12
	MOVO 400(AX), X13
	MOVO X13, X14
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 752(BX)
	PSRLQ $32, X14
	MOVO 416(AX), X15
	MOVO X15, X1
	PSLLQ $32, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 768(BX)
	MOVO X1, X2
	PSRLQ $2, X1
	PAND X0, X1
	MOVO X1, 784(BX)
	PSRLQ $36, X2
	MOVO 432(AX), X4
	MOVO X4, X3
	PSLLQ $28, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 800(BX)
	MOVO X3, X6
	PSRLQ $6, X3
	PAND X0, X3
	MOVO X3, 816(BX)
	PSRLQ $40, X6
	MOVO 448(AX), X5
	MOVO X5, X7
	PSLLQ $24, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 832(BX)
	MOVO X7, X9
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 848(BX)
	PSRLQ $44, X9
	MOVO 464(AX), X8
	MOVO X8, X10
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 864(BX)
	MOVO X10, X11
	PSRLQ $14, X10
	PAND X0, X10
	MOVO X10, 880(BX)
	PSRLQ $48, X11
	MOVO 480(AX), X13
	MOVO X13, X12
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 896(BX)
	MOVO X12, X15
	PSRLQ $18, X12
	PAND X0, X12
	MOVO X12, 912(BX)
	PSRLQ $52, X15
	MOVO 496(AX), X14
	MOVO X14, X1
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 928(BX)
	MOVO X1, X4
	PSRLQ $22, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	PSRLQ $56, X4
	MOVO 512(AX), X2
	MOVO X2, X3
	PSLLQ $8, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 960(BX)
	MOVO X3, X5
	PSRLQ $26, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $60, X5
	MOVO 528(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 992(BX)
	PSRLQ $30, X7
	MOVO X7, 1008(BX)
	RET

// func unpack64_35(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_35(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $34359738367, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $35, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $29, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $6, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $41, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $23, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLQ $12, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $47, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $17, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	MOVO X11, X12
	PSRLQ $18, X11
	PAND X0, X11
	MOVO X11, 96(BX)
	PSRLQ $53, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $11, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 112(BX)
	MOVO X14, X15
	PSRLQ $24, X14
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLQ $59, X15
	MOVO 80(AX), X1
	MOVO X1, X2
	PSLLQ $5, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	PSRLQ $30, X2
	MOVO 96(AX), X4
	MOVO X4, X3
	PSLLQ $34, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	MOVO X3, X5
	PSRLQ $1, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLQ $36, X5
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLQ $28, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 192(BX)
	MOVO X6, X8
	PSRLQ $7, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLQ $42, X8
	MOVO 128(AX), X10
	MOVO X10, X9
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	MOVO X9, X11
	PSRLQ $13, X9
	PAND X0, X9
	MOVO X9, 240(BX)
	PSRLQ $48, X11
	MOVO 144(AX), X13
	MOVO X13, X12
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 256(BX)
	MOVO X12, X14
	PSRLQ $19, X12
	PAND X0, X12
	MOVO X12, 272(BX)
	PSRLQ $54, X14
	MOVO 160(AX), X1
	MOVO X1, X15
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	MOVO X15, X4
	PSRLQ $25, X15
	PAND X0, X15
	MOVO X15, 304(BX)
	PSRLQ $60, X4
	MOVO 176(AX), X2
	MOVO X2, X3
	PSLLQ $4, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 320(BX)
	PSRLQ $31, X3
	MOVO 192(AX), X7
	MOVO X7, X5
	PSLLQ $33, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 336(BX)
	MOVO X5, X6
	PSRLQ $2, X5
	PAND X0, X5
	MOVO X5, 352(BX)
	PSRLQ $37, X6
	MOVO 208(AX), X10
	MOVO X10, X8
	PSLLQ $27, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 368(BX)
	MOVO X8, X9
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 384(BX)
	PSRLQ $43, X9
	MOVO 224(AX), X13
	MOVO X13, X11
	PSLLQ $21, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 400(BX)
	MOVO X11, X12
	PSRLQ $14, X11
	PAND X0, X11
	MOVO X11, 416(BX)
	PSRLQ $49, X12
	MOVO 240(AX), X1
	MOVO X1, X14
	PSLLQ $15, X1
	PAND X0, X1
	POR X1, X12
	MOVO X12, 432(BX)
	MOVO X14, X15
	PSRLQ $20, X14
	PAND X0, X14
	MOVO X14, 448(BX)
	PSRLQ $55, X15
	MOVO 256(AX), X2
	MOVO X2, X4
	PSLLQ $9, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 464(BX)
	MOVO X4, X7
	PSRLQ $26, X4
	PAND X0, X4
	MOVO X4, 480(BX)
	PSRLQ $61, X7
	MOVO 272(AX), X3
	MOVO X3, X5
	PSLLQ $3, X3
	PAND X0, X3
	POR X3, X7
	MOVO X7, 496(BX)
	PSRLQ $32, X5
	MOVO 288(AX), X10
	MOVO X10, X6
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 512(BX)
	MOVO X6, X8
	PSRLQ $3, X6
	PAND X0, X6
	MOVO X6, 528(BX)
	PSRLQ $38, X8
	MOVO 304(AX), X13
	MOVO X13, X9
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X8
	MOVO X8, 544(BX)
	MOVO X9, X11
	PSRLQ $9, X9
	PAND X0, X9
	MOVO X9, 560(BX)
	PSRLQ $44, X11
	MOVO 320(AX), X1
	MOVO X1, X12
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 576(BX)
	MOVO X12, X14
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 592(BX)
	PSRLQ $50, X14
	MOVO 336(AX), X2
	MOVO X2, X15
	PSLLQ $14, X2
	PAND X0, X2
	POR X2, X14
	MOVO X14, 608(BX)
	MOVO X15, X4
	PSRLQ $21, X15
	PAND X0, X15
	MOVO X15, 624(BX)
	PSRLQ $56, X4
	MOVO 352(AX), X3
	MOVO X3, X7
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 640(BX)
	MOVO X7, X10
	PSRLQ $27, X7
	PAND X0, X7
	MOVO X7, 656(BX)
	PSRLQ $62, X10
	MOVO 368(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X0, X5
	POR X5, X10
	MOVO X10, 672(BX)
	PSRLQ $33, X6
	MOVO 384(AX), X13
	MOVO X13, X8
	PSLLQ $31, X13
	PAND X0, X13
	POR X13, X6
	MOVO X6, 688(BX)
	MOVO X8, X9
	PSRLQ $4, X8
	PAND X0, X8
	MOVO X8, 704(BX)
	PSRLQ $39, X9
	MOVO 400(AX), X1
	MOVO X1, X11
	PSLLQ $25, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 720(BX)
	MOVO X11, X12
	PSRLQ $10, X11
	PAND X0, X11
	MOVO X11, 736(BX)
	PSRLQ $45, X12
	MOVO 416(AX), X2
	MOVO X2, X14
	PSLLQ $19, X2
	PAND X0, X2
	POR X2, X12
	MOVO X12, 752(BX)
	MOVO X14, X15
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 768(BX)
	PSRLQ $51, X15
	MOVO 432(AX), X3
	MOVO X3, X4
	PSLLQ $13, X3
	PAND X0, X3
	POR X3, X15
	MOVO X15, 784(BX)
	MOVO X4, X7
	PSRLQ $22, X4
	PAND X0, X4
	MOVO X4, 800(BX)
	PSRLQ $57, X7
	MOVO 448(AX), X5
	MOVO X5, X10
	PSLLQ $7, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 816(BX)
	MOVO X10, X13
	PSRLQ $28, X10
	PAND X0, X10
	MOVO X10, 832(BX)
	PSRLQ $63, X13
	MOVO 464(AX), X6
	MOVO X6, X8
	PSLLQ $1, X6
	PAND X0, X6
	POR X6, X13
	MOVO X13, 848(BX)
	PSRLQ $34, X8
	MOVO 480(AX), X1
	MOVO X1, X9
	PSLLQ $30, X1
	PAND X0, X1
	POR X1, X8
	MOVO X8, 864(BX)
	MOVO X9, X11
	PSRLQ $5, X9
	PAND X0, X9
	MOVO X9, 880(BX)
	PSRLQ $40, X11
	MOVO 496(AX), X2
	MOVO X2, X12
	PSLLQ $24, X2
	PAND X0, X2
	POR X2, X11
	MOVO X11, 896(BX)
	MOVO X12, X14
	PSRLQ $11, X12
	PAND X0, X12
	MOVO X12, 912(BX)
	PSRLQ $46, X14
	MOVO 512(AX), X3
	MOVO X3, X15
	PSLLQ $18, X3
	PAND X0, X3
	POR X3, X14
	MOVO X14, 928(BX)
	MOVO X15, X4
	PSRLQ $17, X15
	PAND X0, X15
	MOVO X15, 944(BX)
	PSRLQ $52, X4
	MOVO 528(AX), X5
	MOVO X5, X7
	PSLLQ $12, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 960(BX)
	MOVO X7, X10
	PSRLQ $23, X7
	PAND X0, X7
	MOVO X7, 976(BX)
	PSRLQ $58, X10
	MOVO 544(AX), X6
	MOVO X6, X13
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X10
	MOVO X10, 992(BX)
	PSRLQ $29, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_36(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_36(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $68719476735, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $36, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $28, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $8, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $44, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $20, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $52, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	MOVO X11, X12
	PSRLQ $24, X11
	PAND X0, X11
	MOVO X11, 96(BX)
	PSRLQ $60, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $4, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 112(BX)
	PSRLQ $32, X14
	MOVO 80(AX), X15
	MOVO X15, X1
	PSLLQ $32, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 128(BX)
	MOVO X1, X2
	PSRLQ $4, X1
	PAND X0, X1
	MOVO X1, 144(BX)
	PSRLQ $40, X2
	MOVO 96(AX), X4
	MOVO X4, X3
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	MOVO X3, X5
	PSRLQ $12, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLQ $48, X5
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLQ $16, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 192(BX)
	MOVO X6, X8
	PSRLQ $20, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLQ $56, X8
	MOVO 128(AX), X10
	MOVO X10, X9
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	PSRLQ $28, X9
	MOVO X9, 240(BX)
	MOVO 144(AX), X11
	MOVO X11, X13
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLQ $36, X13
	MOVO 160(AX), X12
	MOVO X12, X15
	PSLLQ $28, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 272(BX)
	MOVO X15, X14
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 288(BX)
	PSRLQ $44, X14
	MOVO 176(AX), X1
	MOVO X1, X4
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 304(BX)
	MOVO X4, X2
	PSRLQ $16, X4
	PAND X0, X4
	MOVO X4, 320(BX)
	PSRLQ $52, X2
	MOVO 192(AX), X3
	MOVO X3, X7
	PSLLQ $12, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 336(BX)
	MOVO X7, X5
	PSRLQ $24, X7
	PAND X0, X7
	MOVO X7, 352(BX)
	PSRLQ $60, X5
	MOVO 208(AX), X6
	MOVO X6, X10
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 368(BX)
	PSRLQ $32, X10
	MOVO 224(AX), X8
	MOVO X8, X9
	PSLLQ $32, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 384(BX)
	MOVO X9, X11
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 400(BX)
	PSRLQ $40, X11
	MOVO 240(AX), X12
	MOVO X12, X13
	PSLLQ $24, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 416(BX)
	MOVO X13, X15
	PSRLQ $12, X13
	PAND X0, X13
	MOVO X13, 432(BX)
	PSRLQ $48, X15
	MOVO 256(AX), X1
	MOVO X1, X14
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 448(BX)
	MOVO X14, X4
	PSRLQ $20, X14
	PAND X0, X14
	MOVO X14, 464(BX)
	PSRLQ $56, X4
	MOVO 272(AX), X3
	MOVO X3, X2
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 480(BX)
	PSRLQ $28, X2
	MOVO X2, 496(BX)
	MOVO 288(AX), X7
	MOVO X7, X6
	PAND X0, X7
	MOVO X7, 512(BX)
	PSRLQ $36, X6
	MOVO 304(AX), X5
	MOVO X5, X8
	PSLLQ $28, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 528(BX)
	MOVO X8, X10
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 544(BX)
	PSRLQ $44, X10
	MOVO 320(AX), X9
	MOVO X9, X12
	PSLLQ $20, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 560(BX)
	MOVO X12, X11
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 576(BX)
	PSRLQ $52, X11
	MOVO 336(AX), X13
	MOVO X13, X1
	PSLLQ $12, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 592(BX)
	MOVO X1, X15
	PSRLQ $24, X1
	PAND X0, X1
	MOVO X1, 608(BX)
	PSRLQ $60, X15
	MOVO 352(AX), X14
	MOVO X14, X3
	PSLLQ $4, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 624(BX)
	PSRLQ $32, X3
	MOVO 368(AX), X4
	MOVO X4, X2
	PSLLQ $32, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 640(BX)
	MOVO X2, X7
	PSRLQ $4, X2
	PAND X0, X2
	MOVO X2, 656(BX)
	PSRLQ $40, X7
	MOVO 384(AX), X5
	MOVO X5, X6
	PSLLQ $24, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 672(BX)
	MOVO X6, X8
	PSRLQ $12, X6
	PAND X0, X6
	MOVO X6, 688(BX)
	PSRLQ $48, X8
	MOVO 400(AX), X9
	MOVO X9, X10
	PSLLQ $16, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 704(BX)
	MOVO X10, X12
	PSRLQ $20, X10
	PAND X0, X10
	MOVO X10, 720(BX)
	PSRLQ $56, X12
	MOVO 416(AX), X13
	MOVO X13, X11
	PSLLQ $8, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 736(BX)
	PSRLQ $28, X11
	MOVO X11, 752(BX)
	MOVO 432(AX), X1
	MOVO X1, X14
	PAND X0, X1
	MOVO X1, 768(BX)
	PSRLQ $36, X14
	MOVO 448(AX), X15
	MOVO X15, X4
	PSLLQ $28, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 784(BX)
	MOVO X4, X3
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 800(BX)
	PSRLQ $44, X3
	MOVO 464(AX), X2
	MOVO X2, X5
	PSLLQ $20, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 816(BX)
	MOVO X5, X7
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 832(BX)
	PSRLQ $52, X7
	MOVO 480(AX), X6
	MOVO X6, X9
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 848(BX)
	MOVO X9, X8
	PSRLQ $24, X9
	PAND X0, X9
	MOVO X9, 864(BX)
	PSRLQ $60, X8
	MOVO 496(AX), X10
	MOVO X10, X13
	PSLLQ $4, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 880(BX)
	PSRLQ $32, X13
	MOVO 512(AX), X12
	MOVO X12, X11
	PSLLQ $32, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 896(BX)
	MOVO X11, X1
	PSRLQ $4, X11
	PAND X0, X11
	MOVO X11, 912(BX)
	PSRLQ $40, X1
	MOVO 528(AX), X15
	MOVO X15, X14
	PSLLQ $24, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 928(BX)
	MOVO X14, X4
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 944(BX)
	PSRLQ $48, X4
	MOVO 544(AX), X2
	MOVO X2, X3
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 960(BX)
	MOVO X3, X5
	PSRLQ $20, X3
	PAND X0, X3
	MOVO X3, 976(BX)
	PSRLQ $56, X5
	MOVO 560(AX), X6
	MOVO X6, X7
	PSLLQ $8, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 992(BX)
	PSRLQ $28, X7
	MOVO X7, 1008(BX)
	RET

// func unpack64_37(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_37(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $137438953471, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $37, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $27, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $10, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $47, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $17, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLQ $20, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $57, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $7, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	PSRLQ $30, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $34, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	MOVO X13, X14
	PSRLQ $3, X13
	PAND X0, X13
	MOVO X13, 112(BX)
	PSRLQ $40, X14
	MOVO 80(AX), X15
	MOVO X15, X1
	PSLLQ $24, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 128(BX)
	MOVO X1, X2
	PSRLQ $13, X1
	PAND X0, X1
	MOVO X1, 144(BX)
	PSRLQ $50, X2
	MOVO 96(AX), X4
	MOVO X4, X3
	PSLLQ $14, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	MOVO X3, X5
	PSRLQ $23, X3
	PAND X0, X3
	MOVO X3, 176(BX)
	PSRLQ $60, X5
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLQ $4, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 192(BX)
	PSRLQ $33, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $31, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 208(BX)
	MOVO X10, X9
	PSRLQ $6, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLQ $43, X9
	MOVO 144(AX), X12
	MOVO X12, X11
	PSLLQ $21, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 240(BX)
	MOVO X11, X13
	PSRLQ $16, X11
	PAND X0, X11
	MOVO X11, 256(BX)
	PSRLQ $53, X13
	MOVO 160(AX), X15
	MOVO X15, X14
	PSLLQ $11, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 272(BX)
	MOVO X14, X1
	PSRLQ $26, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLQ $63, X1
	MOVO 176(AX), X4
	MOVO X4, X2
	PSLLQ $1, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 304(BX)
	PSRLQ $36, X2
	MOVO 192(AX), X3
	MOVO X3, X7
	PSLLQ $28, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 320(BX)
	MOVO X7, X5
	PSRLQ $9, X7
	PAND X0, X7
	MOVO X7, 336(BX)
	PSRLQ $46, X5
	MOVO 208(AX), X8
	MOVO X8, X6
	PSLLQ $18, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 352(BX)
	MOVO X6, X10
	PSRLQ $19, X6
	PAND X0, X6
	MOVO X6, 368(BX)
	PSRLQ $56, X10
	MOVO 224(AX), X12
	MOVO X12, X9
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 384(BX)
	PSRLQ $29, X9
	MOVO 240(AX), X11
	MOVO X11, X15
	PSLLQ $35, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 400(BX)
	MOVO X15, X13
	PSRLQ $2, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLQ $39, X13
	MOVO 256(AX), X14
	MOVO X14, X4
	PSLLQ $25, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 432(BX)
	MOVO X4, X1
	PSRLQ $12, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLQ $49, X1
	MOVO 272(AX), X3
	MOVO X3, X2
	PSLLQ $15, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 464(BX)
	MOVO X2, X7
	PSRLQ $22, X2
	PAND X0, X2
	MOVO X2, 480(BX)
	PSRLQ $59, X7
	MOVO 288(AX), X8
	MOVO X8, X5
	PSLLQ $5, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 496(BX)
	PSRLQ $32, X5
	MOVO 304(AX), X6
	MOVO X6, X12
	PSLLQ $32, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 512(BX)
	MOVO X12, X10
	PSRLQ $5, X12
	PAND X0, X12
	MOVO X12, 528(BX)
	PSRLQ $42, X10
	MOVO 320(AX), X11
	MOVO X11, X9
	PSLLQ $22, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 544(BX)
	MOVO X9, X15
	PSRLQ $15, X9
	PAND X0, X9
	MOVO X9, 560(BX)
	PSRLQ $52, X15
	MOVO 336(AX), X14
	MOVO X14, X13
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 576(BX)
	MOVO X13, X4
	PSRLQ $25, X13
	PAND X0, X13
	MOVO X13, 592(BX)
	PSRLQ $62, X4
	MOVO 352(AX), X3
	MOVO X3, X1
	PSLLQ $2, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 608(BX)
	PSRLQ $35, X1
	MOVO 368(AX), X2
	MOVO X2, X8
	PSLLQ $29, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 624(BX)
	MOVO X8, X7
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 640(BX)
	PSRLQ $45, X7
	MOVO 384(AX), X6
	MOVO X6, X5
	PSLLQ $19, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 656(BX)
	MOVO X5, X12
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 672(BX)
	PSRLQ $55, X12
	MOVO 400(AX), X11
	MOVO X11, X10
	PSLLQ $9, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 688(BX)
	PSRLQ $28, X10
	MOVO 416(AX), X9
	MOVO X9, X14
	PSLLQ $36, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 704(BX)
	MOVO X14, X15
	PSRLQ $1, X14
	PAND X0, X14
	MOVO X14, 720(BX)
	PSRLQ $38, X15
	MOVO 432(AX), X13
	MOVO X13, X3
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 736(BX)
	MOVO X3, X4
	PSRLQ $11, X3
	PAND X0, X3
	MOVO X3, 752(BX)
	PSRLQ $48, X4
	MOVO 448(AX), X2
	MOVO X2, X1
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 768(BX)
	MOVO X1, X8
	PSRLQ $21, X1
	PAND X0, X1
	MOVO X1, 784(BX)
	PSRLQ $58, X8
	MOVO 464(AX), X6
	MOVO X6, X7
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 800(BX)
	PSRLQ $31, X7
	MOVO 480(AX), X5
	MOVO X5, X11
	PSLLQ $33, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 816(BX)
	MOVO X11, X12
	PSRLQ $4, X11
	PAND X0, X11
	MOVO X11, 832(BX)
	PSRLQ $41, X12
	MOVO 496(AX), X9
	MOVO X9, X10
	PSLLQ $23, X9
	PAND X0, X9
	POR X9, X12
	MOVO X12, 848(BX)
	MOVO X10, X14
	PSRLQ $14, X10
	PAND X0, X10
	MOVO X10, 864(BX)
	PSRLQ $51, X14
	MOVO 512(AX), X13
	MOVO X13, X15
	PSLLQ $13, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 880(BX)
	MOVO X15, X3
	PSRLQ $24, X15
	PAND X0, X15
	MOVO X15, 896(BX)
	PSRLQ $61, X3
	MOVO 528(AX), X2
	MOVO X2, X4
	PSLLQ $3, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 912(BX)
	PSRLQ $34, X4
	MOVO 544(AX), X1
	MOVO X1, X6
	PSLLQ $30, X1
	PAND X0, X1
	POR X1, X4
	MOVO X4, 928(BX)
	MOVO X6, X8
	PSRLQ $7, X6
	PAND X0, X6
	MOVO X6, 944(BX)
	PSRLQ $44, X8
	MOVO 560(AX), X5
	MOVO X5, X7
	PSLLQ $20, X5
	PAND X0, X5
	POR X5, X8
	MOVO X8, 960(BX)
	MOVO X7, X11
	PSRLQ $17, X7
	PAND X0, X7
	MOVO X7, 976(BX)
	PSRLQ $54, X11
	MOVO 576(AX), X9
	MOVO X9, X12
	PSLLQ $10, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 992(BX)
	PSRLQ $27, X12
	MOVO X12, 1008(BX)
	RET

// func unpack64_38(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_38(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $274877906943, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $38, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $26, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $50, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $14, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	MOVO X8, X9
	PSRLQ $24, X8
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $62, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	PSRLQ $36, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $28, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	MOVO X13, X14
	PSRLQ $10, X13
	PAND X0, X13
	MOVO X13, 112(BX)
	PSRLQ $48, X14
	MOVO 80(AX), X15
	MOVO X15, X1
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 128(BX)
	MOVO X1, X2
	PSRLQ $22, X1
	PAND X0, X1
	MOVO X1, 144(BX)
	PSRLQ $60, X2
	MOVO 96(AX), X4
	MOVO X4, X3
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	PSRLQ $34, X3
	MOVO 112(AX), X5
	MOVO X5, X7
	PSLLQ $30, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 176(BX)
	MOVO X7, X6
	PSRLQ $8, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLQ $46, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $18, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 208(BX)
	MOVO X10, X9
	PSRLQ $20, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLQ $58, X9
	MOVO 144(AX), X12
	MOVO X12, X11
	PSLLQ $6, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 240(BX)
	PSRLQ $32, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLQ $32, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 256(BX)
	MOVO X15, X14
	PSRLQ $6, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLQ $44, X14
	MOVO 176(AX), X1
	MOVO X1, X4
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	MOVO X4, X2
	PSRLQ $18, X4
	PAND X0, X4
	MOVO X4, 304(BX)
	PSRLQ $56, X2
	MOVO 192(AX), X5
	MOVO X5, X3
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 320(BX)
	PSRLQ $30, X3
	MOVO 208(AX), X7
	MOVO X7, X8
	PSLLQ $34, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 336(BX)
	MOVO X8, X6
	PSRLQ $4, X8
	PAND X0, X8
	MOVO X8, 352(BX)
	PSRLQ $42, X6
	MOVO 224(AX), X10
	MOVO X10, X12
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 368(BX)
	MOVO X12, X9
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLQ $54, X9
	MOVO 240(AX), X13
	MOVO X13, X11
	PSLLQ $10, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 400(BX)
	PSRLQ $28, X11
	MOVO 256(AX), X15
	MOVO X15, X1
	PSLLQ $36, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 416(BX)
	MOVO X1, X14
	PSRLQ $2, X1
	PAND X0, X1
	MOVO X1, 432(BX)
	PSRLQ $40, X14
	MOVO 272(AX), X4
	MOVO X4, X5
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 448(BX)
	MOVO X5, X2
	PSRLQ $14, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLQ $52, X2
	MOVO 288(AX), X7
	MOVO X7, X3
	PSLLQ $12, X7
	PAND X0, X7
	POR X7, X2
	MOVO X2, 480(BX)
	PSRLQ $26, X3
	MOVO X3, 496(BX)
	MOVO 304(AX), X8
	MOVO X8, X10
	PAND X0, X8
	MOVO X8, 512(BX)
	PSRLQ $38, X10
	MOVO 320(AX), X6
	MOVO X6, X12
	PSLLQ $26, X6
	PAND X0, X6
	POR X6, X10
	MOVO X10, 528(BX)
	MOVO X12, X13
	PSRLQ $12, X12
	PAND X0, X12
	MOVO X12, 544(BX)
	PSRLQ $50, X13
	MOVO 336(AX), X9
	MOVO X9, X15
	PSLLQ $14, X9
	PAND X0, X9
	POR X9, X13
	MOVO X13, 560(BX)
	MOVO X15, X11
	PSRLQ $24, X15
	PAND X0, X15
	MOVO X15, 576(BX)
	PSRLQ $62, X11
	MOVO 352(AX), X1
	MOVO X1, X4
	PSLLQ $2, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 592(BX)
	PSRLQ $36, X4
	MOVO 368(AX), X14
	MOVO X14, X5
	PSLLQ $28, X14
	PAND X0, X14
	POR X14, X4
	MOVO X4, 608(BX)
	MOVO X5, X7
	PSRLQ $10, X5
	PAND X0, X5
	MOVO X5, 624(BX)
	PSRLQ $48, X7
	MOVO 384(AX), X2
	MOVO X2, X3
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X7
	MOVO X7, 640(BX)
	MOVO X3, X8
	PSRLQ $22, X3
	PAND X0, X3
	MOVO X3, 656(BX)
	PSRLQ $60, X8
	MOVO 400(AX), X6
	MOVO X6, X10
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 672(BX)
	PSRLQ $34, X10
	MOVO 416(AX), X12
	MOVO X12, X9
	PSLLQ $30, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 688(BX)
	MOVO X9, X13
	PSRLQ $8, X9
	PAND X0, X9
	MOVO X9, 704(BX)
	PSRLQ $46, X13
	MOVO 432(AX), X15
	MOVO X15, X1
	PSLLQ $18, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 720(BX)
	MOVO X1, X11
	PSRLQ $20, X1
	PAND X0, X1
	MOVO X1, 736(BX)
	PSRLQ $58, X11
	MOVO 448(AX), X14
	MOVO X14, X4
	PSLLQ $6, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 752(BX)
	PSRLQ $32, X4
	MOVO 464(AX), X5
	MOVO X5, X2
	PSLLQ $32, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 768(BX)
	MOVO X2, X7
	PSRLQ $6, X2
	PAND X0, X2
	MOVO X2, 784(BX)
	PSRLQ $44, X7
	MOVO 480(AX), X3
	MOVO X3, X6
	PSLLQ $20, X3
	PAND X0, X3
	POR X3, X7
	MOVO X7, 800(BX)
	MOVO X6, X8
	PSRLQ $18, X6
	PAND X0, X6
	MOVO X6, 816(BX)
	PSRLQ $56, X8
	MOVO 496(AX), X12
	MOVO X12, X10
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X8
	MOVO X8, 832(BX)
	PSRLQ $30, X10
	MOVO 512(AX), X9
	MOVO X9, X15
	PSLLQ $34, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 848(BX)
	MOVO X15, X13
	PSRLQ $4, X15
	PAND X0, X15
	MOVO X15, 864(BX)
	PSRLQ $42, X13
	MOVO 528(AX), X1
	MOVO X1, X14
	PSLLQ $22, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 880(BX)
	MOVO X14, X11
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 896(BX)
	PSRLQ $54, X11
	MOVO 544(AX), X5
	MOVO X5, X4
	PSLLQ $10, X5
	PAND X0, X5
	POR X5, X11
	MOVO X11, 912(BX)
	PSRLQ $28, X4
	MOVO 560(AX), X2
	MOVO X2, X3
	PSLLQ $36, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 928(BX)
	MOVO X3, X7
	PSRLQ $2, X3
	PAND X0, X3
	MOVO X3, 944(BX)
	PSRLQ $40, X7
	MOVO 576(AX), X6
	MOVO X6, X12
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 960(BX)
	MOVO X12, X8
	PSRLQ $14, X12
	PAND X0, X12
	MOVO X12, 976(BX)
	PSRLQ $52, X8
	MOVO 592(AX), X9
	MOVO X9, X10
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 992(BX)
	PSRLQ $26, X10
	MOVO X10, 1008(BX)
	RET

// func unpack64_39(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_39(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $549755813887, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $39, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $25, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $14, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $53, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $11, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	PSRLQ $28, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $36, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	MOVO X10, X11
	PSRLQ $3, X10
	PAND X0, X10
	MOVO X10, 80(BX)
	PSRLQ $42, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $22, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	MOVO X13, X14
	PSRLQ $17, X13
	PAND X0, X13
	MOVO X13, 112(BX)
	PSRLQ $56, X14
	MOVO 80(AX), X15
	MOVO X15, X1
	PSLLQ $8, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 128(BX)
	PSRLQ $31, X1
	MOVO 96(AX), X2
	MOVO X2, X4
	PSLLQ $33, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 144(BX)
	MOVO X4, X3
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 160(BX)
	PSRLQ $45, X3
	MOVO 112(AX), X5
	MOVO X5, X7
	PSLLQ $19, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 176(BX)
	MOVO X7, X6
	PSRLQ $20, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLQ $59, X6
	MOVO 128(AX), X9
	MOVO X9, X8
	PSLLQ $5, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 208(BX)
	PSRLQ $34, X8
	MOVO 144(AX), X10
	MOVO X10, X12
	PSLLQ $30, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	MOVO X12, X11
	PSRLQ $9, X12
	PAND X0, X12
	MOVO X12, 240(BX)
	PSRLQ $48, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 256(BX)
	MOVO X15, X14
	PSRLQ $23, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLQ $62, X14
	MOVO 176(AX), X2
	MOVO X2, X1
	PSLLQ $2, X2
	PAND X0, X2
	POR X2, X14
	MOVO X14, 288(BX)
	PSRLQ $37, X1
	MOVO 192(AX), X4
	MOVO X4, X5
	PSLLQ $27, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 304(BX)
	MOVO X5, X3
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 320(BX)
	PSRLQ $51, X3
	MOVO 208(AX), X7
	MOVO X7, X9
	PSLLQ $13, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 336(BX)
	PSRLQ $26, X9
	MOVO 224(AX), X6
	MOVO X6, X10
	PSLLQ $38, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 352(BX)
	MOVO X10, X8
	PSRLQ $1, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	PSRLQ $40, X8
	MOVO 240(AX), X12
	MOVO X12, X13
	PSLLQ $24, X12
	PAND X0, X12
	POR X12, X8
	MOVO X8, 384(BX)
	MOVO X13, X11
	PSRLQ $15, X13
	PAND X0, X13
	MOVO X13, 400(BX)
	PSRLQ $54, X11
	MOVO 256(AX), X15
	MOVO X15, X2
	PSLLQ $10, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 416(BX)
	PSRLQ $29, X2
	MOVO 272(AX), X14
	MOVO X14, X4
	PSLLQ $35, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 432(BX)
	MOVO X4, X1
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 448(BX)
	PSRLQ $43, X1
	MOVO 288(AX), X5
	MOVO X5, X7
	PSLLQ $21, X5
	PAND X0, X5
	POR X5, X1
	MOVO X1, 464(BX)
	MOVO X7, X3
	PSRLQ $18, X7
	PAND X0, X7
	MOVO X7, 480(BX)
	PSRLQ $57, X3
	MOVO 304(AX), X6
	MOVO X6, X9
	PSLLQ $7, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 496(BX)
	PSRLQ $32, X9
	MOVO 320(AX), X10
	MOVO X10, X12
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 512(BX)
	MOVO X12, X8
	PSRLQ $7, X12
	PAND X0, X12
	MOVO X12, 528(BX)
	PSRLQ $46, X8
	MOVO 336(AX), X13
	MOVO X13, X15
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X8
	MOVO X8, 544(BX)
	MOVO X15, X11
	PSRLQ $21, X15
	PAND X0, X15
	MOVO X15, 560(BX)
	PSRLQ $60, X11
	MOVO 352(AX), X14
	MOVO X14, X2
	PSLLQ $4, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 576(BX)
	PSRLQ $35, X2
	MOVO 368(AX), X4
	MOVO X4, X5
	PSLLQ $29, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 592(BX)
	MOVO X5, X1
	PSRLQ $10, X5
	PAND X0, X5
	MOVO X5, 608(BX)
	PSRLQ $49, X1
	MOVO 384(AX), X7
	MOVO X7, X6
	PSLLQ $15, X7
	PAND X0, X7
	POR X7, X1
	MOVO X1, 624(BX)
	MOVO X6, X3
	PSRLQ $24, X6
	PAND X0, X6
	MOVO X6, 640(BX)
	PSRLQ $63, X3
	MOVO 400(AX), X10
	MOVO X10, X9
	PSLLQ $1, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 656(BX)
	PSRLQ $38, X9
	MOVO 416(AX), X12
	MOVO X12, X13
	PSLLQ $26, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 672(BX)
	MOVO X13, X8
	PSRLQ $13, X13
	PAND X0, X13
	MOVO X13, 688(BX)
	PSRLQ $52, X8
	MOVO 432(AX), X15
	MOVO X15, X14
	PSLLQ $12, X15
	PAND X0, X15
	POR X15, X8
	MOVO X8, 704(BX)
	PSRLQ $27, X14
	MOVO 448(AX), X11
	MOVO X11, X4
	PSLLQ $37, X11
	PAND X0, X11
	POR X11, X14
	MOVO X14, 720(BX)
	MOVO X4, X2
	PSRLQ $2, X4
	PAND X0, X4
	MOVO X4, 736(BX)
	PSRLQ $41, X2
	MOVO 464(AX), X5
	MOVO X5, X7
	PSLLQ $23, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 752(BX)
	MOVO X7, X1
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $55, X1
	MOVO 480(AX), X6
	MOVO X6, X10
	PSLLQ $9, X6
	PAND X0, X6
	POR X6, X1
	MOVO X1, 784(BX)
	PSRLQ $30, X10
	MOVO 496(AX), X3
	MOVO X3, X12
	PSLLQ $34, X3
	PAND X0, X3
	POR X3, X10
	MOVO X10, 800(BX)
	MOVO X12, X9
	PSRLQ $5, X12
	PAND X0, X12
	MOVO X12, 816(BX)
	PSRLQ $44, X9
	MOVO 512(AX), X13
	MOVO X13, X15
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 832(BX)
	MOVO X15, X8
	PSRLQ $19, X15
	PAND X0, X15
	MOVO X15, 848(BX)
	PSRLQ $58, X8
	MOVO 528(AX), X11
	MOVO X11, X14
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 864(BX)
	PSRLQ $33, X14
	MOVO 544(AX), X4
	MOVO X4, X5
	PSLLQ $31, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 880(BX)
	MOVO X5, X2
	PSRLQ $8, X5
	PAND X0, X5
	MOVO X5, 896(BX)
	PSRLQ $47, X2
	MOVO 560(AX), X7
	MOVO X7, X6
	PSLLQ $17, X7
	PAND X0, X7
	POR X7, X2
	MOVO X2, 912(BX)
	MOVO X6, X1
	PSRLQ $22, X6
	PAND X0, X6
	MOVO X6, 928(BX)
	PSRLQ $61, X1
	MOVO 576(AX), X3
	MOVO X3, X10
	PSLLQ $3, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 944(BX)
	PSRLQ $36, X10
	MOVO 592(AX), X12
	MOVO X12, X13
	PSLLQ $28, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 960(BX)
	MOVO X13, X9
	PSRLQ $11, X13
	PAND X0, X13
	MOVO X13, 976(BX)
	PSRLQ $50, X9
	MOVO 608(AX), X15
	MOVO X15, X11
	PSLLQ $14, X15
	PAND X0, X15
	POR X15, X9
	MOVO X9, 992(BX)
	PSRLQ $25, X11
	MOVO X11, 1008(BX)
	RET

// func unpack64_40(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_40(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1099511627775, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $40, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $56, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $8, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	PSRLQ $32, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $32, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	MOVO X10, X11
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 80(BX)
	PSRLQ $48, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $16, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLQ $24, X13
	MOVO X13, 112(BX)
	MOVO 80(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLQ $40, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	MOVO X2, X4
	PSRLQ $16, X2
	PAND X0, X2
	MOVO X2, 160(BX)
	PSRLQ $56, X4
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 176(BX)
	PSRLQ $32, X5
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLQ $32, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 192(BX)
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 208(BX)
	PSRLQ $48, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 224(BX)
	PSRLQ $24, X10
	MOVO X10, 240(BX)
	MOVO 160(AX), X12
	MOVO X12, X11
	PAND X0, X12
	MOVO X12, 256(BX)
	PSRLQ $40, X11
	MOVO 176(AX), X13
	MOVO X13, X14
	PSLLQ $24, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 272(BX)
	MOVO X14, X1
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 288(BX)
	PSRLQ $56, X1
	MOVO 192(AX), X15
	MOVO X15, X2
	PSLLQ $8, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 304(BX)
	PSRLQ $32, X2
	MOVO 208(AX), X3
	MOVO X3, X4
	PSLLQ $32, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 320(BX)
	MOVO X4, X7
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 336(BX)
	PSRLQ $48, X7
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 352(BX)
	PSRLQ $24, X6
	MOVO X6, 368(BX)
	MOVO 240(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 384(BX)
	PSRLQ $40, X9
	MOVO 256(AX), X10
	MOVO X10, X12
	PSLLQ $24, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 400(BX)
	MOVO X12, X13
	PSRLQ $16, X12
	PAND X0, X12
	MOVO X12, 416(BX)
	PSRLQ $56, X13
	MOVO 272(AX), X11
	MOVO X11, X14
	PSLLQ $8, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 432(BX)
	PSRLQ $32, X14
	MOVO 288(AX), X15
	MOVO X15, X1
	PSLLQ $32, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 448(BX)
	MOVO X1, X3
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 464(BX)
	PSRLQ $48, X3
	MOVO 304(AX), X2
	MOVO X2, X4
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 480(BX)
	PSRLQ $24, X4
	MOVO X4, 496(BX)
	MOVO 320(AX), X5
	MOVO X5, X7
	PAND X0, X5
	MOVO X5, 512(BX)
	PSRLQ $40, X7
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 528(BX)
	MOVO X8, X10
	PSRLQ $16, X8
	PAND X0, X8
	MOVO X8, 544(BX)
	PSRLQ $56, X10
	MOVO 352(AX), X9
	MOVO X9, X12
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 560(BX)
	PSRLQ $32, X12
	MOVO 368(AX), X11
	MOVO X11, X13
	PSLLQ $32, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 576(BX)
	MOVO X13, X15
	PSRLQ $8, X13
	PAND X0, X13
	MOVO X13, 592(BX)
	PSRLQ $48, X15
	MOVO 384(AX), X14
	MOVO X14, X1
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 608(BX)
	PSRLQ $24, X1
	MOVO X1, 624(BX)
	MOVO 400(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 640(BX)
	PSRLQ $40, X3
	MOVO 416(AX), X4
	MOVO X4, X5
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 656(BX)
	MOVO X5, X6
	PSRLQ $16, X5
	PAND X0, X5
	MOVO X5, 672(BX)
	PSRLQ $56, X6
	MOVO 432(AX), X7
	MOVO X7, X8
	PSLLQ $8, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 688(BX)
	PSRLQ $32, X8
	MOVO 448(AX), X9
	MOVO X9, X10
	PSLLQ $32, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 704(BX)
	MOVO X10, X11
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 720(BX)
	PSRLQ $48, X11
	MOVO 464(AX), X12
	MOVO X12, X13
	PSLLQ $16, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 736(BX)
	PSRLQ $24, X13
	MOVO X13, 752(BX)
	MOVO 480(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 768(BX)
	PSRLQ $40, X15
	MOVO 496(AX), X1
	MOVO X1, X2
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 784(BX)
	MOVO X2, X4
	PSRLQ $16, X2
	PAND X0, X2
	MOVO X2, 800(BX)
	PSRLQ $56, X4
	MOVO 512(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 816(BX)
	PSRLQ $32, X5
	MOVO 528(AX), X7
	MOVO X7, X6
	PSLLQ $32, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 832(BX)
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 848(BX)
	PSRLQ $48, X9
	MOVO 544(AX), X8
	MOVO X8, X10
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 864(BX)
	PSRLQ $24, X10
	MOVO X10, 880(BX)
	MOVO 560(AX), X12
	MOVO X12, X11
	PAND X0, X12
	MOVO X12, 896(BX)
	PSRLQ $40, X11
	MOVO 576(AX), X13
	MOVO X13, X14
	PSLLQ $24, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 912(BX)
	MOVO X14, X1
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 928(BX)
	PSRLQ $56, X1
	MOVO 592(AX), X15
	MOVO X15, X2
	PSLLQ $8, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 944(BX)
	PSRLQ $32, X2
	MOVO 608(AX), X3
	MOVO X3, X4
	PSLLQ $32, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 960(BX)
	MOVO X4, X7
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 976(BX)
	PSRLQ $48, X7
	MOVO 624(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 992(BX)
	PSRLQ $24, X6
	MOVO X6, 1008(BX)
	RET

// func unpack64_41(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_41(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $2199023255551, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $41, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $23, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $18, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $59, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $5, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	PSRLQ $36, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $28, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	MOVO X10, X11
	PSRLQ $13, X10
	PAND X0, X10
	MOVO X10, 80(BX)
	PSRLQ $54, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $10, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLQ $31, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $33, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	MOVO X15, X1
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 128(BX)
	PSRLQ $49, X1
	MOVO 96(AX), X2
	MOVO X2, X4
	PSLLQ $15, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 144(BX)
	PSRLQ $26, X4
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $38, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 160(BX)
	MOVO X5, X7
	PSRLQ $3, X5
	PAND X0, X5
	MOVO X5, 176(BX)
	PSRLQ $44, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 192(BX)
	MOVO X9, X8
	PSRLQ $21, X9
	PAND X0, X9
	MOVO X9, 208(BX)
	PSRLQ $62, X8
	MOVO 144(AX), X10
	MOVO X10, X12
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	PSRLQ $39, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLQ $25, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 240(BX)
	MOVO X14, X13
	PSRLQ $16, X14
	PAND X0, X14
	MOVO X14, 256(BX)
	PSRLQ $57, X13
	MOVO 176(AX), X15
	MOVO X15, X2
	PSLLQ $7, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 272(BX)
	PSRLQ $34, X2
	MOVO 192(AX), X1
	MOVO X1, X3
	PSLLQ $30, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 288(BX)
	MOVO X3, X4
	PSRLQ $11, X3
	PAND X0, X3
	MOVO X3, 304(BX)
	PSRLQ $52, X4
	MOVO 208(AX), X5
	MOVO X5, X6
	PSLLQ $12, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 320(BX)
	PSRLQ $29, X6
	MOVO 224(AX), X7
	MOVO X7, X9
	PSLLQ $35, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 336(BX)
	MOVO X9, X10
	PSRLQ $6, X9
	PAND X0, X9
	MOVO X9, 352(BX)
	PSRLQ $47, X10
	MOVO 240(AX), X8
	MOVO X8, X11
	PSLLQ $17, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 368(BX)
	PSRLQ $24, X11
	MOVO 256(AX), X12
	MOVO X12, X14
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 384(BX)
	MOVO X14, X15
	PSRLQ $1, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	PSRLQ $42, X15
	MOVO 272(AX), X13
	MOVO X13, X1
	PSLLQ $22, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 416(BX)
	MOVO X1, X2
	PSRLQ $19, X1
	PAND X0, X1
	MOVO X1, 432(BX)
	PSRLQ $60, X2
	MOVO 288(AX), X3
	MOVO X3, X5
	PSLLQ $4, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 448(BX)
	PSRLQ $37, X5
	MOVO 304(AX), X4
	MOVO X4, X7
	PSLLQ $27, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 464(BX)
	MOVO X7, X6
	PSRLQ $14, X7
	PAND X0, X7
	MOVO X7, 480(BX)
	PSRLQ $55, X6
	MOVO 320(AX), X9
	MOVO X9, X8
	PSLLQ $9, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 496(BX)
	PSRLQ $32, X8
	MOVO 336(AX), X10
	MOVO X10, X12
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 512(BX)
	MOVO X12, X11
	PSRLQ $9, X12
	PAND X0, X12
	MOVO X12, 528(BX)
	PSRLQ $50, X11
	MOVO 352(AX), X14
	MOVO X14, X13
	PSLLQ $14, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 544(BX)
	PSRLQ $27, X13
	MOVO 368(AX), X15
	MOVO X15, X1
	PSLLQ $37, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 560(BX)
	MOVO X1, X3
	PSRLQ $4, X1
	PAND X0, X1
	MOVO X1, 576(BX)
	PSRLQ $45, X3
	MOVO 384(AX), X2
	MOVO X2, X4
	PSLLQ $19, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 592(BX)
	MOVO X4, X5
	PSRLQ $22, X4
	PAND X0, X4
	MOVO X4, 608(BX)
	PSRLQ $63, X5
	MOVO 400(AX), X7
	MOVO X7, X9
	PSLLQ $1, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 624(BX)
	PSRLQ $40, X9
	MOVO 416(AX), X6
	MOVO X6, X10
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 640(BX)
	MOVO X10, X8
	PSRLQ $17, X10
	PAND X0, X10
	MOVO X10, 656(BX)
	PSRLQ $58, X8
	MOVO 432(AX), X12
	MOVO X12, X14
	PSLLQ $6, X12
	PAND X0, X12
	POR X12, X8
	MOVO X8, 672(BX)
	PSRLQ $35, X14
	MOVO 448(AX), X11
	MOVO X11, X15
	PSLLQ $29, X11
	PAND X0, X11
	POR X11, X14
	MOVO X14, 688(BX)
	MOVO X15, X13
	PSRLQ $12, X15
	PAND X0, X15
	MOVO X15, 704(BX)
	PSRLQ $53, X13
	MOVO 464(AX), X1
	MOVO X1, X2
	PSLLQ $11, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 720(BX)
	PSRLQ $30, X2
	MOVO 480(AX), X3
	MOVO X3, X4
	PSLLQ $34, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 736(BX)
	MOVO X4, X7
	PSRLQ $7, X4
	PAND X0, X4
	MOVO X4, 752(BX)
	PSRLQ $48, X7
	MOVO 496(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 768(BX)
	PSRLQ $25, X6
	MOVO 512(AX), X9
	MOVO X9, X10
	PSLLQ $39, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 784(BX)
	MOVO X10, X12
	PSRLQ $2, X10
	PAND X0, X10
	MOVO X10, 800(BX)
	PSRLQ $43, X12
	MOVO 528(AX), X8
	MOVO X8, X11
	PSLLQ $21, X8
	PAND X0, X8
	POR X8, X12
	MOVO X12, 816(BX)
	MOVO X11, X14
	PSRLQ $20, X11
	PAND X0, X11
	MOVO X11, 832(BX)
	PSRLQ $61, X14
	MOVO 544(AX), X15
	MOVO X15, X1
	PSLLQ $3, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 848(BX)
	PSRLQ $38, X1
	MOVO 560(AX), X13
	MOVO X13, X3
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X1
	MOVO X1, 864(BX)
	MOVO X3, X2
	PSRLQ $15, X3
	PAND X0, X3
	MOVO X3, 880(BX)
	PSRLQ $56, X2
	MOVO 576(AX), X4
	MOVO X4, X5
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 896(BX)
	PSRLQ $33, X5
	MOVO 592(AX), X7
	MOVO X7, X9
	PSLLQ $31, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 912(BX)
	MOVO X9, X6
	PSRLQ $10, X9
	PAND X0, X9
	MOVO X9, 928(BX)
	PSRLQ $51, X6
	MOVO 608(AX), X10
	MOVO X10, X8
	PSLLQ $13, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 944(BX)
	PSRLQ $28, X8
	MOVO 624(AX), X12
	MOVO X12, X11
	PSLLQ $36, X12
	PAND X0, X12
	POR X12, X8
	MOVO X8, 960(BX)
	MOVO X11, X15
	PSRLQ $5, X11
	PAND X0, X11
	MOVO X11, 976(BX)
	PSRLQ $46, X15
	MOVO 640(AX), X14
	MOVO X14, X13
	PSLLQ $18, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 992(BX)
	PSRLQ $23, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_42(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_42(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $4398046511103, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $42, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $22, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	MOVO X5, X6
	PSRLQ $20, X5
	PAND X0, X5
	MOVO X5, 32(BX)
	PSRLQ $62, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 48(BX)
	PSRLQ $40, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $24, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	MOVO X10, X11
	PSRLQ $18, X10
	PAND X0, X10
	MOVO X10, 80(BX)
	PSRLQ $60, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $4, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLQ $38, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $26, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	MOVO X15, X1
	PSRLQ $16, X15
	PAND X0, X15
	MOVO X15, 128(BX)
	PSRLQ $58, X1
	MOVO 96(AX), X2
	MOVO X2, X4
	PSLLQ $6, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 144(BX)
	PSRLQ $36, X4
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $28, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 160(BX)
	MOVO X5, X7
	PSRLQ $14, X5
	PAND X0, X5
	MOVO X5, 176(BX)
	PSRLQ $56, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLQ $8, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 192(BX)
	PSRLQ $34, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $30, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 208(BX)
	MOVO X10, X12
	PSRLQ $12, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLQ $54, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLQ $10, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 240(BX)
	PSRLQ $32, X14
	MOVO 176(AX), X13
	MOVO X13, X15
	PSLLQ $32, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 256(BX)
	MOVO X15, X2
	PSRLQ $10, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLQ $52, X2
	MOVO 192(AX), X1
	MOVO X1, X3
	PSLLQ $12, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 288(BX)
	PSRLQ $30, X3
	MOVO 208(AX), X4
	MOVO X4, X5
	PSLLQ $34, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 304(BX)
	MOVO X5, X6
	PSRLQ $8, X5
	PAND X0, X5
	MOVO X5, 320(BX)
	PSRLQ $50, X6
	MOVO 224(AX), X7
	MOVO X7, X8
	PSLLQ $14, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 336(BX)
	PSRLQ $28, X8
	MOVO 240(AX), X9
	MOVO X9, X10
	PSLLQ $36, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 352(BX)
	MOVO X10, X11
	PSRLQ $6, X10
	PAND X0, X10
	MOVO X10, 368(BX)
	PSRLQ $48, X11
	MOVO 256(AX), X12
	MOVO X12, X13
	PSLLQ $16, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 384(BX)
	PSRLQ $26, X13
	MOVO 272(AX), X14
	MOVO X14, X15
	PSLLQ $38, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 400(BX)
	MOVO X15, X1
	PSRLQ $4, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLQ $46, X1
	MOVO 288(AX), X2
	MOVO X2, X4
	PSLLQ $18, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 432(BX)
	PSRLQ $24, X4
	MOVO 304(AX), X3
	MOVO X3, X5
	PSLLQ $40, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 448(BX)
	MOVO X5, X7
	PSRLQ $2, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLQ $44, X7
	MOVO 320(AX), X6
	MOVO X6, X9
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 480(BX)
	PSRLQ $22, X9
	MOVO X9, 496(BX)
	MOVO 336(AX), X8
	MOVO X8, X10
	PAND X0, X8
	MOVO X8, 512(BX)
	PSRLQ $42, X10
	MOVO 352(AX), X12
	MOVO X12, X11
	PSLLQ $22, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 528(BX)
	MOVO X11, X14
	PSRLQ $20, X11
	PAND X0, X11
	MOVO X11, 544(BX)
	PSRLQ $62, X14
	MOVO 368(AX), X13
	MOVO X13, X15
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 560(BX)
	PSRLQ $40, X15
	MOVO 384(AX), X2
	MOVO X2, X1
	PSLLQ $24, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 576(BX)
	MOVO X1, X3
	PSRLQ $18, X1
	PAND X0, X1
	MOVO X1, 592(BX)
	PSRLQ $60, X3
	MOVO 400(AX), X4
	MOVO X4, X5
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 608(BX)
	PSRLQ $38, X5
	MOVO 416(AX), X6
	MOVO X6, X7
	PSLLQ $26, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 624(BX)
	MOVO X7, X9
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 640(BX)
	PSRLQ $58, X9
	MOVO 432(AX), X8
	MOVO X8, X12
	PSLLQ $6, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 656(BX)
	PSRLQ $36, X12
	MOVO 448(AX), X10
	MOVO X10, X11
	PSLLQ $28, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 672(BX)
	MOVO X11, X13
	PSRLQ $14, X11
	PAND X0, X11
	MOVO X11, 688(BX)
	PSRLQ $56, X13
	MOVO 464(AX), X14
	MOVO X14, X2
	PSLLQ $8, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 704(BX)
	PSRLQ $34, X2
	MOVO 480(AX), X15
	MOVO X15, X1
	PSLLQ $30, X15
	PAND X0, X15
	POR X15, X2
	MOVO X2, 720(BX)
	MOVO X1, X4
	PSRLQ $12, X1
	PAND X0, X1
	MOVO X1, 736(BX)
	PSRLQ $54, X4
	MOVO 496(AX), X3
	MOVO X3, X6
	PSLLQ $10, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 752(BX)
	PSRLQ $32, X6
	MOVO 512(AX), X5
	MOVO X5, X7
	PSLLQ $32, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 768(BX)
	MOVO X7, X8
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 784(BX)
	PSRLQ $52, X8
	MOVO 528(AX), X9
	MOVO X9, X10
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 800(BX)
	PSRLQ $30, X10
	MOVO 544(AX), X12
	MOVO X12, X11
	PSLLQ $34, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 816(BX)
	MOVO X11, X14
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 832(BX)
	PSRLQ $50, X14
	MOVO 560(AX), X13
	MOVO X13, X15
	PSLLQ $14, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 848(BX)
	PSRLQ $28, X15
	MOVO 576(AX), X2
	MOVO X2, X1
	PSLLQ $36, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 864(BX)
	MOVO X1, X3
	PSRLQ $6, X1
	PAND X0, X1
	MOVO X1, 880(BX)
	PSRLQ $48, X3
	MOVO 592(AX), X4
	MOVO X4, X5
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 896(BX)
	PSRLQ $26, X5
	MOVO 608(AX), X6
	MOVO X6, X7
	PSLLQ $38, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 912(BX)
	MOVO X7, X9
	PSRLQ $4, X7
	PAND X0, X7
	MOVO X7, 928(BX)
	PSRLQ $46, X9
	MOVO 624(AX), X8
	MOVO X8, X12
	PSLLQ $18, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 944(BX)
	PSRLQ $24, X12
	MOVO 640(AX), X10
	MOVO X10, X11
	PSLLQ $40, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 960(BX)
	MOVO X11, X13
	PSRLQ $2, X11
	PAND X0, X11
	MOVO X11, 976(BX)
	PSRLQ $44, X13
	MOVO 656(AX), X14
	MOVO X14, X2
	PSLLQ $20, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 992(BX)
	PSRLQ $22, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_43(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_43(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $8796093022207, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $43, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $21, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $22, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $42, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLQ $1, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLQ $44, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $20, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLQ $23, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $41, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	MOVO X12, X13
	PSRLQ $2, X12
	PAND X0, X12
	MOVO X12, 96(BX)
	PSRLQ $45, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $19, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	PSRLQ $24, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLQ $40, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	MOVO X2, X4
	PSRLQ $3, X2
	PAND X0, X2
	MOVO X2, 144(BX)
	PSRLQ $46, X4
	MOVO 112(AX), X3
	MOVO X3, X6
	PSLLQ $18, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 160(BX)
	PSRLQ $25, X6
	MOVO 128(AX), X5
	MOVO X5, X7
	PSLLQ $39, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 176(BX)
	MOVO X7, X9
	PSRLQ $4, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLQ $47, X9
	MOVO 144(AX), X8
	MOVO X8, X11
	PSLLQ $17, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 208(BX)
	PSRLQ $26, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLQ $38, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 224(BX)
	MOVO X12, X14
	PSRLQ $5, X12
	PAND X0, X12
	MOVO X12, 240(BX)
	PSRLQ $48, X14
	MOVO 176(AX), X13
	MOVO X13, X1
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 256(BX)
	PSRLQ $27, X1
	MOVO 192(AX), X15
	MOVO X15, X2
	PSLLQ $37, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 272(BX)
	MOVO X2, X3
	PSRLQ $6, X2
	PAND X0, X2
	MOVO X2, 288(BX)
	PSRLQ $49, X3
	MOVO 208(AX), X4
	MOVO X4, X5
	PSLLQ $15, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 304(BX)
	PSRLQ $28, X5
	MOVO 224(AX), X6
	MOVO X6, X7
	PSLLQ $36, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 320(BX)
	MOVO X7, X8
	PSRLQ $7, X7
	PAND X0, X7
	MOVO X7, 336(BX)
	PSRLQ $50, X8
	MOVO 240(AX), X9
	MOVO X9, X10
	PSLLQ $14, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 352(BX)
	PSRLQ $29, X10
	MOVO 256(AX), X11
	MOVO X11, X12
	PSLLQ $35, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 368(BX)
	MOVO X12, X13
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 384(BX)
	PSRLQ $51, X13
	MOVO 272(AX), X14
	MOVO X14, X15
	PSLLQ $13, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 400(BX)
	PSRLQ $30, X15
	MOVO 288(AX), X1
	MOVO X1, X2
	PSLLQ $34, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 416(BX)
	MOVO X2, X4
	PSRLQ $9, X2
	PAND X0, X2
	MOVO X2, 432(BX)
	PSRLQ $52, X4
	MOVO 304(AX), X3
	MOVO X3, X6
	PSLLQ $12, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 448(BX)
	PSRLQ $31, X6
	MOVO 320(AX), X5
	MOVO X5, X7
	PSLLQ $33, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 464(BX)
	MOVO X7, X9
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 480(BX)
	PSRLQ $53, X9
	MOVO 336(AX), X8
	MOVO X8, X11
	PSLLQ $11, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 496(BX)
	PSRLQ $32, X11
	MOVO 352(AX), X10
	MOVO X10, X12
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 512(BX)
	MOVO X12, X14
	PSRLQ $11, X12
	PAND X0, X12
	MOVO X12, 528(BX)
	PSRLQ $54, X14
	MOVO 368(AX), X13
	MOVO X13, X1
	PSLLQ $10, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 544(BX)
	PSRLQ $33, X1
	MOVO 384(AX), X15
	MOVO X15, X2
	PSLLQ $31, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 560(BX)
	MOVO X2, X3
	PSRLQ $12, X2
	PAND X0, X2
	MOVO X2, 576(BX)
	PSRLQ $55, X3
	MOVO 400(AX), X4
	MOVO X4, X5
	PSLLQ $9, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 592(BX)
	PSRLQ $34, X5
	MOVO 416(AX), X6
	MOVO X6, X7
	PSLLQ $30, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 608(BX)
	MOVO X7, X8
	PSRLQ $13, X7
	PAND X0, X7
	MOVO X7, 624(BX)
	PSRLQ $56, X8
	MOVO 432(AX), X9
	MOVO X9, X10
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 640(BX)
	PSRLQ $35, X10
	MOVO 448(AX), X11
	MOVO X11, X12
	PSLLQ $29, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 656(BX)
	MOVO X12, X13
	PSRLQ $14, X12
	PAND X0, X12
	MOVO X12, 672(BX)
	PSRLQ $57, X13
	MOVO 464(AX), X14
	MOVO X14, X15
	PSLLQ $7, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 688(BX)
	PSRLQ $36, X15
	MOVO 480(AX), X1
	MOVO X1, X2
	PSLLQ $28, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 704(BX)
	MOVO X2, X4
	PSRLQ $15, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $58, X4
	MOVO 496(AX), X3
	MOVO X3, X6
	PSLLQ $6, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 736(BX)
	PSRLQ $37, X6
	MOVO 512(AX), X5
	MOVO X5, X7
	PSLLQ $27, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 752(BX)
	MOVO X7, X9
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $59, X9
	MOVO 528(AX), X8
	MOVO X8, X11
	PSLLQ $5, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 784(BX)
	PSRLQ $38, X11
	MOVO 544(AX), X10
	MOVO X10, X12
	PSLLQ $26, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 800(BX)
	MOVO X12, X14
	PSRLQ $17, X12
	PAND X0, X12
	MOVO X12, 816(BX)
	PSRLQ $60, X14
	MOVO 560(AX), X13
	MOVO X13, X1
	PSLLQ $4, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 832(BX)
	PSRLQ $39, X1
	MOVO 576(AX), X15
	MOVO X15, X2
	PSLLQ $25, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 848(BX)
	MOVO X2, X3
	PSRLQ $18, X2
	PAND X0, X2
	MOVO X2, 864(BX)
	PSRLQ $61, X3
	MOVO 592(AX), X4
	MOVO X4, X5
	PSLLQ $3, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 880(BX)
	PSRLQ $40, X5
	MOVO 608(AX), X6
	MOVO X6, X7
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 896(BX)
	MOVO X7, X8
	PSRLQ $19, X7
	PAND X0, X7
	MOVO X7, 912(BX)
	PSRLQ $62, X8
	MOVO 624(AX), X9
	MOVO X9, X10
	PSLLQ $2, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 928(BX)
	PSRLQ $41, X10
	MOVO 640(AX), X11
	MOVO X11, X12
	PSLLQ $23, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 944(BX)
	MOVO X12, X13
	PSRLQ $20, X12
	PAND X0, X12
	MOVO X12, 960(BX)
	PSRLQ $63, X13
	MOVO 656(AX), X14
	MOVO X14, X15
	PSLLQ $1, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 976(BX)
	PSRLQ $42, X15
	MOVO 672(AX), X1
	MOVO X1, X2
	PSLLQ $22, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 992(BX)
	PSRLQ $21, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_44(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_44(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $17592186044415, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $44, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $20, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $24, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $40, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLQ $4, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLQ $48, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $16, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLQ $28, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $36, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	MOVO X12, X13
	PSRLQ $8, X12
	PAND X0, X12
	MOVO X12, 96(BX)
	PSRLQ $52, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	PSRLQ $32, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	MOVO X2, X4
	PSRLQ $12, X2
	PAND X0, X2
	MOVO X2, 144(BX)
	PSRLQ $56, X4
	MOVO 112(AX), X3
	MOVO X3, X6
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 160(BX)
	PSRLQ $36, X6
	MOVO 128(AX), X5
	MOVO X5, X7
	PSLLQ $28, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 176(BX)
	MOVO X7, X9
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLQ $60, X9
	MOVO 144(AX), X8
	MOVO X8, X11
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 208(BX)
	PSRLQ $40, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLQ $24, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 224(BX)
	PSRLQ $20, X12
	MOVO X12, 240(BX)
	MOVO 176(AX), X14
	MOVO X14, X13
	PAND X0, X14
	MOVO X14, 256(BX)
	PSRLQ $44, X13
	MOVO 192(AX), X1
	MOVO X1, X15
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 272(BX)
	PSRLQ $24, X15
	MOVO 208(AX), X2
	MOVO X2, X3
	PSLLQ $40, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 288(BX)
	MOVO X3, X4
	PSRLQ $4, X3
	PAND X0, X3
	MOVO X3, 304(BX)
	PSRLQ $48, X4
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 320(BX)
	PSRLQ $28, X6
	MOVO 240(AX), X7
	MOVO X7, X8
	PSLLQ $36, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 336(BX)
	MOVO X8, X9
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 352(BX)
	PSRLQ $52, X9
	MOVO 256(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 368(BX)
	PSRLQ $32, X11
	MOVO 272(AX), X12
	MOVO X12, X14
	PSLLQ $32, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 384(BX)
	MOVO X14, X1
	PSRLQ $12, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	PSRLQ $56, X1
	MOVO 288(AX), X13
	MOVO X13, X2
	PSLLQ $8, X13
	PAND X0, X13
	POR X13, X1
	MOVO X1, 416(BX)
	PSRLQ $36, X2
	MOVO 304(AX), X15
	MOVO X15, X3
	PSLLQ $28, X15
	PAND X0, X15
	POR X15, X2
	MOVO X2, 432(BX)
	MOVO X3, X5
	PSRLQ $16, X3
	PAND X0, X3
	MOVO X3, 448(BX)
	PSRLQ $60, X5
	MOVO 320(AX), X4
	MOVO X4, X7
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 464(BX)
	PSRLQ $40, X7
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 480(BX)
	PSRLQ $20, X8
	MOVO X8, 496(BX)
	MOVO 352(AX), X10
	MOVO X10, X9
	PAND X0, X10
	MOVO X10, 512(BX)
	PSRLQ $44, X9
	MOVO 368(AX), X12
	MOVO X12, X11
	PSLLQ $20, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 528(BX)
	PSRLQ $24, X11
	MOVO 384(AX), X14
	MOVO X14, X13
	PSLLQ $40, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 544(BX)
	MOVO X13, X1
	PSRLQ $4, X13
	PAND X0, X13
	MOVO X13, 560(BX)
	PSRLQ $48, X1
	MOVO 400(AX), X15
	MOVO X15, X2
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 576(BX)
	PSRLQ $28, X2
	MOVO 416(AX), X3
	MOVO X3, X4
	PSLLQ $36, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 592(BX)
	MOVO X4, X5
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 608(BX)
	PSRLQ $52, X5
	MOVO 432(AX), X6
	MOVO X6, X7
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 624(BX)
	PSRLQ $32, X7
	MOVO 448(AX), X8
	MOVO X8, X10
	PSLLQ $32, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 640(BX)
	MOVO X10, X12
	PSRLQ $12, X10
	PAND X0, X10
	MOVO X10, 656(BX)
	PSRLQ $56, X12
	MOVO 464(AX), X9
	MOVO X9, X14
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X12
	MOVO X12, 672(BX)
	PSRLQ $36, X14
	MOVO 480(AX), X11
	MOVO X11, X13
	PSLLQ $28, X11
	PAND X0, X11
	POR X11, X14
	MOVO X14, 688(BX)
	MOVO X13, X15
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 704(BX)
	PSRLQ $60, X15
	MOVO 496(AX), X1
	MOVO X1, X3
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 720(BX)
	PSRLQ $40, X3
	MOVO 512(AX), X2
	MOVO X2, X4
	PSLLQ $24, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 736(BX)
	PSRLQ $20, X4
	MOVO X4, 752(BX)
	MOVO 528(AX), X6
	MOVO X6, X5
	PAND X0, X6
	MOVO X6, 768(BX)
	PSRLQ $44, X5
	MOVO 544(AX), X8
	MOVO X8, X7
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 784(BX)
	PSRLQ $24, X7
	MOVO 560(AX), X10
	MOVO X10, X9
	PSLLQ $40, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 800(BX)
	MOVO X9, X12
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 816(BX)
	PSRLQ $48, X12
	MOVO 576(AX), X11
	MOVO X11, X14
	PSLLQ $16, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 832(BX)
	PSRLQ $28, X14
	MOVO 592(AX), X13
	MOVO X13, X1
	PSLLQ $36, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 848(BX)
	MOVO X1, X15
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 864(BX)
	PSRLQ $52, X15
	MOVO 608(AX), X2
	MOVO X2, X3
	PSLLQ $12, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 880(BX)
	PSRLQ $32, X3
	MOVO 624(AX), X4
	MOVO X4, X6
	PSLLQ $32, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 896(BX)
	MOVO X6, X8
	PSRLQ $12, X6
	PAND X0, X6
	MOVO X6, 912(BX)
	PSRLQ $56, X8
	MOVO 640(AX), X5
	MOVO X5, X10
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X8
	MOVO X8, 928(BX)
	PSRLQ $36, X10
	MOVO 656(AX), X7
	MOVO X7, X9
	PSLLQ $28, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 944(BX)
	MOVO X9, X11
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 960(BX)
	PSRLQ $60, X11
	MOVO 672(AX), X12
	MOVO X12, X13
	PSLLQ $4, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 976(BX)
	PSRLQ $40, X13
	MOVO 688(AX), X14
	MOVO X14, X1
	PSLLQ $24, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 992(BX)
	PSRLQ $20, X1
	MOVO X1, 1008(BX)
	RET

// func unpack64_45(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_45(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $35184372088831, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $45, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $19, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $26, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $38, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLQ $7, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLQ $52, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLQ $33, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $31, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	MOVO X12, X13
	PSRLQ $14, X12
	PAND X0, X12
	MOVO X12, 96(BX)
	PSRLQ $59, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $5, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 112(BX)
	PSRLQ $40, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	PSRLQ $21, X2
	MOVO 112(AX), X4
	MOVO X4, X3
	PSLLQ $43, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	MOVO X3, X6
	PSRLQ $2, X3
	PAND X0, X3
	MOVO X3, 160(BX)
	PSRLQ $47, X6
	MOVO 128(AX), X5
	MOVO X5, X7
	PSLLQ $17, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 176(BX)
	PSRLQ $28, X7
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $36, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	MOVO X8, X11
	PSRLQ $9, X8
	PAND X0, X8
	MOVO X8, 208(BX)
	PSRLQ $54, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLQ $10, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 224(BX)
	PSRLQ $35, X12
	MOVO 176(AX), X14
	MOVO X14, X13
	PSLLQ $29, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 240(BX)
	MOVO X13, X1
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 256(BX)
	PSRLQ $61, X1
	MOVO 192(AX), X15
	MOVO X15, X4
	PSLLQ $3, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 272(BX)
	PSRLQ $42, X4
	MOVO 208(AX), X2
	MOVO X2, X3
	PSLLQ $22, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 288(BX)
	PSRLQ $23, X3
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLQ $41, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 304(BX)
	MOVO X6, X9
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 320(BX)
	PSRLQ $49, X9
	MOVO 240(AX), X7
	MOVO X7, X8
	PSLLQ $15, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 336(BX)
	PSRLQ $30, X8
	MOVO 256(AX), X10
	MOVO X10, X11
	PSLLQ $34, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 352(BX)
	MOVO X11, X14
	PSRLQ $11, X11
	PAND X0, X11
	MOVO X11, 368(BX)
	PSRLQ $56, X14
	MOVO 272(AX), X12
	MOVO X12, X13
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X14
	MOVO X14, 384(BX)
	PSRLQ $37, X13
	MOVO 288(AX), X15
	MOVO X15, X1
	PSLLQ $27, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 400(BX)
	MOVO X1, X2
	PSRLQ $18, X1
	PAND X0, X1
	MOVO X1, 416(BX)
	PSRLQ $63, X2
	MOVO 304(AX), X4
	MOVO X4, X5
	PSLLQ $1, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 432(BX)
	PSRLQ $44, X5
	MOVO 320(AX), X3
	MOVO X3, X6
	PSLLQ $20, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 448(BX)
	PSRLQ $25, X6
	MOVO 336(AX), X7
	MOVO X7, X9
	PSLLQ $39, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 464(BX)
	MOVO X9, X10
	PSRLQ $6, X9
	PAND X0, X9
	MOVO X9, 480(BX)
	PSRLQ $51, X10
	MOVO 352(AX), X8
	MOVO X8, X11
	PSLLQ $13, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 496(BX)
	PSRLQ $32, X11
	MOVO 368(AX), X12
	MOVO X12, X14
	PSLLQ $32, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 512(BX)
	MOVO X14, X15
	PSRLQ $13, X14
	PAND X0, X14
	MOVO X14, 528(BX)
	PSRLQ $58, X15
	MOVO 384(AX), X13
	MOVO X13, X1
	PSLLQ $6, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 544(BX)
	PSRLQ $39, X1
	MOVO 400(AX), X4
	MOVO X4, X2
	PSLLQ $25, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 560(BX)
	PSRLQ $20, X2
	MOVO 416(AX), X3
	MOVO X3, X5
	PSLLQ $44, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 576(BX)
	MOVO X5, X7
	PSRLQ $1, X5
	PAND X0, X5
	MOVO X5, 592(BX)
	PSRLQ $46, X7
	MOVO 432(AX), X6
	MOVO X6, X9
	PSLLQ $18, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 608(BX)
	PSRLQ $27, X9
	MOVO 448(AX), X8
	MOVO X8, X10
	PSLLQ $37, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 624(BX)
	MOVO X10, X12
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 640(BX)
	PSRLQ $53, X12
	MOVO 464(AX), X11
	MOVO X11, X14
	PSLLQ $11, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 656(BX)
	PSRLQ $34, X14
	MOVO 480(AX), X13
	MOVO X13, X15
	PSLLQ $30, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 672(BX)
	MOVO X15, X4
	PSRLQ $15, X15
	PAND X0, X15
	MOVO X15, 688(BX)
	PSRLQ $60, X4
	MOVO 496(AX), X1
	MOVO X1, X3
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X4
	MOVO X4, 704(BX)
	PSRLQ $41, X3
	MOVO 512(AX), X2
	MOVO X2, X5
	PSLLQ $23, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 720(BX)
	PSRLQ $22, X5
	MOVO 528(AX), X6
	MOVO X6, X7
	PSLLQ $42, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 736(BX)
	MOVO X7, X8
	PSRLQ $3, X7
	PAND X0, X7
	MOVO X7, 752(BX)
	PSRLQ $48, X8
	MOVO 544(AX), X9
	MOVO X9, X10
	PSLLQ $16, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 768(BX)
	PSRLQ $29, X10
	MOVO 560(AX), X11
	MOVO X11, X12
	PSLLQ $35, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 784(BX)
	MOVO X12, X13
	PSRLQ $10, X12
	PAND X0, X12
	MOVO X12, 800(BX)
	PSRLQ $55, X13
	MOVO 576(AX), X14
	MOVO X14, X15
	PSLLQ $9, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 816(BX)
	PSRLQ $36, X15
	MOVO 592(AX), X1
	MOVO X1, X4
	PSLLQ $28, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 832(BX)
	MOVO X4, X2
	PSRLQ $17, X4
	PAND X0, X4
	MOVO X4, 848(BX)
	PSRLQ $62, X2
	MOVO 608(AX), X3
	MOVO X3, X6
	PSLLQ $2, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 864(BX)
	PSRLQ $43, X6
	MOVO 624(AX), X5
	MOVO X5, X7
	PSLLQ $21, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 880(BX)
	PSRLQ $24, X7
	MOVO 640(AX), X9
	MOVO X9, X8
	PSLLQ $40, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 896(BX)
	MOVO X8, X11
	PSRLQ $5, X8
	PAND X0, X8
	MOVO X8, 912(BX)
	PSRLQ $50, X11
	MOVO 656(AX), X10
	MOVO X10, X12
	PSLLQ $14, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 928(BX)
	PSRLQ $31, X12
	MOVO 672(AX), X14
	MOVO X14, X13
	PSLLQ $33, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 944(BX)
	MOVO X13, X1
	PSRLQ $12, X13
	PAND X0, X13
	MOVO X13, 960(BX)
	PSRLQ $57, X1
	MOVO 688(AX), X15
	MOVO X15, X4
	PSLLQ $7, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 976(BX)
	PSRLQ $38, X4
	MOVO 704(AX), X3
	MOVO X3, X2
	PSLLQ $26, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 992(BX)
	PSRLQ $19, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_46(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_46(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $70368744177663, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $46, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $18, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $28, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $36, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLQ $10, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLQ $56, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLQ $38, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $26, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLQ $20, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $44, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	MOVO X14, X15
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 112(BX)
	PSRLQ $48, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	PSRLQ $30, X2
	MOVO 112(AX), X4
	MOVO X4, X3
	PSLLQ $34, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	MOVO X3, X6
	PSRLQ $12, X3
	PAND X0, X3
	MOVO X3, 160(BX)
	PSRLQ $58, X6
	MOVO 128(AX), X5
	MOVO X5, X7
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 176(BX)
	PSRLQ $40, X7
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $24, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	PSRLQ $22, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $42, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 208(BX)
	MOVO X10, X13
	PSRLQ $4, X10
	PAND X0, X10
	MOVO X10, 224(BX)
	PSRLQ $50, X13
	MOVO 176(AX), X12
	MOVO X12, X14
	PSLLQ $14, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 240(BX)
	PSRLQ $32, X14
	MOVO 192(AX), X1
	MOVO X1, X15
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 256(BX)
	MOVO X15, X4
	PSRLQ $14, X15
	PAND X0, X15
	MOVO X15, 272(BX)
	PSRLQ $60, X4
	MOVO 208(AX), X2
	MOVO X2, X3
	PSLLQ $4, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 288(BX)
	PSRLQ $42, X3
	MOVO 224(AX), X5
	MOVO X5, X6
	PSLLQ $22, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 304(BX)
	PSRLQ $24, X6
	MOVO 240(AX), X9
	MOVO X9, X7
	PSLLQ $40, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 320(BX)
	MOVO X7, X11
	PSRLQ $6, X7
	PAND X0, X7
	MOVO X7, 336(BX)
	PSRLQ $52, X11
	MOVO 256(AX), X8
	MOVO X8, X10
	PSLLQ $12, X8
	PAND X0, X8
	POR X8, X11
	MOVO X11, 352(BX)
	PSRLQ $34, X10
	MOVO 272(AX), X12
	MOVO X12, X13
	PSLLQ $30, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 368(BX)
	MOVO X13, X1
	PSRLQ $16, X13
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLQ $62, X1
	MOVO 288(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 400(BX)
	PSRLQ $44, X15
	MOVO 304(AX), X2
	MOVO X2, X4
	PSLLQ $20, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 416(BX)
	PSRLQ $26, X4
	MOVO 320(AX), X5
	MOVO X5, X3
	PSLLQ $38, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 432(BX)
	MOVO X3, X9
	PSRLQ $8, X3
	PAND X0, X3
	MOVO X3, 448(BX)
	PSRLQ $54, X9
	MOVO 336(AX), X6
	MOVO X6, X7
	PSLLQ $10, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 464(BX)
	PSRLQ $36, X7
	MOVO 352(AX), X8
	MOVO X8, X11
	PSLLQ $28, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 480(BX)
	PSRLQ $18, X11
	MOVO X11, 496(BX)
	MOVO 368(AX), X12
	MOVO X12, X10
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $46, X10
	MOVO 384(AX), X13
	MOVO X13, X14
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 528(BX)
	PSRLQ $28, X14
	MOVO 400(AX), X1
	MOVO X1, X2
	PSLLQ $36, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 544(BX)
	MOVO X2, X15
	PSRLQ $10, X2
	PAND X0, X2
	MOVO X2, 560(BX)
	PSRLQ $56, X15
	MOVO 416(AX), X5
	MOVO X5, X4
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X15
	MOVO X15, 576(BX)
	PSRLQ $38, X4
	MOVO 432(AX), X3
	MOVO X3, X6
	PSLLQ $26, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 592(BX)
	PSRLQ $20, X6
	MOVO 448(AX), X9
	MOVO X9, X8
	PSLLQ $44, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 608(BX)
	MOVO X8, X7
	PSRLQ $2, X8
	PAND X0, X8
	MOVO X8, 624(BX)
	PSRLQ $48, X7
	MOVO 464(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 640(BX)
	PSRLQ $30, X12
	MOVO 480(AX), X13
	MOVO X13, X10
	PSLLQ $34, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 656(BX)
	MOVO X10, X1
	PSRLQ $12, X10
	PAND X0, X10
	MOVO X10, 672(BX)
	PSRLQ $58, X1
	MOVO 496(AX), X14
	MOVO X14, X2
	PSLLQ $6, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 688(BX)
	PSRLQ $40, X2
	MOVO 512(AX), X5
	MOVO X5, X15
	PSLLQ $24, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 704(BX)
	PSRLQ $22, X15
	MOVO 528(AX), X3
	MOVO X3, X4
	PSLLQ $42, X3
	PAND X0, X3
	POR X3, X15
	MOVO X15, 720(BX)
	MOVO X4, X9
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 736(BX)
	PSRLQ $50, X9
	MOVO 544(AX), X6
	MOVO X6, X8
	PSLLQ $14, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 752(BX)
	PSRLQ $32, X8
	MOVO 560(AX), X11
	MOVO X11, X7
	PSLLQ $32, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 768(BX)
	MOVO X7, X13
	PSRLQ $14, X7
	PAND X0, X7
	MOVO X7, 784(BX)
	PSRLQ $60, X13
	MOVO 576(AX), X12
	MOVO X12, X10
	PSLLQ $4, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 800(BX)
	PSRLQ $42, X10
	MOVO 592(AX), X14
	MOVO X14, X1
	PSLLQ $22, X14
	PAND X0, X14
	POR X14, X10
	MOVO X10, 816(BX)
	PSRLQ $24, X1
	MOVO 608(AX), X5
	MOVO X5, X2
	PSLLQ $40, X5
	PAND X0, X5
	POR X5, X1
	MOVO X1, 832(BX)
	MOVO X2, X3
	PSRLQ $6, X2
	PAND X0, X2
	MOVO X2, 848(BX)
	PSRLQ $52, X3
	MOVO 624(AX), X15
	MOVO X15, X4
	PSLLQ $12, X15
	PAND X0, X15
	POR X15, X3
	MOVO X3, 864(BX)
	PSRLQ $34, X4
	MOVO 640(AX), X6
	MOVO X6, X9
	PSLLQ $30, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 880(BX)
	MOVO X9, X11
	PSRLQ $16, X9
	PAND X0, X9
	MOVO X9, 896(BX)
	PSRLQ $62, X11
	MOVO 656(AX), X8
	MOVO X8, X7
	PSLLQ $2, X8
	PAND X0, X8
	POR X8, X11
	MOVO X11, 912(BX)
	PSRLQ $44, X7
	MOVO 672(AX), X12
	MOVO X12, X13
	PSLLQ $20, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 928(BX)
	PSRLQ $26, X13
	MOVO 688(AX), X14
	MOVO X14, X10
	PSLLQ $38, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 944(BX)
	MOVO X10, X5
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 960(BX)
	PSRLQ $54, X5
	MOVO 704(AX), X1
	MOVO X1, X2
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X5
	MOVO X5, 976(BX)
	PSRLQ $36, X2
	MOVO 720(AX), X15
	MOVO X15, X3
	PSLLQ $28, X15
	PAND X0, X15
	POR X15, X2
	MOVO X2, 992(BX)
	PSRLQ $18, X3
	MOVO X3, 1008(BX)
	RET

// func unpack64_47(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_47(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $140737488355327, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $47, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $17, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $30, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $34, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	MOVO X7, X8
	PSRLQ $13, X7
	PAND X0, X7
	MOVO X7, 48(BX)
	PSRLQ $60, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 64(BX)
	PSRLQ $43, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $21, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLQ $26, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $38, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	MOVO X14, X15
	PSRLQ $9, X14
	PAND X0, X14
	MOVO X14, 112(BX)
	PSRLQ $56, X15
	MOVO 96(AX), X1
	MOVO X1, X2
	PSLLQ $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 128(BX)
	PSRLQ $39, X2
	MOVO 112(AX), X4
	MOVO X4, X3
	PSLLQ $25, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	PSRLQ $22, X3
	MOVO 128(AX), X6
	MOVO X6, X5
	PSLLQ $42, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	MOVO X5, X7
	PSRLQ $5, X5
	PAND X0, X5
	MOVO X5, 176(BX)
	PSRLQ $52, X7
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	PSRLQ $35, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $29, X11
	PAND X0, X11
	POR X11, X8
	MOVO X8, 208(BX)
	PSRLQ $18, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLQ $46, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 224(BX)
	MOVO X12, X14
	PSRLQ $1, X12
	PAND X0, X12
	MOVO X12, 240(BX)
	PSRLQ $48, X14
	MOVO 192(AX), X1
	MOVO X1, X15
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 256(BX)
	PSRLQ $31, X15
	MOVO 208(AX), X4
	MOVO X4, X2
	PSLLQ $33, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 272(BX)
	MOVO X2, X6
	PSRLQ $14, X2
	PAND X0, X2
	MOVO X2, 288(BX)
	PSRLQ $61, X6
	MOVO 224(AX), X3
	MOVO X3, X5
	PSLLQ $3, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 304(BX)
	PSRLQ $44, X5
	MOVO 240(AX), X9
	MOVO X9, X7
	PSLLQ $20, X9
	PAND X0, X9
	POR X9, X5
	MOVO X5, 320(BX)
	PSRLQ $27, X7
	MOVO 256(AX), X11
	MOVO X11, X8
	PSLLQ $37, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 336(BX)
	MOVO X8, X13
	PSRLQ $10, X8
	PAND X0, X8
	MOVO X8, 352(BX)
	PSRLQ $57, X13
	MOVO 272(AX), X10
	MOVO X10, X12
	PSLLQ $7, X10
	PAND X0, X10
	POR X10, X13
	MOVO X13, 368(BX)
	PSRLQ $40, X12
	MOVO 288(AX), X1
	MOVO X1, X14
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X12
	MOVO X12, 384(BX)
	PSRLQ $23, X14
	MOVO 304(AX), X4
	MOVO X4, X15
	PSLLQ $41, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 400(BX)
	MOVO X15, X2
	PSRLQ $6, X15
	PAND X0, X15
	MOVO X15, 416(BX)
	PSRLQ $53, X2
	MOVO 320(AX), X3
	MOVO X3, X6
	PSLLQ $11, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 432(BX)
	PSRLQ $36, X6
	MOVO 336(AX), X9
	MOVO X9, X5
	PSLLQ $28, X9
	PAND X0, X9
	POR X9, X6
	MOVO X6, 448(BX)
	PSRLQ $19, X5
	MOVO 352(AX), X11
	MOVO X11, X7
	PSLLQ $45, X11
	PAND X0, X11
	POR X11, X5
	MOVO X5, 464(BX)
	MOVO X7, X8
	PSRLQ $2, X7
	PAND X0, X7
	MOVO X7, 480(BX)
	PSRLQ $49, X8
	MOVO 368(AX), X10
	MOVO X10, X13
	PSLLQ $15, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 496(BX)
	PSRLQ $32, X13
	MOVO 384(AX), X1
	MOVO X1, X12
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 512(BX)
	MOVO X12, X4
	PSRLQ $15, X12
	PAND X0, X12
	MOVO X12, 528(BX)
	PSRLQ $62, X4
	MOVO 400(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X0, X14
	POR X14, X4
	MOVO X4, 544(BX)
	PSRLQ $45, X15
	MOVO 416(AX), X3
	MOVO X3, X2
	PSLLQ $19, X3
	PAND X0, X3
	POR X3, X15
	MOVO X15, 560(BX)
	PSRLQ $28, X2
	MOVO 432(AX), X9
	MOVO X9, X6
	PSLLQ $36, X9
	PAND X0, X9
	POR X9, X2
	MOVO X2, 576(BX)
	MOVO X6, X11
	PSRLQ $11, X6
	PAND X0, X6
	MOVO X6, 592(BX)
	PSRLQ $58, X11
	MOVO 448(AX), X5
	MOVO X5, X7
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X11
	MOVO X11, 608(BX)
	PSRLQ $41, X7
	MOVO 464(AX), X10
	MOVO X10, X8
	PSLLQ $23, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 624(BX)
	PSRLQ $24, X8
	MOVO 480(AX), X1
	MOVO X1, X13
	PSLLQ $40, X1
	PAND X0, X1
	POR X1, X8
	MOVO X8, 640(BX)
	MOVO X13, X12
	PSRLQ $7, X13
	PAND X0, X13
	MOVO X13, 656(BX)
	PSRLQ $54, X12
	MOVO 496(AX), X14
	MOVO X14, X4
	PSLLQ $10, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 672(BX)
	PSRLQ $37, X4
	MOVO 512(AX), X3
	MOVO X3, X15
	PSLLQ $27, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 688(BX)
	PSRLQ $20, X15
	MOVO 528(AX), X9
	MOVO X9, X2
	PSLLQ $44, X9
	PAND X0, X9
	POR X9, X15
	MOVO X15, 704(BX)
	MOVO X2, X6
	PSRLQ $3, X2
	PAND X0, X2
	MOVO X2, 720(BX)
	PSRLQ $50, X6
	MOVO 544(AX), X5
	MOVO X5, X11
	PSLLQ $14, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 736(BX)
	PSRLQ $33, X11
	MOVO 560(AX), X10
	MOVO X10, X7
	PSLLQ $31, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 752(BX)
	MOVO X7, X1
	PSRLQ $16, X7
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $63, X1
	MOVO 576(AX), X8
	MOVO X8, X13
	PSLLQ $1, X8
	PAND X0, X8
	POR X8, X1
	MOVO X1, 784(BX)
	PSRLQ $46, X13
	MOVO 592(AX), X14
	MOVO X14, X12
	PSLLQ $18, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 800(BX)
	PSRLQ $29, X12
	MOVO 608(AX), X3
	MOVO X3, X4
	PSLLQ $35, X3
	PAND X0, X3
	POR X3, X12
	MOVO X12, 816(BX)
	MOVO X4, X9
	PSRLQ $12, X4
	PAND X0, X4
	MOVO X4, 832(BX)
	PSRLQ $59, X9
	MOVO 624(AX), X15
	MOVO X15, X2
	PSLLQ $5, X15
	PAND X0, X15
	POR X15, X9
	MOVO X9, 848(BX)
	PSRLQ $42, X2
	MOVO 640(AX), X5
	MOVO X5, X6
	PSLLQ $22, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 864(BX)
	PSRLQ $25, X6
	MOVO 656(AX), X10
	MOVO X10, X11
	PSLLQ $39, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 880(BX)
	MOVO X11, X7
	PSRLQ $8, X11
	PAND X0, X11
	MOVO X11, 896(BX)
	PSRLQ $55, X7
	MOVO 672(AX), X8
	MOVO X8, X1
	PSLLQ $9, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 912(BX)
	PSRLQ $38, X1
	MOVO 688(AX), X14
	MOVO X14, X13
	PSLLQ $26, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 928(BX)
	PSRLQ $21, X13
	MOVO 704(AX), X3
	MOVO X3, X12
	PSLLQ $43, X3
	PAND X0, X3
	POR X3, X13
	MOVO X13, 944(BX)
	MOVO X12, X4
	PSRLQ $4, X12
	PAND X0, X12
	MOVO X12, 960(BX)
	PSRLQ $51, X4
	MOVO 720(AX), X15
	MOVO X15, X9
	PSLLQ $13, X15
	PAND X0, X15
	POR X15, X4
	MOVO X4, 976(BX)
	PSRLQ $34, X9
	MOVO 736(AX), X5
	MOVO X5, X2
	PSLLQ $30, X5
	PAND X0, X5
	POR X5, X9
	MOVO X9, 992(BX)
	PSRLQ $17, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_48(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_48(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $281474976710655, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $48, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $32, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $32, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $16, X7
	MOVO X7, 48(BX)
	MOVO 48(AX), X8
	MOVO X8, X9
	PAND X0, X8
	MOVO X8, 64(BX)
	PSRLQ $48, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 80(BX)
	PSRLQ $32, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $32, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 96(BX)
	PSRLQ $16, X13
	MOVO X13, 112(BX)
	MOVO 96(AX), X14
	MOVO X14, X15
	PAND X0, X14
	MOVO X14, 128(BX)
	PSRLQ $48, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 144(BX)
	PSRLQ $32, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $32, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 160(BX)
	PSRLQ $16, X3
	MOVO X3, 176(BX)
	MOVO 144(AX), X6
	MOVO X6, X5
	PAND X0, X6
	MOVO X6, 192(BX)
	PSRLQ $48, X5
	MOVO 160(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 208(BX)
	PSRLQ $32, X8
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 224(BX)
	PSRLQ $16, X9
	MOVO X9, 240(BX)
	MOVO 192(AX), X12
	MOVO X12, X11
	PAND X0, X12
	MOVO X12, 256(BX)
	PSRLQ $48, X11
	MOVO 208(AX), X13
	MOVO X13, X14
	PSLLQ $16, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 272(BX)
	PSRLQ $32, X14
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 288(BX)
	PSRLQ $16, X15
	MOVO X15, 304(BX)
	MOVO 240(AX), X4
	MOVO X4, X2
	PAND X0, X4
	MOVO X4, 320(BX)
	PSRLQ $48, X2
	MOVO 256(AX), X3
	MOVO X3, X6
	PSLLQ $16, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 336(BX)
	PSRLQ $32, X6
	MOVO 272(AX), X7
	MOVO X7, X5
	PSLLQ $32, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 352(BX)
	PSRLQ $16, X5
	MOVO X5, 368(BX)
	MOVO 288(AX), X10
	MOVO X10, X8
	PAND X0, X10
	MOVO X10, 384(BX)
	PSRLQ $48, X8
	MOVO 304(AX), X9
	MOVO X9, X12
	PSLLQ $16, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 400(BX)
	PSRLQ $32, X12
	MOVO 320(AX), X13
	MOVO X13, X11
	PSLLQ $32, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 416(BX)
	PSRLQ $16, X11
	MOVO X11, 432(BX)
	MOVO 336(AX), X1
	MOVO X1, X14
	PAND X0, X1
	MOVO X1, 448(BX)
	PSRLQ $48, X14
	MOVO 352(AX), X15
	MOVO X15, X4
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 464(BX)
	PSRLQ $32, X4
	MOVO 368(AX), X3
	MOVO X3, X2
	PSLLQ $32, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 480(BX)
	PSRLQ $16, X2
	MOVO X2, 496(BX)
	MOVO 384(AX), X7
	MOVO X7, X6
	PAND X0, X7
	MOVO X7, 512(BX)
	PSRLQ $48, X6
	MOVO 400(AX), X5
	MOVO X5, X10
	PSLLQ $16, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 528(BX)
	PSRLQ $32, X10
	MOVO 416(AX), X9
	MOVO X9, X8
	PSLLQ $32, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 544(BX)
	PSRLQ $16, X8
	MOVO X8, 560(BX)
	MOVO 432(AX), X13
	MOVO X13, X12
	PAND X0, X13
	MOVO X13, 576(BX)
	PSRLQ $48, X12
	MOVO 448(AX), X11
	MOVO X11, X1
	PSLLQ $16, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 592(BX)
	PSRLQ $32, X1
	MOVO 464(AX), X15
	MOVO X15, X14
	PSLLQ $32, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 608(BX)
	PSRLQ $16, X14
	MOVO X14, 624(BX)
	MOVO 480(AX), X3
	MOVO X3, X4
	PAND X0, X3
	MOVO X3, 640(BX)
	PSRLQ $48, X4
	MOVO 496(AX), X2
	MOVO X2, X7
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 656(BX)
	PSRLQ $32, X7
	MOVO 512(AX), X5
	MOVO X5, X6
	PSLLQ $32, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 672(BX)
	PSRLQ $16, X6
	MOVO X6, 688(BX)
	MOVO 528(AX), X9
	MOVO X9, X10
	PAND X0, X9
	MOVO X9, 704(BX)
	PSRLQ $48, X10
	MOVO 544(AX), X8
	MOVO X8, X13
	PSLLQ $16, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 720(BX)
	PSRLQ $32, X13
	MOVO 560(AX), X11
	MOVO X11, X12
	PSLLQ $32, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 736(BX)
	PSRLQ $16, X12
	MOVO X12, 752(BX)
	MOVO 576(AX), X15
	MOVO X15, X1
	PAND X0, X15
	MOVO X15, 768(BX)
	PSRLQ $48, X1
	MOVO 592(AX), X14
	MOVO X14, X3
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 784(BX)
	PSRLQ $32, X3
	MOVO 608(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 800(BX)
	PSRLQ $16, X4
	MOVO X4, 816(BX)
	MOVO 624(AX), X5
	MOVO X5, X7
	PAND X0, X5
	MOVO X5, 832(BX)
	PSRLQ $48, X7
	MOVO 640(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 848(BX)
	PSRLQ $32, X9
	MOVO 656(AX), X8
	MOVO X8, X10
	PSLLQ $32, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 864(BX)
	PSRLQ $16, X10
	MOVO X10, 880(BX)
	MOVO 672(AX), X11
	MOVO X11, X13
	PAND X0, X11
	MOVO X11, 896(BX)
	PSRLQ $48, X13
	MOVO 688(AX), X12
	MOVO X12, X15
	PSLLQ $16, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 912(BX)
	PSRLQ $32, X15
	MOVO 704(AX), X14
	MOVO X14, X1
	PSLLQ $32, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 928(BX)
	PSRLQ $16, X1
	MOVO X1, 944(BX)
	MOVO 720(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 960(BX)
	PSRLQ $48, X3
	MOVO 736(AX), X4
	MOVO X4, X5
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 976(BX)
	PSRLQ $32, X5
	MOVO 752(AX), X6
	MOVO X6, X7
	PSLLQ $32, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 992(BX)
	PSRLQ $16, X7
	MOVO X7, 1008(BX)
	RET

// func unpack64_49(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_49(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $562949953421311, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $49, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $15, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $34, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $30, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $19, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $45, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	MOVO X9, X10
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 64(BX)
	PSRLQ $53, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $11, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLQ $38, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLQ $23, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $41, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	MOVO X1, X2
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 128(BX)
	PSRLQ $57, X2
	MOVO 112(AX), X4
	MOVO X4, X3
	PSLLQ $7, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	PSRLQ $42, X3
	MOVO 128(AX), X6
	MOVO X6, X5
	PSLLQ $22, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	PSRLQ $27, X5
	MOVO 144(AX), X8
	MOVO X8, X7
	PSLLQ $37, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	MOVO X7, X9
	PSRLQ $12, X7
	PAND X0, X7
	MOVO X7, 192(BX)
	PSRLQ $61, X9
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $3, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 208(BX)
	PSRLQ $46, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 224(BX)
	PSRLQ $31, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $33, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 240(BX)
	PSRLQ $16, X14
	MOVO 208(AX), X1
	MOVO X1, X4
	PSLLQ $48, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 256(BX)
	MOVO X4, X2
	PSRLQ $1, X4
	PAND X0, X4
	MOVO X4, 272(BX)
	PSRLQ $50, X2
	MOVO 224(AX), X6
	MOVO X6, X3
	PSLLQ $14, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 288(BX)
	PSRLQ $35, X3
	MOVO 240(AX), X8
	MOVO X8, X5
	PSLLQ $29, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 304(BX)
	PSRLQ $20, X5
	MOVO 256(AX), X7
	MOVO X7, X11
	PSLLQ $44, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 320(BX)
	MOVO X11, X9
	PSRLQ $5, X11
	PAND X0, X11
	MOVO X11, 336(BX)
	PSRLQ $54, X9
	MOVO 272(AX), X13
	MOVO X13, X10
	PSLLQ $10, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 352(BX)
	PSRLQ $39, X10
	MOVO 288(AX), X15
	MOVO X15, X12
	PSLLQ $25, X15
	PAND X0, X15
	POR X15, X10
	MOVO X10, 368(BX)
	PSRLQ $24, X12
	MOVO 304(AX), X1
	MOVO X1, X14
	PSLLQ $40, X1
	PAND X0, X1
	POR X1, X12
	MOVO X12, 384(BX)
	MOVO X14, X4
	PSRLQ $9, X14
	PAND X0, X14
	MOVO X14, 400(BX)
	PSRLQ $58, X4
	MOVO 320(AX), X6
	MOVO X6, X2
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 416(BX)
	PSRLQ $43, X2
	MOVO 336(AX), X8
	MOVO X8, X3
	PSLLQ $21, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 432(BX)
	PSRLQ $28, X3
	MOVO 352(AX), X7
	MOVO X7, X5
	PSLLQ $36, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 448(BX)
	MOVO X5, X11
	PSRLQ $13, X5
	PAND X0, X5
	MOVO X5, 464(BX)
	PSRLQ $62, X11
	MOVO 368(AX), X13
	MOVO X13, X9
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 480(BX)
	PSRLQ $47, X9
	MOVO 384(AX), X15
	MOVO X15, X10
	PSLLQ $17, X15
	PAND X0, X15
	POR X15, X9
	MOVO X9, 496(BX)
	PSRLQ $32, X10
	MOVO 400(AX), X1
	MOVO X1, X12
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X10
	MOVO X10, 512(BX)
	PSRLQ $17, X12
	MOVO 416(AX), X14
	MOVO X14, X6
	PSLLQ $47, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 528(BX)
	MOVO X6, X4
	PSRLQ $2, X6
	PAND X0, X6
	MOVO X6, 544(BX)
	PSRLQ $51, X4
	MOVO 432(AX), X8
	MOVO X8, X2
	PSLLQ $13, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 560(BX)
	PSRLQ $36, X2
	MOVO 448(AX), X7
	MOVO X7, X3
	PSLLQ $28, X7
	PAND X0, X7
	POR X7, X2
	MOVO X2, 576(BX)
	PSRLQ $21, X3
	MOVO 464(AX), X5
	MOVO X5, X13
	PSLLQ $43, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 592(BX)
	MOVO X13, X11
	PSRLQ $6, X13
	PAND X0, X13
	MOVO X13, 608(BX)
	PSRLQ $55, X11
	MOVO 480(AX), X15
	MOVO X15, X9
	PSLLQ $9, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 624(BX)
	PSRLQ $40, X9
	MOVO 496(AX), X1
	MOVO X1, X10
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 640(BX)
	PSRLQ $25, X10
	MOVO 512(AX), X14
	MOVO X14, X12
	PSLLQ $39, X14
	PAND X0, X14
	POR X14, X10
	MOVO X10, 656(BX)
	MOVO X12, X6
	PSRLQ $10, X12
	PAND X0, X12
	MOVO X12, 672(BX)
	PSRLQ $59, X6
	MOVO 528(AX), X8
	MOVO X8, X4
	PSLLQ $5, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 688(BX)
	PSRLQ $44, X4
	MOVO 544(AX), X7
	MOVO X7, X2
	PSLLQ $20, X7
	PAND X0, X7
	POR X7, X4
	MOVO X4, 704(BX)
	PSRLQ $29, X2
	MOVO 560(AX), X5
	MOVO X5, X3
	PSLLQ $35, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 720(BX)
	MOVO X3, X13
	PSRLQ $14, X3
	PAND X0, X3
	MOVO X3, 736(BX)
	PSRLQ $63, X13
	MOVO 576(AX), X15
	MOVO X15, X11
	PSLLQ $1, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 752(BX)
	PSRLQ $48, X11
	MOVO 592(AX), X1
	MOVO X1, X9
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 768(BX)
	PSRLQ $33, X9
	MOVO 608(AX), X14
	MOVO X14, X10
	PSLLQ $31, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 784(BX)
	PSRLQ $18, X10
	MOVO 624(AX), X12
	MOVO X12, X8
	PSLLQ $46, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 800(BX)
	MOVO X8, X6
	PSRLQ $3, X8
	PAND X0, X8
	MOVO X8, 816(BX)
	PSRLQ $52, X6
	MOVO 640(AX), X7
	MOVO X7, X4
	PSLLQ $12, X7
	PAND X0, X7
	POR X7, X6
	MOVO X6, 832(BX)
	PSRLQ $37, X4
	MOVO 656(AX), X5
	MOVO X5, X2
	PSLLQ $27, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 848(BX)
	PSRLQ $22, X2
	MOVO 672(AX), X3
	MOVO X3, X15
	PSLLQ $42, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 864(BX)
	MOVO X15, X13
	PSRLQ $7, X15
	PAND X0, X15
	MOVO X15, 880(BX)
	PSRLQ $56, X13
	MOVO 688(AX), X1
	MOVO X1, X11
	PSLLQ $8, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 896(BX)
	PSRLQ $41, X11
	MOVO 704(AX), X14
	MOVO X14, X9
	PSLLQ $23, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 912(BX)
	PSRLQ $26, X9
	MOVO 720(AX), X12
	MOVO X12, X10
	PSLLQ $38, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 928(BX)
	MOVO X10, X8
	PSRLQ $11, X10
	PAND X0, X10
	MOVO X10, 944(BX)
	PSRLQ $60, X8
	MOVO 736(AX), X7
	MOVO X7, X6
	PSLLQ $4, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 960(BX)
	PSRLQ $45, X6
	MOVO 752(AX), X5
	MOVO X5, X4
	PSLLQ $19, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 976(BX)
	PSRLQ $30, X4
	MOVO 768(AX), X3
	MOVO X3, X2
	PSLLQ $34, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 992(BX)
	PSRLQ $15, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_50(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_50(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1125899906842623, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $50, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $14, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $36, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $28, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $22, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $42, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	MOVO X9, X10
	PSRLQ $8, X9
	PAND X0, X9
	MOVO X9, 64(BX)
	PSRLQ $58, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLQ $44, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLQ $30, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $34, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLQ $16, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $48, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	MOVO X4, X3
	PSRLQ $2, X4
	PAND X0, X4
	MOVO X4, 144(BX)
	PSRLQ $52, X3
	MOVO 128(AX), X6
	MOVO X6, X5
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	PSRLQ $38, X5
	MOVO 144(AX), X8
	MOVO X8, X7
	PSLLQ $26, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLQ $24, X7
	MOVO 160(AX), X9
	MOVO X9, X11
	PSLLQ $40, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	MOVO X11, X10
	PSRLQ $10, X11
	PAND X0, X11
	MOVO X11, 208(BX)
	PSRLQ $60, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLQ $4, X13
	PAND X0, X13
	POR X13, X10
	MOVO X10, 224(BX)
	PSRLQ $46, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $18, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 240(BX)
	PSRLQ $32, X14
	MOVO 208(AX), X2
	MOVO X2, X1
	PSLLQ $32, X2
	PAND X0, X2
	POR X2, X14
	MOVO X14, 256(BX)
	PSRLQ $18, X1
	MOVO 224(AX), X4
	MOVO X4, X6
	PSLLQ $46, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 272(BX)
	MOVO X6, X3
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 288(BX)
	PSRLQ $54, X3
	MOVO 240(AX), X8
	MOVO X8, X5
	PSLLQ $10, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 304(BX)
	PSRLQ $40, X5
	MOVO 256(AX), X9
	MOVO X9, X7
	PSLLQ $24, X9
	PAND X0, X9
	POR X9, X5
	MOVO X5, 320(BX)
	PSRLQ $26, X7
	MOVO 272(AX), X11
	MOVO X11, X13
	PSLLQ $38, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 336(BX)
	MOVO X13, X10
	PSRLQ $12, X13
	PAND X0, X13
	MOVO X13, 352(BX)
	PSRLQ $62, X10
	MOVO 288(AX), X15
	MOVO X15, X12
	PSLLQ $2, X15
	PAND X0, X15
	POR X15, X10
	MOVO X10, 368(BX)
	PSRLQ $48, X12
	MOVO 304(AX), X2
	MOVO X2, X14
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X12
	MOVO X12, 384(BX)
	PSRLQ $34, X14
	MOVO 320(AX), X4
	MOVO X4, X1
	PSLLQ $30, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 400(BX)
	PSRLQ $20, X1
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLQ $44, X6
	PAND X0, X6
	POR X6, X1
	MOVO X1, 416(BX)
	MOVO X8, X3
	PSRLQ $6, X8
	PAND X0, X8
	MOVO X8, 432(BX)
	PSRLQ $56, X3
	MOVO 352(AX), X9
	MOVO X9, X5
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X3
	MOVO X3, 448(BX)
	PSRLQ $42, X5
	MOVO 368(AX), X11
	MOVO X11, X7
	PSLLQ $22, X11
	PAND X0, X11
	POR X11, X5
	MOVO X5, 464(BX)
	PSRLQ $28, X7
	MOVO 384(AX), X13
	MOVO X13, X15
	PSLLQ $36, X13
	PAND X0, X13
	POR X13, X7
	MOVO X7, 480(BX)
	PSRLQ $14, X15
	MOVO X15, 496(BX)
	MOVO 400(AX), X10
	MOVO X10, X2
	PAND X0, X10
	MOVO X10, 512(BX)
	PSRLQ $50, X2
	MOVO 416(AX), X12
	MOVO X12, X4
	PSLLQ $14, X12
	PAND X0, X12
	POR X12, X2
	MOVO X2, 528(BX)
	PSRLQ $36, X4
	MOVO 432(AX), X14
	MOVO X14, X6
	PSLLQ $28, X14
	PAND X0, X14
	POR X14, X4
	MOVO X4, 544(BX)
	PSRLQ $22, X6
	MOVO 448(AX), X1
	MOVO X1, X8
	PSLLQ $42, X1
	PAND X0, X1
	POR X1, X6
	MOVO X6, 560(BX)
	MOVO X8, X9
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 576(BX)
	PSRLQ $58, X9
	MOVO 464(AX), X3
	MOVO X3, X11
	PSLLQ $6, X3
	PAND X0, X3
	POR X3, X9
	MOVO X9, 592(BX)
	PSRLQ $44, X11
	MOVO 480(AX), X5
	MOVO X5, X13
	PSLLQ $20, X5
	PAND X0, X5
	POR X5, X11
	MOVO X11, 608(BX)
	PSRLQ $30, X13
	MOVO 496(AX), X7
	MOVO X7, X15
	PSLLQ $34, X7
	PAND X0, X7
	POR X7, X13
	MOVO X13, 624(BX)
	PSRLQ $16, X15
	MOVO 512(AX), X10
	MOVO X10, X12
	PSLLQ $48, X10
	PAND X0, X10
	POR X10, X15
	MOVO X15, 640(BX)
	MOVO X12, X2
	PSRLQ $2, X12
	PAND X0, X12
	MOVO X12, 656(BX)
	PSRLQ $52, X2
	MOVO 528(AX), X14
	MOVO X14, X4
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 672(BX)
	PSRLQ $38, X4
	MOVO 544(AX), X1
	MOVO X1, X6
	PSLLQ $26, X1
	PAND X0, X1
	POR X1, X4
	MOVO X4, 688(BX)
	PSRLQ $24, X6
	MOVO 560(AX), X8
	MOVO X8, X3
	PSLLQ $40, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 704(BX)
	MOVO X3, X9
	PSRLQ $10, X3
	PAND X0, X3
	MOVO X3, 720(BX)
	PSRLQ $60, X9
	MOVO 576(AX), X5
	MOVO X5, X11
	PSLLQ $4, X5
	PAND X0, X5
	POR X5, X9
	MOVO X9, 736(BX)
	PSRLQ $46, X11
	MOVO 592(AX), X7
	MOVO X7, X13
	PSLLQ $18, X7
	PAND X0, X7
	POR X7, X11
	MOVO X11, 752(BX)
	PSRLQ $32, X13
	MOVO 608(AX), X10
	MOVO X10, X15
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X13
	MOVO X13, 768(BX)
	PSRLQ $18, X15
	MOVO 624(AX), X12
	MOVO X12, X14
	PSLLQ $46, X12
	PAND X0, X12
	POR X12, X15
	MOVO X15, 784(BX)
	MOVO X14, X2
	PSRLQ $4, X14
	PAND X0, X14
	MOVO X14, 800(BX)
	PSRLQ $54, X2
	MOVO 640(AX), X1
	MOVO X1, X4
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 816(BX)
	PSRLQ $40, X4
	MOVO 656(AX), X8
	MOVO X8, X6
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 832(BX)
	PSRLQ $26, X6
	MOVO 672(AX), X3
	MOVO X3, X5
	PSLLQ $38, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 848(BX)
	MOVO X5, X9
	PSRLQ $12, X5
	PAND X0, X5
	MOVO X5, 864(BX)
	PSRLQ $62, X9
	MOVO 688(AX), X7
	MOVO X7, X11
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 880(BX)
	PSRLQ $48, X11
	MOVO 704(AX), X10
	MOVO X10, X13
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 896(BX)
	PSRLQ $34, X13
	MOVO 720(AX), X12
	MOVO X12, X15
	PSLLQ $30, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 912(BX)
	PSRLQ $20, X15
	MOVO 736(AX), X14
	MOVO X14, X1
	PSLLQ $44, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 928(BX)
	MOVO X1, X2
	PSRLQ $6, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	PSRLQ $56, X2
	MOVO 752(AX), X8
	MOVO X8, X4
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 960(BX)
	PSRLQ $42, X4
	MOVO 768(AX), X3
	MOVO X3, X6
	PSLLQ $22, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 976(BX)
	PSRLQ $28, X6
	MOVO 784(AX), X5
	MOVO X5, X7
	PSLLQ $36, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 992(BX)
	PSRLQ $14, X7
	MOVO X7, 1008(BX)
	RET

// func unpack64_51(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_51(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $2251799813685247, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $51, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $13, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $38, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $26, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $25, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $39, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	MOVO X9, X10
	PSRLQ $12, X9
	PAND X0, X9
	MOVO X9, 64(BX)
	PSRLQ $63, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $1, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 80(BX)
	PSRLQ $50, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $14, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLQ $37, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $27, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLQ $24, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $40, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	MOVO X4, X3
	PSRLQ $11, X4
	PAND X0, X4
	MOVO X4, 144(BX)
	PSRLQ $62, X3
	MOVO 128(AX), X6
	MOVO X6, X5
	PSLLQ $2, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	PSRLQ $49, X5
	MOVO 144(AX), X8
	MOVO X8, X7
	PSLLQ $15, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLQ $36, X7
	MOVO 160(AX), X9
	MOVO X9, X11
	PSLLQ $28, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 192(BX)
	PSRLQ $23, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $41, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 208(BX)
	MOVO X13, X12
	PSRLQ $10, X13
	PAND X0, X13
	MOVO X13, 224(BX)
	PSRLQ $61, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $3, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 240(BX)
	PSRLQ $48, X14
	MOVO 208(AX), X2
	MOVO X2, X1
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X14
	MOVO X14, 256(BX)
	PSRLQ $35, X1
	MOVO 224(AX), X4
	MOVO X4, X6
	PSLLQ $29, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 272(BX)
	PSRLQ $22, X6
	MOVO 240(AX), X3
	MOVO X3, X8
	PSLLQ $42, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 288(BX)
	MOVO X8, X5
	PSRLQ $9, X8
	PAND X0, X8
	MOVO X8, 304(BX)
	PSRLQ $60, X5
	MOVO 256(AX), X9
	MOVO X9, X7
	PSLLQ $4, X9
	PAND X0, X9
	POR X9, X5
	MOVO X5, 320(BX)
	PSRLQ $47, X7
	MOVO 272(AX), X10
	MOVO X10, X11
	PSLLQ $17, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 336(BX)
	PSRLQ $34, X11
	MOVO 288(AX), X13
	MOVO X13, X15
	PSLLQ $30, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 352(BX)
	PSRLQ $21, X15
	MOVO 304(AX), X12
	MOVO X12, X2
	PSLLQ $43, X12
	PAND X0, X12
	POR X12, X15
	MOVO X15, 368(BX)
	MOVO X2, X14
	PSRLQ $8, X2
	PAND X0, X2
	MOVO X2, 384(BX)
	PSRLQ $59, X14
	MOVO 320(AX), X4
	MOVO X4, X1
	PSLLQ $5, X4
	PAND X0, X4
	POR X4, X14
	MOVO X14, 400(BX)
	PSRLQ $46, X1
	MOVO 336(AX), X3
	MOVO X3, X6
	PSLLQ $18, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 416(BX)
	PSRLQ $33, X6
	MOVO 352(AX), X8
	MOVO X8, X9
	PSLLQ $31, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 432(BX)
	PSRLQ $20, X9
	MOVO 368(AX), X5
	MOVO X5, X10
	PSLLQ $44, X5
	PAND X0, X5
	POR X5, X9
	MOVO X9, 448(BX)
	MOVO X10, X7
	PSRLQ $7, X10
	PAND X0, X10
	MOVO X10, 464(BX)
	PSRLQ $58, X7
	MOVO 384(AX), X13
	MOVO X13, X11
	PSLLQ $6, X13
	PAND X0, X13
	POR X13, X7
	MOVO X7, 480(BX)
	PSRLQ $45, X11
	MOVO 400(AX), X12
	MOVO X12, X15
	PSLLQ $19, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 496(BX)
	PSRLQ $32, X15
	MOVO 416(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 512(BX)
	PSRLQ $19, X4
	MOVO 432(AX), X14
	MOVO X14, X3
	PSLLQ $45, X14
	PAND X0, X14
	POR X14, X4
	MOVO X4, 528(BX)
	MOVO X3, X1
	PSRLQ $6, X3
	PAND X0, X3
	MOVO X3, 544(BX)
	PSRLQ $57, X1
	MOVO 448(AX), X8
	MOVO X8, X6
	PSLLQ $7, X8
	PAND X0, X8
	POR X8, X1
	MOVO X1, 560(BX)
	PSRLQ $44, X6
	MOVO 464(AX), X5
	MOVO X5, X9
	PSLLQ $20, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 576(BX)
	PSRLQ $31, X9
	MOVO 480(AX), X10
	MOVO X10, X13
	PSLLQ $33, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 592(BX)
	PSRLQ $18, X13
	MOVO 496(AX), X7
	MOVO X7, X12
	PSLLQ $46, X7
	PAND X0, X7
	POR X7, X13
	MOVO X13, 608(BX)
	MOVO X12, X11
	PSRLQ $5, X12
	PAND X0, X12
	MOVO X12, 624(BX)
	PSRLQ $56, X11
	MOVO 512(AX), X2
	MOVO X2, X15
	PSLLQ $8, X2
	PAND X0, X2
	POR X2, X11
	MOVO X11, 640(BX)
	PSRLQ $43, X15
	MOVO 528(AX), X14
	MOVO X14, X4
	PSLLQ $21, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 656(BX)
	PSRLQ $30, X4
	MOVO 544(AX), X3
	MOVO X3, X8
	PSLLQ $34, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 672(BX)
	PSRLQ $17, X8
	MOVO 560(AX), X1
	MOVO X1, X5
	PSLLQ $47, X1
	PAND X0, X1
	POR X1, X8
	MOVO X8, 688(BX)
	MOVO X5, X6
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 704(BX)
	PSRLQ $55, X6
	MOVO 576(AX), X10
	MOVO X10, X9
	PSLLQ $9, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 720(BX)
	PSRLQ $42, X9
	MOVO 592(AX), X7
	MOVO X7, X13
	PSLLQ $22, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 736(BX)
	PSRLQ $29, X13
	MOVO 608(AX), X12
	MOVO X12, X2
	PSLLQ $35, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 752(BX)
	PSRLQ $16, X2
	MOVO 624(AX), X11
	MOVO X11, X14
	PSLLQ $48, X11
	PAND X0, X11
	POR X11, X2
	MOVO X2, 768(BX)
	MOVO X14, X15
	PSRLQ $3, X14
	PAND X0, X14
	MOVO X14, 784(BX)
	PSRLQ $54, X15
	MOVO 640(AX), X3
	MOVO X3, X4
	PSLLQ $10, X3
	PAND X0, X3
	POR X3, X15
	MOVO X15, 800(BX)
	PSRLQ $41, X4
	MOVO 656(AX), X1
	MOVO X1, X8
	PSLLQ $23, X1
	PAND X0, X1
	POR X1, X4
	MOVO X4, 816(BX)
	PSRLQ $28, X8
	MOVO 672(AX), X5
	MOVO X5, X10
	PSLLQ $36, X5
	PAND X0, X5
	POR X5, X8
	MOVO X8, 832(BX)
	PSRLQ $15, X10
	MOVO 688(AX), X6
	MOVO X6, X7
	PSLLQ $49, X6
	PAND X0, X6
	POR X6, X10
	MOVO X10, 848(BX)
	MOVO X7, X9
	PSRLQ $2, X7
	PAND X0, X7
	MOVO X7, 864(BX)
	PSRLQ $53, X9
	MOVO 704(AX), X12
	MOVO X12, X13
	PSLLQ $11, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 880(BX)
	PSRLQ $40, X13
	MOVO 720(AX), X11
	MOVO X11, X2
	PSLLQ $24, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 896(BX)
	PSRLQ $27, X2
	MOVO 736(AX), X14
	MOVO X14, X3
	PSLLQ $37, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 912(BX)
	PSRLQ $14, X3
	MOVO 752(AX), X15
	MOVO X15, X1
	PSLLQ $50, X15
	PAND X0, X15
	POR X15, X3
	MOVO X3, 928(BX)
	MOVO X1, X4
	PSRLQ $1, X1
	PAND X0, X1
	MOVO X1, 944(BX)
	PSRLQ $52, X4
	MOVO 768(AX), X5
	MOVO X5, X8
	PSLLQ $12, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 960(BX)
	PSRLQ $39, X8
	MOVO 784(AX), X6
	MOVO X6, X10
	PSLLQ $25, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 976(BX)
	PSRLQ $26, X10
	MOVO 800(AX), X7
	MOVO X7, X12
	PSLLQ $38, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 992(BX)
	PSRLQ $13, X12
	MOVO X12, 1008(BX)
	RET

// func unpack64_52(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_52(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $4503599627370495, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $52, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $12, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $40, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $24, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $28, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $36, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $16, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $48, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	MOVO X11, X12
	PSRLQ $4, X11
	PAND X0, X11
	MOVO X11, 80(BX)
	PSRLQ $56, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $8, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLQ $44, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $20, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLQ $32, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	PSRLQ $20, X4
	MOVO 128(AX), X3
	MOVO X3, X6
	PSLLQ $44, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 144(BX)
	MOVO X6, X5
	PSRLQ $8, X6
	PAND X0, X6
	MOVO X6, 160(BX)
	PSRLQ $60, X5
	MOVO 144(AX), X8
	MOVO X8, X7
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLQ $48, X7
	MOVO 160(AX), X10
	MOVO X10, X9
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 192(BX)
	PSRLQ $36, X9
	MOVO 176(AX), X11
	MOVO X11, X13
	PSLLQ $28, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 208(BX)
	PSRLQ $24, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 224(BX)
	PSRLQ $12, X15
	MOVO X15, 240(BX)
	MOVO 208(AX), X14
	MOVO X14, X2
	PAND X0, X14
	MOVO X14, 256(BX)
	PSRLQ $52, X2
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLQ $12, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 272(BX)
	PSRLQ $40, X3
	MOVO 240(AX), X4
	MOVO X4, X6
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 288(BX)
	PSRLQ $28, X6
	MOVO 256(AX), X8
	MOVO X8, X5
	PSLLQ $36, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 304(BX)
	PSRLQ $16, X5
	MOVO 272(AX), X10
	MOVO X10, X7
	PSLLQ $48, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 320(BX)
	MOVO X7, X11
	PSRLQ $4, X7
	PAND X0, X7
	MOVO X7, 336(BX)
	PSRLQ $56, X11
	MOVO 288(AX), X9
	MOVO X9, X12
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 352(BX)
	PSRLQ $44, X12
	MOVO 304(AX), X13
	MOVO X13, X15
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 368(BX)
	PSRLQ $32, X15
	MOVO 320(AX), X14
	MOVO X14, X1
	PSLLQ $32, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 384(BX)
	PSRLQ $20, X1
	MOVO 336(AX), X2
	MOVO X2, X4
	PSLLQ $44, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 400(BX)
	MOVO X4, X3
	PSRLQ $8, X4
	PAND X0, X4
	MOVO X4, 416(BX)
	PSRLQ $60, X3
	MOVO 352(AX), X8
	MOVO X8, X6
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 432(BX)
	PSRLQ $48, X6
	MOVO 368(AX), X10
	MOVO X10, X5
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 448(BX)
	PSRLQ $36, X5
	MOVO 384(AX), X7
	MOVO X7, X9
	PSLLQ $28, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 464(BX)
	PSRLQ $24, X9
	MOVO 400(AX), X11
	MOVO X11, X13
	PSLLQ $40, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 480(BX)
	PSRLQ $12, X13
	MOVO X13, 496(BX)
	MOVO 416(AX), X12
	MOVO X12, X14
	PAND X0, X12
	MOVO X12, 512(BX)
	PSRLQ $52, X14
	MOVO 432(AX), X15
	MOVO X15, X2
	PSLLQ $12, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 528(BX)
	PSRLQ $40, X2
	MOVO 448(AX), X1
	MOVO X1, X4
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 544(BX)
	PSRLQ $28, X4
	MOVO 464(AX), X8
	MOVO X8, X3
	PSLLQ $36, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 560(BX)
	PSRLQ $16, X3
	MOVO 480(AX), X10
	MOVO X10, X6
	PSLLQ $48, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 576(BX)
	MOVO X6, X7
	PSRLQ $4, X6
	PAND X0, X6
	MOVO X6, 592(BX)
	PSRLQ $56, X7
	MOVO 496(AX), X5
	MOVO X5, X11
	PSLLQ $8, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 608(BX)
	PSRLQ $44, X11
	MOVO 512(AX), X9
	MOVO X9, X13
	PSLLQ $20, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 624(BX)
	PSRLQ $32, X13
	MOVO 528(AX), X12
	MOVO X12, X15
	PSLLQ $32, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 640(BX)
	PSRLQ $20, X15
	MOVO 544(AX), X14
	MOVO X14, X1
	PSLLQ $44, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 656(BX)
	MOVO X1, X2
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 672(BX)
	PSRLQ $60, X2
	MOVO 560(AX), X8
	MOVO X8, X4
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 688(BX)
	PSRLQ $48, X4
	MOVO 576(AX), X10
	MOVO X10, X3
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X4
	MOVO X4, 704(BX)
	PSRLQ $36, X3
	MOVO 592(AX), X6
	MOVO X6, X5
	PSLLQ $28, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 720(BX)
	PSRLQ $24, X5
	MOVO 608(AX), X7
	MOVO X7, X9
	PSLLQ $40, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 736(BX)
	PSRLQ $12, X9
	MOVO X9, 752(BX)
	MOVO 624(AX), X11
	MOVO X11, X12
	PAND X0, X11
	MOVO X11, 768(BX)
	PSRLQ $52, X12
	MOVO 640(AX), X13
	MOVO X13, X14
	PSLLQ $12, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 784(BX)
	PSRLQ $40, X14
	MOVO 656(AX), X15
	MOVO X15, X1
	PSLLQ $24, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 800(BX)
	PSRLQ $28, X1
	MOVO 672(AX), X8
	MOVO X8, X2
	PSLLQ $36, X8
	PAND X0, X8
	POR X8, X1
	MOVO X1, 816(BX)
	PSRLQ $16, X2
	MOVO 688(AX), X10
	MOVO X10, X4
	PSLLQ $48, X10
	PAND X0, X10
	POR X10, X2
	MOVO X2, 832(BX)
	MOVO X4, X6
	PSRLQ $4, X4
	PAND X0, X4
	MOVO X4, 848(BX)
	PSRLQ $56, X6
	MOVO 704(AX), X3
	MOVO X3, X7
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 864(BX)
	PSRLQ $44, X7
	MOVO 720(AX), X5
	MOVO X5, X9
	PSLLQ $20, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 880(BX)
	PSRLQ $32, X9
	MOVO 736(AX), X11
	MOVO X11, X13
	PSLLQ $32, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 896(BX)
	PSRLQ $20, X13
	MOVO 752(AX), X12
	MOVO X12, X15
	PSLLQ $44, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 912(BX)
	MOVO X15, X14
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 928(BX)
	PSRLQ $60, X14
	MOVO 768(AX), X8
	MOVO X8, X1
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X14
	MOVO X14, 944(BX)
	PSRLQ $48, X1
	MOVO 784(AX), X10
	MOVO X10, X2
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X1
	MOVO X1, 960(BX)
	PSRLQ $36, X2
	MOVO 800(AX), X4
	MOVO X4, X3
	PSLLQ $28, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 976(BX)
	PSRLQ $24, X3
	MOVO 816(AX), X6
	MOVO X6, X5
	PSLLQ $40, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 992(BX)
	PSRLQ $12, X5
	MOVO X5, 1008(BX)
	RET

// func unpack64_53(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_53(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $9007199254740991, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $53, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $11, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $42, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $22, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $31, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $33, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $20, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $44, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	MOVO X11, X12
	PSRLQ $9, X11
	PAND X0, X11
	MOVO X11, 80(BX)
	PSRLQ $62, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 96(BX)
	PSRLQ $51, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $13, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLQ $40, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $24, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	PSRLQ $29, X4
	MOVO 128(AX), X3
	MOVO X3, X6
	PSLLQ $35, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 144(BX)
	PSRLQ $18, X6
	MOVO 144(AX), X5
	MOVO X5, X8
	PSLLQ $46, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 160(BX)
	MOVO X8, X7
	PSRLQ $7, X8
	PAND X0, X8
	MOVO X8, 176(BX)
	PSRLQ $60, X7
	MOVO 160(AX), X10
	MOVO X10, X9
	PSLLQ $4, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 192(BX)
	PSRLQ $49, X9
	MOVO 176(AX), X11
	MOVO X11, X13
	PSLLQ $15, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 208(BX)
	PSRLQ $38, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $26, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 224(BX)
	PSRLQ $27, X15
	MOVO 208(AX), X14
	MOVO X14, X2
	PSLLQ $37, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 240(BX)
	PSRLQ $16, X2
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLQ $48, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 256(BX)
	MOVO X3, X4
	PSRLQ $5, X3
	PAND X0, X3
	MOVO X3, 272(BX)
	PSRLQ $58, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X4
	MOVO X4, 288(BX)
	PSRLQ $47, X6
	MOVO 256(AX), X8
	MOVO X8, X10
	PSLLQ $17, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 304(BX)
	PSRLQ $36, X10
	MOVO 272(AX), X7
	MOVO X7, X11
	PSLLQ $28, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 320(BX)
	PSRLQ $25, X11
	MOVO 288(AX), X9
	MOVO X9, X12
	PSLLQ $39, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 336(BX)
	PSRLQ $14, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $50, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 352(BX)
	MOVO X14, X15
	PSRLQ $3, X14
	PAND X0, X14
	MOVO X14, 368(BX)
	PSRLQ $56, X15
	MOVO 320(AX), X1
	MOVO X1, X2
	PSLLQ $8, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 384(BX)
	PSRLQ $45, X2
	MOVO 336(AX), X3
	MOVO X3, X5
	PSLLQ $19, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 400(BX)
	PSRLQ $34, X5
	MOVO 352(AX), X4
	MOVO X4, X8
	PSLLQ $30, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 416(BX)
	PSRLQ $23, X8
	MOVO 368(AX), X6
	MOVO X6, X7
	PSLLQ $41, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 432(BX)
	PSRLQ $12, X7
	MOVO 384(AX), X10
	MOVO X10, X9
	PSLLQ $52, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 448(BX)
	MOVO X9, X11
	PSRLQ $1, X9
	PAND X0, X9
	MOVO X9, 464(BX)
	PSRLQ $54, X11
	MOVO 400(AX), X13
	MOVO X13, X12
	PSLLQ $10, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 480(BX)
	PSRLQ $43, X12
	MOVO 416(AX), X14
	MOVO X14, X1
	PSLLQ $21, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 496(BX)
	PSRLQ $32, X1
	MOVO 432(AX), X15
	MOVO X15, X3
	PSLLQ $32, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 512(BX)
	PSRLQ $21, X3
	MOVO 448(AX), X2
	MOVO X2, X4
	PSLLQ $43, X2
	PAND X0, X2
	POR X2, X3
	MOVO X3, 528(BX)
	MOVO X4, X5
	PSRLQ $10, X4
	PAND X0, X4
	MOVO X4, 544(BX)
	PSRLQ $63, X5
	MOVO 464(AX), X6
	MOVO X6, X8
	PSLLQ $1, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 560(BX)
	PSRLQ $52, X8
	MOVO 480(AX), X10
	MOVO X10, X7
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 576(BX)
	PSRLQ $41, X7
	MOVO 496(AX), X9
	MOVO X9, X13
	PSLLQ $23, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 592(BX)
	PSRLQ $30, X13
	MOVO 512(AX), X11
	MOVO X11, X14
	PSLLQ $34, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 608(BX)
	PSRLQ $19, X14
	MOVO 528(AX), X12
	MOVO X12, X15
	PSLLQ $45, X12
	PAND X0, X12
	POR X12, X14
	MOVO X14, 624(BX)
	MOVO X15, X1
	PSRLQ $8, X15
	PAND X0, X15
	MOVO X15, 640(BX)
	PSRLQ $61, X1
	MOVO 544(AX), X2
	MOVO X2, X3
	PSLLQ $3, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 656(BX)
	PSRLQ $50, X3
	MOVO 560(AX), X4
	MOVO X4, X6
	PSLLQ $14, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 672(BX)
	PSRLQ $39, X6
	MOVO 576(AX), X5
	MOVO X5, X10
	PSLLQ $25, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 688(BX)
	PSRLQ $28, X10
	MOVO 592(AX), X8
	MOVO X8, X9
	PSLLQ $36, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 704(BX)
	PSRLQ $17, X9
	MOVO 608(AX), X7
	MOVO X7, X11
	PSLLQ $47, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 720(BX)
	MOVO X11, X13
	PSRLQ $6, X11
	PAND X0, X11
	MOVO X11, 736(BX)
	PSRLQ $59, X13
	MOVO 624(AX), X12
	MOVO X12, X14
	PSLLQ $5, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 752(BX)
	PSRLQ $48, X14
	MOVO 640(AX), X15
	MOVO X15, X2
	PSLLQ $16, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 768(BX)
	PSRLQ $37, X2
	MOVO 656(AX), X1
	MOVO X1, X4
	PSLLQ $27, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 784(BX)
	PSRLQ $26, X4
	MOVO 672(AX), X3
	MOVO X3, X5
	PSLLQ $38, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 800(BX)
	PSRLQ $15, X5
	MOVO 688(AX), X6
	MOVO X6, X8
	PSLLQ $49, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 816(BX)
	MOVO X8, X10
	PSRLQ $4, X8
	PAND X0, X8
	MOVO X8, 832(BX)
	PSRLQ $57, X10
	MOVO 704(AX), X7
	MOVO X7, X9
	PSLLQ $7, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 848(BX)
	PSRLQ $46, X9
	MOVO 720(AX), X11
	MOVO X11, X12
	PSLLQ $18, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 864(BX)
	PSRLQ $35, X12
	MOVO 736(AX), X13
	MOVO X13, X15
	PSLLQ $29, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 880(BX)
	PSRLQ $24, X15
	MOVO 752(AX), X14
	MOVO X14, X1
	PSLLQ $40, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 896(BX)
	PSRLQ $13, X1
	MOVO 768(AX), X2
	MOVO X2, X3
	PSLLQ $51, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 912(BX)
	MOVO X3, X4
	PSRLQ $2, X3
	PAND X0, X3
	MOVO X3, 928(BX)
	PSRLQ $55, X4
	MOVO 784(AX), X6
	MOVO X6, X5
	PSLLQ $9, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 944(BX)
	PSRLQ $44, X5
	MOVO 800(AX), X8
	MOVO X8, X7
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 960(BX)
	PSRLQ $33, X7
	MOVO 816(AX), X10
	MOVO X10, X11
	PSLLQ $31, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 976(BX)
	PSRLQ $22, X11
	MOVO 832(AX), X9
	MOVO X9, X13
	PSLLQ $42, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 992(BX)
	PSRLQ $11, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_54(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_54(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $18014398509481983, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $54, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $10, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $44, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $34, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $30, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $24, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $40, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $14, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $50, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	MOVO X13, X14
	PSRLQ $4, X13
	PAND X0, X13
	MOVO X13, 96(BX)
	PSRLQ $58, X14
	MOVO 96(AX), X15
	MOVO X15, X1
	PSLLQ $6, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 112(BX)
	PSRLQ $48, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	PSRLQ $38, X4
	MOVO 128(AX), X3
	MOVO X3, X6
	PSLLQ $26, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 144(BX)
	PSRLQ $28, X6
	MOVO 144(AX), X5
	MOVO X5, X8
	PSLLQ $36, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 160(BX)
	PSRLQ $18, X8
	MOVO 160(AX), X7
	MOVO X7, X10
	PSLLQ $46, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 176(BX)
	MOVO X10, X9
	PSRLQ $8, X10
	PAND X0, X10
	MOVO X10, 192(BX)
	PSRLQ $62, X9
	MOVO 176(AX), X12
	MOVO X12, X11
	PSLLQ $2, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 208(BX)
	PSRLQ $52, X11
	MOVO 192(AX), X13
	MOVO X13, X15
	PSLLQ $12, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 224(BX)
	PSRLQ $42, X15
	MOVO 208(AX), X14
	MOVO X14, X2
	PSLLQ $22, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 240(BX)
	PSRLQ $32, X2
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 256(BX)
	PSRLQ $22, X3
	MOVO 240(AX), X4
	MOVO X4, X5
	PSLLQ $42, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 272(BX)
	PSRLQ $12, X5
	MOVO 256(AX), X6
	MOVO X6, X7
	PSLLQ $52, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 288(BX)
	MOVO X7, X8
	PSRLQ $2, X7
	PAND X0, X7
	MOVO X7, 304(BX)
	PSRLQ $56, X8
	MOVO 272(AX), X10
	MOVO X10, X12
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 320(BX)
	PSRLQ $46, X12
	MOVO 288(AX), X9
	MOVO X9, X13
	PSLLQ $18, X9
	PAND X0, X9
	POR X9, X12
	MOVO X12, 336(BX)
	PSRLQ $36, X13
	MOVO 304(AX), X11
	MOVO X11, X14
	PSLLQ $28, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 352(BX)
	PSRLQ $26, X14
	MOVO 320(AX), X15
	MOVO X15, X1
	PSLLQ $38, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 368(BX)
	PSRLQ $16, X1
	MOVO 336(AX), X2
	MOVO X2, X4
	PSLLQ $48, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 384(BX)
	MOVO X4, X3
	PSRLQ $6, X4
	PAND X0, X4
	MOVO X4, 400(BX)
	PSRLQ $60, X3
	MOVO 352(AX), X6
	MOVO X6, X5
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 416(BX)
	PSRLQ $50, X5
	MOVO 368(AX), X7
	MOVO X7, X10
	PSLLQ $14, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 432(BX)
	PSRLQ $40, X10
	MOVO 384(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 448(BX)
	PSRLQ $30, X9
	MOVO 400(AX), X12
	MOVO X12, X11
	PSLLQ $34, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 464(BX)
	PSRLQ $20, X11
	MOVO 416(AX), X13
	MOVO X13, X15
	PSLLQ $44, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 480(BX)
	PSRLQ $10, X15
	MOVO X15, 496(BX)
	MOVO 432(AX), X14
	MOVO X14, X2
	PAND X0, X14
	MOVO X14, 512(BX)
	PSRLQ $54, X2
	MOVO 448(AX), X1
	MOVO X1, X4
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 528(BX)
	PSRLQ $44, X4
	MOVO 464(AX), X6
	MOVO X6, X3
	PSLLQ $20, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 544(BX)
	PSRLQ $34, X3
	MOVO 480(AX), X7
	MOVO X7, X5
	PSLLQ $30, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 560(BX)
	PSRLQ $24, X5
	MOVO 496(AX), X8
	MOVO X8, X10
	PSLLQ $40, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 576(BX)
	PSRLQ $14, X10
	MOVO 512(AX), X12
	MOVO X12, X9
	PSLLQ $50, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 592(BX)
	MOVO X9, X13
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 608(BX)
	PSRLQ $58, X13
	MOVO 528(AX), X11
	MOVO X11, X15
	PSLLQ $6, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 624(BX)
	PSRLQ $48, X15
	MOVO 544(AX), X14
	MOVO X14, X1
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 640(BX)
	PSRLQ $38, X1
	MOVO 560(AX), X2
	MOVO X2, X6
	PSLLQ $26, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 656(BX)
	PSRLQ $28, X6
	MOVO 576(AX), X4
	MOVO X4, X7
	PSLLQ $36, X4
	PAND X0, X4
	POR X4, X6
	MOVO X6, 672(BX)
	PSRLQ $18, X7
	MOVO 592(AX), X3
	MOVO X3, X8
	PSLLQ $46, X3
	PAND X0, X3
	POR X3, X7
	MOVO X7, 688(BX)
	MOVO X8, X5
	PSRLQ $8, X8
	PAND X0, X8
	MOVO X8, 704(BX)
	PSRLQ $62, X5
	MOVO 608(AX), X12
	MOVO X12, X10
	PSLLQ $2, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 720(BX)
	PSRLQ $52, X10
	MOVO 624(AX), X9
	MOVO X9, X11
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 736(BX)
	PSRLQ $42, X11
	MOVO 640(AX), X13
	MOVO X13, X14
	PSLLQ $22, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 752(BX)
	PSRLQ $32, X14
	MOVO 656(AX), X15
	MOVO X15, X2
	PSLLQ $32, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 768(BX)
	PSRLQ $22, X2
	MOVO 672(AX), X1
	MOVO X1, X4
	PSLLQ $42, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 784(BX)
	PSRLQ $12, X4
	MOVO 688(AX), X6
	MOVO X6, X3
	PSLLQ $52, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 800(BX)
	MOVO X3, X7
	PSRLQ $2, X3
	PAND X0, X3
	MOVO X3, 816(BX)
	PSRLQ $56, X7
	MOVO 704(AX), X8
	MOVO X8, X12
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 832(BX)
	PSRLQ $46, X12
	MOVO 720(AX), X5
	MOVO X5, X9
	PSLLQ $18, X5
	PAND X0, X5
	POR X5, X12
	MOVO X12, 848(BX)
	PSRLQ $36, X9
	MOVO 736(AX), X10
	MOVO X10, X13
	PSLLQ $28, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 864(BX)
	PSRLQ $26, X13
	MOVO 752(AX), X11
	MOVO X11, X15
	PSLLQ $38, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 880(BX)
	PSRLQ $16, X15
	MOVO 768(AX), X14
	MOVO X14, X1
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 896(BX)
	MOVO X1, X2
	PSRLQ $6, X1
	PAND X0, X1
	MOVO X1, 912(BX)
	PSRLQ $60, X2
	MOVO 784(AX), X6
	MOVO X6, X4
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 928(BX)
	PSRLQ $50, X4
	MOVO 800(AX), X3
	MOVO X3, X8
	PSLLQ $14, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 944(BX)
	PSRLQ $40, X8
	MOVO 816(AX), X7
	MOVO X7, X5
	PSLLQ $24, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 960(BX)
	PSRLQ $30, X5
	MOVO 832(AX), X12
	MOVO X12, X10
	PSLLQ $34, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 976(BX)
	PSRLQ $20, X10
	MOVO 848(AX), X9
	MOVO X9, X11
	PSLLQ $44, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 992(BX)
	PSRLQ $10, X11
	MOVO X11, 1008(BX)
	RET

// func unpack64_55(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_55(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $36028797018963967, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $55, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $9, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $46, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $18, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $37, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $27, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $28, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $36, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $19, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $45, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $10, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $54, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	MOVO X15, X1
	PSRLQ $1, X15
	PAND X0, X15
	MOVO X15, 112(BX)
	PSRLQ $56, X1
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $8, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 128(BX)
	PSRLQ $47, X4
	MOVO 128(AX), X3
	MOVO X3, X6
	PSLLQ $17, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 144(BX)
	PSRLQ $38, X6
	MOVO 144(AX), X5
	MOVO X5, X8
	PSLLQ $26, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 160(BX)
	PSRLQ $29, X8
	MOVO 160(AX), X7
	MOVO X7, X10
	PSLLQ $35, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 176(BX)
	PSRLQ $20, X10
	MOVO 176(AX), X9
	MOVO X9, X12
	PSLLQ $44, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 192(BX)
	PSRLQ $11, X12
	MOVO 192(AX), X11
	MOVO X11, X14
	PSLLQ $53, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 208(BX)
	MOVO X14, X13
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 224(BX)
	PSRLQ $57, X13
	MOVO 208(AX), X15
	MOVO X15, X2
	PSLLQ $7, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 240(BX)
	PSRLQ $48, X2
	MOVO 224(AX), X1
	MOVO X1, X3
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 256(BX)
	PSRLQ $39, X3
	MOVO 240(AX), X4
	MOVO X4, X5
	PSLLQ $25, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 272(BX)
	PSRLQ $30, X5
	MOVO 256(AX), X6
	MOVO X6, X7
	PSLLQ $34, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 288(BX)
	PSRLQ $21, X7
	MOVO 272(AX), X8
	MOVO X8, X9
	PSLLQ $43, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 304(BX)
	PSRLQ $12, X9
	MOVO 288(AX), X10
	MOVO X10, X11
	PSLLQ $52, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 320(BX)
	MOVO X11, X12
	PSRLQ $3, X11
	PAND X0, X11
	MOVO X11, 336(BX)
	PSRLQ $58, X12
	MOVO 304(AX), X14
	MOVO X14, X15
	PSLLQ $6, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 352(BX)
	PSRLQ $49, X15
	MOVO 320(AX), X13
	MOVO X13, X1
	PSLLQ $15, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 368(BX)
	PSRLQ $40, X1
	MOVO 336(AX), X2
	MOVO X2, X4
	PSLLQ $24, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 384(BX)
	PSRLQ $31, X4
	MOVO 352(AX), X3
	MOVO X3, X6
	PSLLQ $33, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 400(BX)
	PSRLQ $22, X6
	MOVO 368(AX), X5
	MOVO X5, X8
	PSLLQ $42, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 416(BX)
	PSRLQ $13, X8
	MOVO 384(AX), X7
	MOVO X7, X10
	PSLLQ $51, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 432(BX)
	MOVO X10, X9
	PSRLQ $4, X10
	PAND X0, X10
	MOVO X10, 448(BX)
	PSRLQ $59, X9
	MOVO 400(AX), X11
	MOVO X11, X14
	PSLLQ $5, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 464(BX)
	PSRLQ $50, X14
	MOVO 416(AX), X12
	MOVO X12, X13
	PSLLQ $14, X12
	PAND X0, X12
	POR X12, X14
	MOVO X14, 480(BX)
	PSRLQ $41, X13
	MOVO 432(AX), X15
	MOVO X15, X2
	PSLLQ $23, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 496(BX)
	PSRLQ $32, X2
	MOVO 448(AX), X1
	MOVO X1, X3
	PSLLQ $32, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 512(BX)
	PSRLQ $23, X3
	MOVO 464(AX), X4
	MOVO X4, X5
	PSLLQ $41, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 528(BX)
	PSRLQ $14, X5
	MOVO 480(AX), X6
	MOVO X6, X7
	PSLLQ $50, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 544(BX)
	MOVO X7, X8
	PSRLQ $5, X7
	PAND X0, X7
	MOVO X7, 560(BX)
	PSRLQ $60, X8
	MOVO 496(AX), X10
	MOVO X10, X11
	PSLLQ $4, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 576(BX)
	PSRLQ $51, X11
	MOVO 512(AX), X9
	MOVO X9, X12
	PSLLQ $13, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 592(BX)
	PSRLQ $42, X12
	MOVO 528(AX), X14
	MOVO X14, X15
	PSLLQ $22, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 608(BX)
	PSRLQ $33, X15
	MOVO 544(AX), X13
	MOVO X13, X1
	PSLLQ $31, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 624(BX)
	PSRLQ $24, X1
	MOVO 560(AX), X2
	MOVO X2, X4
	PSLLQ $40, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 640(BX)
	PSRLQ $15, X4
	MOVO 576(AX), X3
	MOVO X3, X6
	PSLLQ $49, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 656(BX)
	MOVO X6, X5
	PSRLQ $6, X6
	PAND X0, X6
	MOVO X6, 672(BX)
	PSRLQ $61, X5
	MOVO 592(AX), X7
	MOVO X7, X10
	PSLLQ $3, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 688(BX)
	PSRLQ $52, X10
	MOVO 608(AX), X8
	MOVO X8, X9
	PSLLQ $12, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 704(BX)
	PSRLQ $43, X9
	MOVO 624(AX), X11
	MOVO X11, X14
	PSLLQ $21, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 720(BX)
	PSRLQ $34, X14
	MOVO 640(AX), X12
	MOVO X12, X13
	PSLLQ $30, X12
	PAND X0, X12
	POR X12, X14
	MOVO X14, 736(BX)
	PSRLQ $25, X13
	MOVO 656(AX), X15
	MOVO X15, X2
	PSLLQ $39, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 752(BX)
	PSRLQ $16, X2
	MOVO 672(AX), X1
	MOVO X1, X3
	PSLLQ $48, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 768(BX)
	MOVO X3, X4
	PSRLQ $7, X3
	PAND X0, X3
	MOVO X3, 784(BX)
	PSRLQ $62, X4
	MOVO 688(AX), X6
	MOVO X6, X7
	PSLLQ $2, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 800(BX)
	PSRLQ $53, X7
	MOVO 704(AX), X5
	MOVO X5, X8
	PSLLQ $11, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 816(BX)
	PSRLQ $44, X8
	MOVO 720(AX), X10
	MOVO X10, X11
	PSLLQ $20, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 832(BX)
	PSRLQ $35, X11
	MOVO 736(AX), X9
	MOVO X9, X12
	PSLLQ $29, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 848(BX)
	PSRLQ $26, X12
	MOVO 752(AX), X14
	MOVO X14, X15
	PSLLQ $38, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 864(BX)
	PSRLQ $17, X15
	MOVO 768(AX), X13
	MOVO X13, X1
	PSLLQ $47, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 880(BX)
	MOVO X1, X2
	PSRLQ $8, X1
	PAND X0, X1
	MOVO X1, 896(BX)
	PSRLQ $63, X2
	MOVO 784(AX), X3
	MOVO X3, X6
	PSLLQ $1, X3
	PAND X0, X3
	POR X3, X2
	MOVO X2, 912(BX)
	PSRLQ $54, X6
	MOVO 800(AX), X4
	MOVO X4, X5
	PSLLQ $10, X4
	PAND X0, X4
	POR X4, X6
	MOVO X6, 928(BX)
	PSRLQ $45, X5
	MOVO 816(AX), X7
	MOVO X7, X10
	PSLLQ $19, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 944(BX)
	PSRLQ $36, X10
	MOVO 832(AX), X8
	MOVO X8, X9
	PSLLQ $28, X8
	PAND X0, X8
	POR X8, X10
	MOVO X10, 960(BX)
	PSRLQ $27, X9
	MOVO 848(AX), X11
	MOVO X11, X14
	PSLLQ $37, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 976(BX)
	PSRLQ $18, X14
	MOVO 864(AX), X12
	MOVO X12, X13
	PSLLQ $46, X12
	PAND X0, X12
	POR X12, X14
	MOVO X14, 992(BX)
	PSRLQ $9, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_56(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_56(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $72057594037927935, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $56, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $48, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $40, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $32, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $24, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $16, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $8, X15
	MOVO X15, 112(BX)
	MOVO 112(AX), X1
	MOVO X1, X2
	PAND X0, X1
	MOVO X1, 128(BX)
	PSRLQ $56, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 144(BX)
	PSRLQ $48, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 160(BX)
	PSRLQ $40, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 176(BX)
	PSRLQ $32, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 192(BX)
	PSRLQ $24, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 208(BX)
	PSRLQ $16, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 224(BX)
	PSRLQ $8, X13
	MOVO X13, 240(BX)
	MOVO 224(AX), X15
	MOVO X15, X1
	PAND X0, X15
	MOVO X15, 256(BX)
	PSRLQ $56, X1
	MOVO 240(AX), X4
	MOVO X4, X2
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X1
	MOVO X1, 272(BX)
	PSRLQ $48, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 288(BX)
	PSRLQ $40, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 304(BX)
	PSRLQ $32, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 320(BX)
	PSRLQ $24, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 336(BX)
	PSRLQ $16, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 352(BX)
	PSRLQ $8, X11
	MOVO X11, 368(BX)
	MOVO 336(AX), X13
	MOVO X13, X15
	PAND X0, X13
	MOVO X13, 384(BX)
	PSRLQ $56, X15
	MOVO 352(AX), X4
	MOVO X4, X1
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 400(BX)
	PSRLQ $48, X1
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X1
	MOVO X1, 416(BX)
	PSRLQ $40, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 432(BX)
	PSRLQ $32, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 448(BX)
	PSRLQ $24, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 464(BX)
	PSRLQ $16, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 480(BX)
	PSRLQ $8, X9
	MOVO X9, 496(BX)
	MOVO 448(AX), X11
	MOVO X11, X13
	PAND X0, X11
	MOVO X11, 512(BX)
	PSRLQ $56, X13
	MOVO 464(AX), X4
	MOVO X4, X15
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X13
	MOVO X13, 528(BX)
	PSRLQ $48, X15
	MOVO 480(AX), X6
	MOVO X6, X1
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X15
	MOVO X15, 544(BX)
	PSRLQ $40, X1
	MOVO 496(AX), X8
	MOVO X8, X2
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X1
	MOVO X1, 560(BX)
	PSRLQ $32, X2
	MOVO 512(AX), X10
	MOVO X10, X3
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X2
	MOVO X2, 576(BX)
	PSRLQ $24, X3
	MOVO 528(AX), X12
	MOVO X12, X5
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X3
	MOVO X3, 592(BX)
	PSRLQ $16, X5
	MOVO 544(AX), X14
	MOVO X14, X7
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X5
	MOVO X5, 608(BX)
	PSRLQ $8, X7
	MOVO X7, 624(BX)
	MOVO 560(AX), X9
	MOVO X9, X11
	PAND X0, X9
	MOVO X9, 640(BX)
	PSRLQ $56, X11
	MOVO 576(AX), X4
	MOVO X4, X13
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X11
	MOVO X11, 656(BX)
	PSRLQ $48, X13
	MOVO 592(AX), X6
	MOVO X6, X15
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X13
	MOVO X13, 672(BX)
	PSRLQ $40, X15
	MOVO 608(AX), X8
	MOVO X8, X1
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X15
	MOVO X15, 688(BX)
	PSRLQ $32, X1
	MOVO 624(AX), X10
	MOVO X10, X2
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X1
	MOVO X1, 704(BX)
	PSRLQ $24, X2
	MOVO 640(AX), X12
	MOVO X12, X3
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X2
	MOVO X2, 720(BX)
	PSRLQ $16, X3
	MOVO 656(AX), X14
	MOVO X14, X5
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X3
	MOVO X3, 736(BX)
	PSRLQ $8, X5
	MOVO X5, 752(BX)
	MOVO 672(AX), X7
	MOVO X7, X9
	PAND X0, X7
	MOVO X7, 768(BX)
	PSRLQ $56, X9
	MOVO 688(AX), X4
	MOVO X4, X11
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X9
	MOVO X9, 784(BX)
	PSRLQ $48, X11
	MOVO 704(AX), X6
	MOVO X6, X13
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X11
	MOVO X11, 800(BX)
	PSRLQ $40, X13
	MOVO 720(AX), X8
	MOVO X8, X15
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X13
	MOVO X13, 816(BX)
	PSRLQ $32, X15
	MOVO 736(AX), X10
	MOVO X10, X1
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X15
	MOVO X15, 832(BX)
	PSRLQ $24, X1
	MOVO 752(AX), X12
	MOVO X12, X2
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X1
	MOVO X1, 848(BX)
	PSRLQ $16, X2
	MOVO 768(AX), X14
	MOVO X14, X3
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 864(BX)
	PSRLQ $8, X3
	MOVO X3, 880(BX)
	MOVO 784(AX), X5
	MOVO X5, X7
	PAND X0, X5
	MOVO X5, 896(BX)
	PSRLQ $56, X7
	MOVO 800(AX), X4
	MOVO X4, X9
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X7
	MOVO X7, 912(BX)
	PSRLQ $48, X9
	MOVO 816(AX), X6
	MOVO X6, X11
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 928(BX)
	PSRLQ $40, X11
	MOVO 832(AX), X8
	MOVO X8, X13
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X11
	MOVO X11, 944(BX)
	PSRLQ $32, X13
	MOVO 848(AX), X10
	MOVO X10, X15
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X13
	MOVO X13, 960(BX)
	PSRLQ $24, X15
	MOVO 864(AX), X12
	MOVO X12, X1
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X15
	MOVO X15, 976(BX)
	PSRLQ $16, X1
	MOVO 880(AX), X14
	MOVO X14, X2
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X1
	MOVO X1, 992(BX)
	PSRLQ $8, X2
	MOVO X2, 1008(BX)
	RET

// func unpack64_57(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_57(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $144115188075855871, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $57, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $7, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $50, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $14, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $43, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $21, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $36, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $28, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $29, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $35, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $22, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $42, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $15, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $49, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $8, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $56, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	MOVO X3, X6
	PSRLQ $1, X3
	PAND X0, X3
	MOVO X3, 144(BX)
	PSRLQ $58, X6
	MOVO 144(AX), X5
	MOVO X5, X8
	PSLLQ $6, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 160(BX)
	PSRLQ $51, X8
	MOVO 160(AX), X7
	MOVO X7, X10
	PSLLQ $13, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 176(BX)
	PSRLQ $44, X10
	MOVO 176(AX), X9
	MOVO X9, X12
	PSLLQ $20, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 192(BX)
	PSRLQ $37, X12
	MOVO 192(AX), X11
	MOVO X11, X14
	PSLLQ $27, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 208(BX)
	PSRLQ $30, X14
	MOVO 208(AX), X13
	MOVO X13, X1
	PSLLQ $34, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 224(BX)
	PSRLQ $23, X1
	MOVO 224(AX), X15
	MOVO X15, X4
	PSLLQ $41, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 240(BX)
	PSRLQ $16, X4
	MOVO 240(AX), X2
	MOVO X2, X3
	PSLLQ $48, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 256(BX)
	PSRLQ $9, X3
	MOVO 256(AX), X5
	MOVO X5, X6
	PSLLQ $55, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 272(BX)
	MOVO X6, X7
	PSRLQ $2, X6
	PAND X0, X6
	MOVO X6, 288(BX)
	PSRLQ $59, X7
	MOVO 272(AX), X8
	MOVO X8, X9
	PSLLQ $5, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 304(BX)
	PSRLQ $52, X9
	MOVO 288(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 320(BX)
	PSRLQ $45, X11
	MOVO 304(AX), X12
	MOVO X12, X13
	PSLLQ $19, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 336(BX)
	PSRLQ $38, X13
	MOVO 320(AX), X14
	MOVO X14, X15
	PSLLQ $26, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 352(BX)
	PSRLQ $31, X15
	MOVO 336(AX), X1
	MOVO X1, X2
	PSLLQ $33, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 368(BX)
	PSRLQ $24, X2
	MOVO 352(AX), X4
	MOVO X4, X5
	PSLLQ $40, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 384(BX)
	PSRLQ $17, X5
	MOVO 368(AX), X3
	MOVO X3, X6
	PSLLQ $47, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 400(BX)
	PSRLQ $10, X6
	MOVO 384(AX), X8
	MOVO X8, X7
	PSLLQ $54, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 416(BX)
	MOVO X7, X10
	PSRLQ $3, X7
	PAND X0, X7
	MOVO X7, 432(BX)
	PSRLQ $60, X10
	MOVO 400(AX), X9
	MOVO X9, X12
	PSLLQ $4, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 448(BX)
	PSRLQ $53, X12
	MOVO 416(AX), X11
	MOVO X11, X14
	PSLLQ $11, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 464(BX)
	PSRLQ $46, X14
	MOVO 432(AX), X13
	MOVO X13, X1
	PSLLQ $18, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 480(BX)
	PSRLQ $39, X1
	MOVO 448(AX), X15
	MOVO X15, X4
	PSLLQ $25, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 496(BX)
	PSRLQ $32, X4
	MOVO 464(AX), X2
	MOVO X2, X3
	PSLLQ $32, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 512(BX)
	PSRLQ $25, X3
	MOVO 480(AX), X5
	MOVO X5, X8
	PSLLQ $39, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 528(BX)
	PSRLQ $18, X8
	MOVO 496(AX), X6
	MOVO X6, X7
	PSLLQ $46, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 544(BX)
	PSRLQ $11, X7
	MOVO 512(AX), X9
	MOVO X9, X10
	PSLLQ $53, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 560(BX)
	MOVO X10, X11
	PSRLQ $4, X10
	PAND X0, X10
	MOVO X10, 576(BX)
	PSRLQ $61, X11
	MOVO 528(AX), X12
	MOVO X12, X13
	PSLLQ $3, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 592(BX)
	PSRLQ $54, X13
	MOVO 544(AX), X14
	MOVO X14, X15
	PSLLQ $10, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 608(BX)
	PSRLQ $47, X15
	MOVO 560(AX), X1
	MOVO X1, X2
	PSLLQ $17, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 624(BX)
	PSRLQ $40, X2
	MOVO 576(AX), X4
	MOVO X4, X5
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 640(BX)
	PSRLQ $33, X5
	MOVO 592(AX), X3
	MOVO X3, X6
	PSLLQ $31, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 656(BX)
	PSRLQ $26, X6
	MOVO 608(AX), X8
	MOVO X8, X9
	PSLLQ $38, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 672(BX)
	PSRLQ $19, X9
	MOVO 624(AX), X7
	MOVO X7, X10
	PSLLQ $45, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 688(BX)
	PSRLQ $12, X10
	MOVO 640(AX), X12
	MOVO X12, X11
	PSLLQ $52, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 704(BX)
	MOVO X11, X14
	PSRLQ $5, X11
	PAND X0, X11
	MOVO X11, 720(BX)
	PSRLQ $62, X14
	MOVO 656(AX), X13
	MOVO X13, X1
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 736(BX)
	PSRLQ $55, X1
	MOVO 672(AX), X15
	MOVO X15, X4
	PSLLQ $9, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 752(BX)
	PSRLQ $48, X4
	MOVO 688(AX), X2
	MOVO X2, X3
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 768(BX)
	PSRLQ $41, X3
	MOVO 704(AX), X5
	MOVO X5, X8
	PSLLQ $23, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 784(BX)
	PSRLQ $34, X8
	MOVO 720(AX), X6
	MOVO X6, X7
	PSLLQ $30, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 800(BX)
	PSRLQ $27, X7
	MOVO 736(AX), X9
	MOVO X9, X12
	PSLLQ $37, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 816(BX)
	PSRLQ $20, X12
	MOVO 752(AX), X10
	MOVO X10, X11
	PSLLQ $44, X10
	PAND X0, X10
	POR X10, X12
	MOVO X12, 832(BX)
	PSRLQ $13, X11
	MOVO 768(AX), X13
	MOVO X13, X14
	PSLLQ $51, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 848(BX)
	MOVO X14, X15
	PSRLQ $6, X14
	PAND X0, X14
	MOVO X14, 864(BX)
	PSRLQ $63, X15
	MOVO 784(AX), X1
	MOVO X1, X2
	PSLLQ $1, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 880(BX)
	PSRLQ $56, X2
	MOVO 800(AX), X4
	MOVO X4, X5
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 896(BX)
	PSRLQ $49, X5
	MOVO 816(AX), X3
	MOVO X3, X6
	PSLLQ $15, X3
	PAND X0, X3
	POR X3, X5
	MOVO X5, 912(BX)
	PSRLQ $42, X6
	MOVO 832(AX), X8
	MOVO X8, X9
	PSLLQ $22, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 928(BX)
	PSRLQ $35, X9
	MOVO 848(AX), X7
	MOVO X7, X10
	PSLLQ $29, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 944(BX)
	PSRLQ $28, X10
	MOVO 864(AX), X12
	MOVO X12, X13
	PSLLQ $36, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 960(BX)
	PSRLQ $21, X13
	MOVO 880(AX), X11
	MOVO X11, X14
	PSLLQ $43, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 976(BX)
	PSRLQ $14, X14
	MOVO 896(AX), X1
	MOVO X1, X15
	PSLLQ $50, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 992(BX)
	PSRLQ $7, X15
	MOVO X15, 1008(BX)
	RET

// func unpack64_58(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_58(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $288230376151711743, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $58, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $6, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $52, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $46, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $18, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $40, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $24, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $34, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $30, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $28, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $36, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $22, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $42, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $16, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $48, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLQ $10, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $54, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	MOVO X5, X8
	PSRLQ $4, X5
	PAND X0, X5
	MOVO X5, 160(BX)
	PSRLQ $62, X8
	MOVO 160(AX), X7
	MOVO X7, X10
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 176(BX)
	PSRLQ $56, X10
	MOVO 176(AX), X9
	MOVO X9, X12
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 192(BX)
	PSRLQ $50, X12
	MOVO 192(AX), X11
	MOVO X11, X14
	PSLLQ $14, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 208(BX)
	PSRLQ $44, X14
	MOVO 208(AX), X13
	MOVO X13, X1
	PSLLQ $20, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 224(BX)
	PSRLQ $38, X1
	MOVO 224(AX), X15
	MOVO X15, X4
	PSLLQ $26, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 240(BX)
	PSRLQ $32, X4
	MOVO 240(AX), X2
	MOVO X2, X6
	PSLLQ $32, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 256(BX)
	PSRLQ $26, X6
	MOVO 256(AX), X3
	MOVO X3, X5
	PSLLQ $38, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 272(BX)
	PSRLQ $20, X5
	MOVO 272(AX), X7
	MOVO X7, X8
	PSLLQ $44, X7
	PAND X0, X7
	POR X7, X5
	MOVO X5, 288(BX)
	PSRLQ $14, X8
	MOVO 288(AX), X9
	MOVO X9, X10
	PSLLQ $50, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 304(BX)
	PSRLQ $8, X10
	MOVO 304(AX), X11
	MOVO X11, X12
	PSLLQ $56, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 320(BX)
	MOVO X12, X13
	PSRLQ $2, X12
	PAND X0, X12
	MOVO X12, 336(BX)
	PSRLQ $60, X13
	MOVO 320(AX), X14
	MOVO X14, X15
	PSLLQ $4, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 352(BX)
	PSRLQ $54, X15
	MOVO 336(AX), X1
	MOVO X1, X2
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 368(BX)
	PSRLQ $48, X2
	MOVO 352(AX), X4
	MOVO X4, X3
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 384(BX)
	PSRLQ $42, X3
	MOVO 368(AX), X6
	MOVO X6, X7
	PSLLQ $22, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 400(BX)
	PSRLQ $36, X7
	MOVO 384(AX), X5
	MOVO X5, X9
	PSLLQ $28, X5
	PAND X0, X5
	POR X5, X7
	MOVO X7, 416(BX)
	PSRLQ $30, X9
	MOVO 400(AX), X8
	MOVO X8, X11
	PSLLQ $34, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 432(BX)
	PSRLQ $24, X11
	MOVO 416(AX), X10
	MOVO X10, X12
	PSLLQ $40, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 448(BX)
	PSRLQ $18, X12
	MOVO 432(AX), X14
	MOVO X14, X13
	PSLLQ $46, X14
	PAND X0, X14
	POR X14, X12
	MOVO X12, 464(BX)
	PSRLQ $12, X13
	MOVO 448(AX), X1
	MOVO X1, X15
	PSLLQ $52, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 480(BX)
	PSRLQ $6, X15
	MOVO X15, 496(BX)
	MOVO 464(AX), X4
	MOVO X4, X2
	PAND X0, X4
	MOVO X4, 512(BX)
	PSRLQ $58, X2
	MOVO 480(AX), X6
	MOVO X6, X3
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 528(BX)
	PSRLQ $52, X3
	MOVO 496(AX), X5
	MOVO X5, X7
	PSLLQ $12, X5
	PAND X0, X5
	POR X5, X3
	MOVO X3, 544(BX)
	PSRLQ $46, X7
	MOVO 512(AX), X8
	MOVO X8, X9
	PSLLQ $18, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 560(BX)
	PSRLQ $40, X9
	MOVO 528(AX), X10
	MOVO X10, X11
	PSLLQ $24, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 576(BX)
	PSRLQ $34, X11
	MOVO 544(AX), X14
	MOVO X14, X12
	PSLLQ $30, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 592(BX)
	PSRLQ $28, X12
	MOVO 560(AX), X1
	MOVO X1, X13
	PSLLQ $36, X1
	PAND X0, X1
	POR X1, X12
	MOVO X12, 608(BX)
	PSRLQ $22, X13
	MOVO 576(AX), X15
	MOVO X15, X4
	PSLLQ $42, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 624(BX)
	PSRLQ $16, X4
	MOVO 592(AX), X6
	MOVO X6, X2
	PSLLQ $48, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 640(BX)
	PSRLQ $10, X2
	MOVO 608(AX), X5
	MOVO X5, X3
	PSLLQ $54, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 656(BX)
	MOVO X3, X8
	PSRLQ $4, X3
	PAND X0, X3
	MOVO X3, 672(BX)
	PSRLQ $62, X8
	MOVO 624(AX), X7
	MOVO X7, X10
	PSLLQ $2, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 688(BX)
	PSRLQ $56, X10
	MOVO 640(AX), X9
	MOVO X9, X14
	PSLLQ $8, X9
	PAND X0, X9
	POR X9, X10
	MOVO X10, 704(BX)
	PSRLQ $50, X14
	MOVO 656(AX), X11
	MOVO X11, X1
	PSLLQ $14, X11
	PAND X0, X11
	POR X11, X14
	MOVO X14, 720(BX)
	PSRLQ $44, X1
	MOVO 672(AX), X12
	MOVO X12, X15
	PSLLQ $20, X12
	PAND X0, X12
	POR X12, X1
	MOVO X1, 736(BX)
	PSRLQ $38, X15
	MOVO 688(AX), X13
	MOVO X13, X6
	PSLLQ $26, X13
	PAND X0, X13
	POR X13, X15
	MOVO X15, 752(BX)
	PSRLQ $32, X6
	MOVO 704(AX), X4
	MOVO X4, X5
	PSLLQ $32, X4
	PAND X0, X4
	POR X4, X6
	MOVO X6, 768(BX)
	PSRLQ $26, X5
	MOVO 720(AX), X2
	MOVO X2, X3
	PSLLQ $38, X2
	PAND X0, X2
	POR X2, X5
	MOVO X5, 784(BX)
	PSRLQ $20, X3
	MOVO 736(AX), X7
	MOVO X7, X8
	PSLLQ $44, X7
	PAND X0, X7
	POR X7, X3
	MOVO X3, 800(BX)
	PSRLQ $14, X8
	MOVO 752(AX), X9
	MOVO X9, X10
	PSLLQ $50, X9
	PAND X0, X9
	POR X9, X8
	MOVO X8, 816(BX)
	PSRLQ $8, X10
	MOVO 768(AX), X11
	MOVO X11, X14
	PSLLQ $56, X11
	PAND X0, X11
	POR X11, X10
	MOVO X10, 832(BX)
	MOVO X14, X12
	PSRLQ $2, X14
	PAND X0, X14
	MOVO X14, 848(BX)
	PSRLQ $60, X12
	MOVO 784(AX), X1
	MOVO X1, X13
	PSLLQ $4, X1
	PAND X0, X1
	POR X1, X12
	MOVO X12, 864(BX)
	PSRLQ $54, X13
	MOVO 800(AX), X15
	MOVO X15, X4
	PSLLQ $10, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 880(BX)
	PSRLQ $48, X4
	MOVO 816(AX), X6
	MOVO X6, X2
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 896(BX)
	PSRLQ $42, X2
	MOVO 832(AX), X5
	MOVO X5, X7
	PSLLQ $22, X5
	PAND X0, X5
	POR X5, X2
	MOVO X2, 912(BX)
	PSRLQ $36, X7
	MOVO 848(AX), X3
	MOVO X3, X9
	PSLLQ $28, X3
	PAND X0, X3
	POR X3, X7
	MOVO X7, 928(BX)
	PSRLQ $30, X9
	MOVO 864(AX), X8
	MOVO X8, X11
	PSLLQ $34, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 944(BX)
	PSRLQ $24, X11
	MOVO 880(AX), X10
	MOVO X10, X14
	PSLLQ $40, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 960(BX)
	PSRLQ $18, X14
	MOVO 896(AX), X1
	MOVO X1, X12
	PSLLQ $46, X1
	PAND X0, X1
	POR X1, X14
	MOVO X14, 976(BX)
	PSRLQ $12, X12
	MOVO 912(AX), X15
	MOVO X15, X13
	PSLLQ $52, X15
	PAND X0, X15
	POR X15, X12
	MOVO X12, 992(BX)
	PSRLQ $6, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_59(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_59(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $576460752303423487, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $59, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $5, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $54, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $10, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $49, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $15, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $44, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $20, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $39, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $25, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $34, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $30, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $29, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $35, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $24, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $40, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLQ $19, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $45, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLQ $14, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLQ $50, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLQ $9, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $55, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	MOVO X9, X12
	PSRLQ $4, X9
	PAND X0, X9
	MOVO X9, 192(BX)
	PSRLQ $63, X12
	MOVO 192(AX), X11
	MOVO X11, X14
	PSLLQ $1, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 208(BX)
	PSRLQ $58, X14
	MOVO 208(AX), X13
	MOVO X13, X1
	PSLLQ $6, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 224(BX)
	PSRLQ $53, X1
	MOVO 224(AX), X15
	MOVO X15, X4
	PSLLQ $11, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 240(BX)
	PSRLQ $48, X4
	MOVO 240(AX), X2
	MOVO X2, X6
	PSLLQ $16, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 256(BX)
	PSRLQ $43, X6
	MOVO 256(AX), X3
	MOVO X3, X8
	PSLLQ $21, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 272(BX)
	PSRLQ $38, X8
	MOVO 272(AX), X5
	MOVO X5, X10
	PSLLQ $26, X5
	PAND X0, X5
	POR X5, X8
	MOVO X8, 288(BX)
	PSRLQ $33, X10
	MOVO 288(AX), X7
	MOVO X7, X9
	PSLLQ $31, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 304(BX)
	PSRLQ $28, X9
	MOVO 304(AX), X11
	MOVO X11, X12
	PSLLQ $36, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 320(BX)
	PSRLQ $23, X12
	MOVO 320(AX), X13
	MOVO X13, X14
	PSLLQ $41, X13
	PAND X0, X13
	POR X13, X12
	MOVO X12, 336(BX)
	PSRLQ $18, X14
	MOVO 336(AX), X15
	MOVO X15, X1
	PSLLQ $46, X15
	PAND X0, X15
	POR X15, X14
	MOVO X14, 352(BX)
	PSRLQ $13, X1
	MOVO 352(AX), X2
	MOVO X2, X4
	PSLLQ $51, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 368(BX)
	PSRLQ $8, X4
	MOVO 368(AX), X3
	MOVO X3, X6
	PSLLQ $56, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 384(BX)
	MOVO X6, X5
	PSRLQ $3, X6
	PAND X0, X6
	MOVO X6, 400(BX)
	PSRLQ $62, X5
	MOVO 384(AX), X8
	MOVO X8, X7
	PSLLQ $2, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 416(BX)
	PSRLQ $57, X7
	MOVO 400(AX), X10
	MOVO X10, X11
	PSLLQ $7, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 432(BX)
	PSRLQ $52, X11
	MOVO 416(AX), X9
	MOVO X9, X13
	PSLLQ $12, X9
	PAND X0, X9
	POR X9, X11
	MOVO X11, 448(BX)
	PSRLQ $47, X13
	MOVO 432(AX), X12
	MOVO X12, X15
	PSLLQ $17, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 464(BX)
	PSRLQ $42, X15
	MOVO 448(AX), X14
	MOVO X14, X2
	PSLLQ $22, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 480(BX)
	PSRLQ $37, X2
	MOVO 464(AX), X1
	MOVO X1, X3
	PSLLQ $27, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 496(BX)
	PSRLQ $32, X3
	MOVO 480(AX), X4
	MOVO X4, X6
	PSLLQ $32, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 512(BX)
	PSRLQ $27, X6
	MOVO 496(AX), X8
	MOVO X8, X5
	PSLLQ $37, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 528(BX)
	PSRLQ $22, X5
	MOVO 512(AX), X10
	MOVO X10, X7
	PSLLQ $42, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 544(BX)
	PSRLQ $17, X7
	MOVO 528(AX), X9
	MOVO X9, X11
	PSLLQ $47, X9
	PAND X0, X9
	POR X9, X7
	MOVO X7, 560(BX)
	PSRLQ $12, X11
	MOVO 544(AX), X12
	MOVO X12, X13
	PSLLQ $52, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 576(BX)
	PSRLQ $7, X13
	MOVO 560(AX), X14
	MOVO X14, X15
	PSLLQ $57, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 592(BX)
	MOVO X15, X1
	PSRLQ $2, X15
	PAND X0, X15
	MOVO X15, 608(BX)
	PSRLQ $61, X1
	MOVO 576(AX), X2
	MOVO X2, X4
	PSLLQ $3, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 624(BX)
	PSRLQ $56, X4
	MOVO 592(AX), X3
	MOVO X3, X8
	PSLLQ $8, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 640(BX)
	PSRLQ $51, X8
	MOVO 608(AX), X6
	MOVO X6, X10
	PSLLQ $13, X6
	PAND X0, X6
	POR X6, X8
	MOVO X8, 656(BX)
	PSRLQ $46, X10
	MOVO 624(AX), X5
	MOVO X5, X9
	PSLLQ $18, X5
	PAND X0, X5
	POR X5, X10
	MOVO X10, 672(BX)
	PSRLQ $41, X9
	MOVO 640(AX), X7
	MOVO X7, X12
	PSLLQ $23, X7
	PAND X0, X7
	POR X7, X9
	MOVO X9, 688(BX)
	PSRLQ $36, X12
	MOVO 656(AX), X11
	MOVO X11, X14
	PSLLQ $28, X11
	PAND X0, X11
	POR X11, X12
	MOVO X12, 704(BX)
	PSRLQ $31, X14
	MOVO 672(AX), X13
	MOVO X13, X15
	PSLLQ $33, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 720(BX)
	PSRLQ $26, X15
	MOVO 688(AX), X2
	MOVO X2, X1
	PSLLQ $38, X2
	PAND X0, X2
	POR X2, X15
	MOVO X15, 736(BX)
	PSRLQ $21, X1
	MOVO 704(AX), X3
	MOVO X3, X4
	PSLLQ $43, X3
	PAND X0, X3
	POR X3, X1
	MOVO X1, 752(BX)
	PSRLQ $16, X4
	MOVO 720(AX), X6
	MOVO X6, X8
	PSLLQ $48, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 768(BX)
	PSRLQ $11, X8
	MOVO 736(AX), X5
	MOVO X5, X10
	PSLLQ $53, X5
	PAND X0, X5
	POR X5, X8
	MOVO X8, 784(BX)
	PSRLQ $6, X10
	MOVO 752(AX), X7
	MOVO X7, X9
	PSLLQ $58, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 800(BX)
	MOVO X9, X11
	PSRLQ $1, X9
	PAND X0, X9
	MOVO X9, 816(BX)
	PSRLQ $60, X11
	MOVO 768(AX), X12
	MOVO X12, X13
	PSLLQ $4, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 832(BX)
	PSRLQ $55, X13
	MOVO 784(AX), X14
	MOVO X14, X2
	PSLLQ $9, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 848(BX)
	PSRLQ $50, X2
	MOVO 800(AX), X15
	MOVO X15, X3
	PSLLQ $14, X15
	PAND X0, X15
	POR X15, X2
	MOVO X2, 864(BX)
	PSRLQ $45, X3
	MOVO 816(AX), X1
	MOVO X1, X6
	PSLLQ $19, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 880(BX)
	PSRLQ $40, X6
	MOVO 832(AX), X4
	MOVO X4, X5
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X6
	MOVO X6, 896(BX)
	PSRLQ $35, X5
	MOVO 848(AX), X8
	MOVO X8, X7
	PSLLQ $29, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 912(BX)
	PSRLQ $30, X7
	MOVO 864(AX), X10
	MOVO X10, X9
	PSLLQ $34, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 928(BX)
	PSRLQ $25, X9
	MOVO 880(AX), X12
	MOVO X12, X11
	PSLLQ $39, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 944(BX)
	PSRLQ $20, X11
	MOVO 896(AX), X14
	MOVO X14, X13
	PSLLQ $44, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 960(BX)
	PSRLQ $15, X13
	MOVO 912(AX), X15
	MOVO X15, X2
	PSLLQ $49, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 976(BX)
	PSRLQ $10, X2
	MOVO 928(AX), X1
	MOVO X1, X3
	PSLLQ $54, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 992(BX)
	PSRLQ $5, X3
	MOVO X3, 1008(BX)
	RET

// func unpack64_60(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_60(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $1152921504606846975, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $60, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $4, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $56, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $8, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $52, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $12, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $48, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $44, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $20, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $40, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $24, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $36, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $28, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $32, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $32, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLQ $28, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $36, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLQ $24, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLQ $40, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLQ $20, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $44, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	PSRLQ $16, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLQ $48, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 192(BX)
	PSRLQ $12, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLQ $52, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 208(BX)
	PSRLQ $8, X13
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLQ $56, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 224(BX)
	PSRLQ $4, X15
	MOVO X15, 240(BX)
	MOVO 240(AX), X4
	MOVO X4, X2
	PAND X0, X4
	MOVO X4, 256(BX)
	PSRLQ $60, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 272(BX)
	PSRLQ $56, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLQ $8, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 288(BX)
	PSRLQ $52, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 304(BX)
	PSRLQ $48, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLQ $16, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 320(BX)
	PSRLQ $44, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLQ $20, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 336(BX)
	PSRLQ $40, X11
	MOVO 336(AX), X1
	MOVO X1, X13
	PSLLQ $24, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 352(BX)
	PSRLQ $36, X13
	MOVO 352(AX), X15
	MOVO X15, X4
	PSLLQ $28, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 368(BX)
	PSRLQ $32, X4
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLQ $32, X6
	PAND X0, X6
	POR X6, X4
	MOVO X4, 384(BX)
	PSRLQ $28, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLQ $36, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 400(BX)
	PSRLQ $24, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLQ $40, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 416(BX)
	PSRLQ $20, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLQ $44, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 432(BX)
	PSRLQ $16, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 448(BX)
	PSRLQ $12, X9
	MOVO 448(AX), X1
	MOVO X1, X11
	PSLLQ $52, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 464(BX)
	PSRLQ $8, X11
	MOVO 464(AX), X15
	MOVO X15, X13
	PSLLQ $56, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 480(BX)
	PSRLQ $4, X13
	MOVO X13, 496(BX)
	MOVO 480(AX), X6
	MOVO X6, X4
	PAND X0, X6
	MOVO X6, 512(BX)
	PSRLQ $60, X4
	MOVO 496(AX), X8
	MOVO X8, X2
	PSLLQ $4, X8
	PAND X0, X8
	POR X8, X4
	MOVO X4, 528(BX)
	PSRLQ $56, X2
	MOVO 512(AX), X10
	MOVO X10, X3
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X2
	MOVO X2, 544(BX)
	PSRLQ $52, X3
	MOVO 528(AX), X12
	MOVO X12, X5
	PSLLQ $12, X12
	PAND X0, X12
	POR X12, X3
	MOVO X3, 560(BX)
	PSRLQ $48, X5
	MOVO 544(AX), X14
	MOVO X14, X7
	PSLLQ $16, X14
	PAND X0, X14
	POR X14, X5
	MOVO X5, 576(BX)
	PSRLQ $44, X7
	MOVO 560(AX), X1
	MOVO X1, X9
	PSLLQ $20, X1
	PAND X0, X1
	POR X1, X7
	MOVO X7, 592(BX)
	PSRLQ $40, X9
	MOVO 576(AX), X15
	MOVO X15, X11
	PSLLQ $24, X15
	PAND X0, X15
	POR X15, X9
	MOVO X9, 608(BX)
	PSRLQ $36, X11
	MOVO 592(AX), X13
	MOVO X13, X6
	PSLLQ $28, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 624(BX)
	PSRLQ $32, X6
	MOVO 608(AX), X8
	MOVO X8, X4
	PSLLQ $32, X8
	PAND X0, X8
	POR X8, X6
	MOVO X6, 640(BX)
	PSRLQ $28, X4
	MOVO 624(AX), X10
	MOVO X10, X2
	PSLLQ $36, X10
	PAND X0, X10
	POR X10, X4
	MOVO X4, 656(BX)
	PSRLQ $24, X2
	MOVO 640(AX), X12
	MOVO X12, X3
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X2
	MOVO X2, 672(BX)
	PSRLQ $20, X3
	MOVO 656(AX), X14
	MOVO X14, X5
	PSLLQ $44, X14
	PAND X0, X14
	POR X14, X3
	MOVO X3, 688(BX)
	PSRLQ $16, X5
	MOVO 672(AX), X1
	MOVO X1, X7
	PSLLQ $48, X1
	PAND X0, X1
	POR X1, X5
	MOVO X5, 704(BX)
	PSRLQ $12, X7
	MOVO 688(AX), X15
	MOVO X15, X9
	PSLLQ $52, X15
	PAND X0, X15
	POR X15, X7
	MOVO X7, 720(BX)
	PSRLQ $8, X9
	MOVO 704(AX), X13
	MOVO X13, X11
	PSLLQ $56, X13
	PAND X0, X13
	POR X13, X9
	MOVO X9, 736(BX)
	PSRLQ $4, X11
	MOVO X11, 752(BX)
	MOVO 720(AX), X8
	MOVO X8, X6
	PAND X0, X8
	MOVO X8, 768(BX)
	PSRLQ $60, X6
	MOVO 736(AX), X10
	MOVO X10, X4
	PSLLQ $4, X10
	PAND X0, X10
	POR X10, X6
	MOVO X6, 784(BX)
	PSRLQ $56, X4
	MOVO 752(AX), X12
	MOVO X12, X2
	PSLLQ $8, X12
	PAND X0, X12
	POR X12, X4
	MOVO X4, 800(BX)
	PSRLQ $52, X2
	MOVO 768(AX), X14
	MOVO X14, X3
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 816(BX)
	PSRLQ $48, X3
	MOVO 784(AX), X1
	MOVO X1, X5
	PSLLQ $16, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 832(BX)
	PSRLQ $44, X5
	MOVO 800(AX), X15
	MOVO X15, X7
	PSLLQ $20, X15
	PAND X0, X15
	POR X15, X5
	MOVO X5, 848(BX)
	PSRLQ $40, X7
	MOVO 816(AX), X13
	MOVO X13, X9
	PSLLQ $24, X13
	PAND X0, X13
	POR X13, X7
	MOVO X7, 864(BX)
	PSRLQ $36, X9
	MOVO 832(AX), X11
	MOVO X11, X8
	PSLLQ $28, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 880(BX)
	PSRLQ $32, X8
	MOVO 848(AX), X10
	MOVO X10, X6
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 896(BX)
	PSRLQ $28, X6
	MOVO 864(AX), X12
	MOVO X12, X4
	PSLLQ $36, X12
	PAND X0, X12
	POR X12, X6
	MOVO X6, 912(BX)
	PSRLQ $24, X4
	MOVO 880(AX), X14
	MOVO X14, X2
	PSLLQ $40, X14
	PAND X0, X14
	POR X14, X4
	MOVO X4, 928(BX)
	PSRLQ $20, X2
	MOVO 896(AX), X1
	MOVO X1, X3
	PSLLQ $44, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 944(BX)
	PSRLQ $16, X3
	MOVO 912(AX), X15
	MOVO X15, X5
	PSLLQ $48, X15
	PAND X0, X15
	POR X15, X3
	MOVO X3, 960(BX)
	PSRLQ $12, X5
	MOVO 928(AX), X13
	MOVO X13, X7
	PSLLQ $52, X13
	PAND X0, X13
	POR X13, X5
	MOVO X5, 976(BX)
	PSRLQ $8, X7
	MOVO 944(AX), X11
	MOVO X11, X9
	PSLLQ $56, X11
	PAND X0, X11
	POR X11, X7
	MOVO X7, 992(BX)
	PSRLQ $4, X9
	MOVO X9, 1008(BX)
	RET

// func unpack64_61(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_61(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $2305843009213693951, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $61, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $3, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $58, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $6, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $55, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $9, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $52, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $49, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $15, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $46, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $18, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $43, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $21, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $40, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLQ $37, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $27, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLQ $34, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLQ $30, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLQ $31, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $33, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	PSRLQ $28, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLQ $36, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 192(BX)
	PSRLQ $25, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLQ $39, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 208(BX)
	PSRLQ $22, X13
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLQ $42, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 224(BX)
	PSRLQ $19, X15
	MOVO 240(AX), X4
	MOVO X4, X2
	PSLLQ $45, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 240(BX)
	PSRLQ $16, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLQ $48, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 256(BX)
	PSRLQ $13, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLQ $51, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 272(BX)
	PSRLQ $10, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLQ $54, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 288(BX)
	PSRLQ $7, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLQ $57, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 304(BX)
	PSRLQ $4, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLQ $60, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 320(BX)
	MOVO X11, X1
	PSRLQ $1, X11
	PAND X0, X11
	MOVO X11, 336(BX)
	PSRLQ $62, X1
	MOVO 336(AX), X13
	MOVO X13, X4
	PSLLQ $2, X13
	PAND X0, X13
	POR X13, X1
	MOVO X1, 352(BX)
	PSRLQ $59, X4
	MOVO 352(AX), X15
	MOVO X15, X6
	PSLLQ $5, X15
	PAND X0, X15
	POR X15, X4
	MOVO X4, 368(BX)
	PSRLQ $56, X6
	MOVO 368(AX), X2
	MOVO X2, X8
	PSLLQ $8, X2
	PAND X0, X2
	POR X2, X6
	MOVO X6, 384(BX)
	PSRLQ $53, X8
	MOVO 384(AX), X3
	MOVO X3, X10
	PSLLQ $11, X3
	PAND X0, X3
	POR X3, X8
	MOVO X8, 400(BX)
	PSRLQ $50, X10
	MOVO 400(AX), X5
	MOVO X5, X12
	PSLLQ $14, X5
	PAND X0, X5
	POR X5, X10
	MOVO X10, 416(BX)
	PSRLQ $47, X12
	MOVO 416(AX), X7
	MOVO X7, X14
	PSLLQ $17, X7
	PAND X0, X7
	POR X7, X12
	MOVO X12, 432(BX)
	PSRLQ $44, X14
	MOVO 432(AX), X9
	MOVO X9, X11
	PSLLQ $20, X9
	PAND X0, X9
	POR X9, X14
	MOVO X14, 448(BX)
	PSRLQ $41, X11
	MOVO 448(AX), X13
	MOVO X13, X1
	PSLLQ $23, X13
	PAND X0, X13
	POR X13, X11
	MOVO X11, 464(BX)
	PSRLQ $38, X1
	MOVO 464(AX), X15
	MOVO X15, X4
	PSLLQ $26, X15
	PAND X0, X15
	POR X15, X1
	MOVO X1, 480(BX)
	PSRLQ $35, X4
	MOVO 480(AX), X2
	MOVO X2, X6
	PSLLQ $29, X2
	PAND X0, X2
	POR X2, X4
	MOVO X4, 496(BX)
	PSRLQ $32, X6
	MOVO 496(AX), X3
	MOVO X3, X8
	PSLLQ $32, X3
	PAND X0, X3
	POR X3, X6
	MOVO X6, 512(BX)
	PSRLQ $29, X8
	MOVO 512(AX), X5
	MOVO X5, X10
	PSLLQ $35, X5
	PAND X0, X5
	POR X5, X8
	MOVO X8, 528(BX)
	PSRLQ $26, X10
	MOVO 528(AX), X7
	MOVO X7, X12
	PSLLQ $38, X7
	PAND X0, X7
	POR X7, X10
	MOVO X10, 544(BX)
	PSRLQ $23, X12
	MOVO 544(AX), X9
	MOVO X9, X14
	PSLLQ $41, X9
	PAND X0, X9
	POR X9, X12
	MOVO X12, 560(BX)
	PSRLQ $20, X14
	MOVO 560(AX), X13
	MOVO X13, X11
	PSLLQ $44, X13
	PAND X0, X13
	POR X13, X14
	MOVO X14, 576(BX)
	PSRLQ $17, X11
	MOVO 576(AX), X15
	MOVO X15, X1
	PSLLQ $47, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 592(BX)
	PSRLQ $14, X1
	MOVO 592(AX), X2
	MOVO X2, X4
	PSLLQ $50, X2
	PAND X0, X2
	POR X2, X1
	MOVO X1, 608(BX)
	PSRLQ $11, X4
	MOVO 608(AX), X3
	MOVO X3, X6
	PSLLQ $53, X3
	PAND X0, X3
	POR X3, X4
	MOVO X4, 624(BX)
	PSRLQ $8, X6
	MOVO 624(AX), X5
	MOVO X5, X8
	PSLLQ $56, X5
	PAND X0, X5
	POR X5, X6
	MOVO X6, 640(BX)
	PSRLQ $5, X8
	MOVO 640(AX), X7
	MOVO X7, X10
	PSLLQ $59, X7
	PAND X0, X7
	POR X7, X8
	MOVO X8, 656(BX)
	MOVO X10, X9
	PSRLQ $2, X10
	PAND X0, X10
	MOVO X10, 672(BX)
	PSRLQ $63, X9
	MOVO 656(AX), X12
	MOVO X12, X13
	PSLLQ $1, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 688(BX)
	PSRLQ $60, X13
	MOVO 672(AX), X14
	MOVO X14, X15
	PSLLQ $4, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 704(BX)
	PSRLQ $57, X15
	MOVO 688(AX), X11
	MOVO X11, X2
	PSLLQ $7, X11
	PAND X0, X11
	POR X11, X15
	MOVO X15, 720(BX)
	PSRLQ $54, X2
	MOVO 704(AX), X1
	MOVO X1, X3
	PSLLQ $10, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 736(BX)
	PSRLQ $51, X3
	MOVO 720(AX), X4
	MOVO X4, X5
	PSLLQ $13, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 752(BX)
	PSRLQ $48, X5
	MOVO 736(AX), X6
	MOVO X6, X7
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 768(BX)
	PSRLQ $45, X7
	MOVO 752(AX), X8
	MOVO X8, X10
	PSLLQ $19, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 784(BX)
	PSRLQ $42, X10
	MOVO 768(AX), X12
	MOVO X12, X9
	PSLLQ $22, X12
	PAND X0, X12
	POR X12, X10
	MOVO X10, 800(BX)
	PSRLQ $39, X9
	MOVO 784(AX), X14
	MOVO X14, X13
	PSLLQ $25, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 816(BX)
	PSRLQ $36, X13
	MOVO 800(AX), X11
	MOVO X11, X15
	PSLLQ $28, X11
	PAND X0, X11
	POR X11, X13
	MOVO X13, 832(BX)
	PSRLQ $33, X15
	MOVO 816(AX), X1
	MOVO X1, X2
	PSLLQ $31, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 848(BX)
	PSRLQ $30, X2
	MOVO 832(AX), X4
	MOVO X4, X3
	PSLLQ $34, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 864(BX)
	PSRLQ $27, X3
	MOVO 848(AX), X6
	MOVO X6, X5
	PSLLQ $37, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 880(BX)
	PSRLQ $24, X5
	MOVO 864(AX), X8
	MOVO X8, X7
	PSLLQ $40, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 896(BX)
	PSRLQ $21, X7
	MOVO 880(AX), X12
	MOVO X12, X10
	PSLLQ $43, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 912(BX)
	PSRLQ $18, X10
	MOVO 896(AX), X14
	MOVO X14, X9
	PSLLQ $46, X14
	PAND X0, X14
	POR X14, X10
	MOVO X10, 928(BX)
	PSRLQ $15, X9
	MOVO 912(AX), X11
	MOVO X11, X13
	PSLLQ $49, X11
	PAND X0, X11
	POR X11, X9
	MOVO X9, 944(BX)
	PSRLQ $12, X13
	MOVO 928(AX), X1
	MOVO X1, X15
	PSLLQ $52, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 960(BX)
	PSRLQ $9, X15
	MOVO 944(AX), X4
	MOVO X4, X2
	PSLLQ $55, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 976(BX)
	PSRLQ $6, X2
	MOVO 960(AX), X6
	MOVO X6, X3
	PSLLQ $58, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 992(BX)
	PSRLQ $3, X3
	MOVO X3, 1008(BX)
	RET

// func unpack64_62(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_62(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $4611686018427387903, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $62, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $2, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $60, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $58, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $6, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $56, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $54, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $10, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $52, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $50, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $14, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $48, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $16, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLQ $46, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $18, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLQ $44, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLQ $20, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLQ $42, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $22, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	PSRLQ $40, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLQ $24, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 192(BX)
	PSRLQ $38, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLQ $26, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 208(BX)
	PSRLQ $36, X13
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLQ $28, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 224(BX)
	PSRLQ $34, X15
	MOVO 240(AX), X4
	MOVO X4, X2
	PSLLQ $30, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 240(BX)
	PSRLQ $32, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLQ $32, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 256(BX)
	PSRLQ $30, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLQ $34, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 272(BX)
	PSRLQ $28, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLQ $36, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 288(BX)
	PSRLQ $26, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLQ $38, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 304(BX)
	PSRLQ $24, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLQ $40, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 320(BX)
	PSRLQ $22, X11
	MOVO 336(AX), X1
	MOVO X1, X13
	PSLLQ $42, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 336(BX)
	PSRLQ $20, X13
	MOVO 352(AX), X4
	MOVO X4, X15
	PSLLQ $44, X4
	PAND X0, X4
	POR X4, X13
	MOVO X13, 352(BX)
	PSRLQ $18, X15
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLQ $46, X6
	PAND X0, X6
	POR X6, X15
	MOVO X15, 368(BX)
	PSRLQ $16, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLQ $48, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 384(BX)
	PSRLQ $14, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLQ $50, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 400(BX)
	PSRLQ $12, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLQ $52, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 416(BX)
	PSRLQ $10, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLQ $54, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 432(BX)
	PSRLQ $8, X9
	MOVO 448(AX), X1
	MOVO X1, X11
	PSLLQ $56, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 448(BX)
	PSRLQ $6, X11
	MOVO 464(AX), X4
	MOVO X4, X13
	PSLLQ $58, X4
	PAND X0, X4
	POR X4, X11
	MOVO X11, 464(BX)
	PSRLQ $4, X13
	MOVO 480(AX), X6
	MOVO X6, X15
	PSLLQ $60, X6
	PAND X0, X6
	POR X6, X13
	MOVO X13, 480(BX)
	PSRLQ $2, X15
	MOVO X15, 496(BX)
	MOVO 496(AX), X8
	MOVO X8, X2
	PAND X0, X8
	MOVO X8, 512(BX)
	PSRLQ $62, X2
	MOVO 512(AX), X10
	MOVO X10, X3
	PSLLQ $2, X10
	PAND X0, X10
	POR X10, X2
	MOVO X2, 528(BX)
	PSRLQ $60, X3
	MOVO 528(AX), X12
	MOVO X12, X5
	PSLLQ $4, X12
	PAND X0, X12
	POR X12, X3
	MOVO X3, 544(BX)
	PSRLQ $58, X5
	MOVO 544(AX), X14
	MOVO X14, X7
	PSLLQ $6, X14
	PAND X0, X14
	POR X14, X5
	MOVO X5, 560(BX)
	PSRLQ $56, X7
	MOVO 560(AX), X1
	MOVO X1, X9
	PSLLQ $8, X1
	PAND X0, X1
	POR X1, X7
	MOVO X7, 576(BX)
	PSRLQ $54, X9
	MOVO 576(AX), X4
	MOVO X4, X11
	PSLLQ $10, X4
	PAND X0, X4
	POR X4, X9
	MOVO X9, 592(BX)
	PSRLQ $52, X11
	MOVO 592(AX), X6
	MOVO X6, X13
	PSLLQ $12, X6
	PAND X0, X6
	POR X6, X11
	MOVO X11, 608(BX)
	PSRLQ $50, X13
	MOVO 608(AX), X15
	MOVO X15, X8
	PSLLQ $14, X15
	PAND X0, X15
	POR X15, X13
	MOVO X13, 624(BX)
	PSRLQ $48, X8
	MOVO 624(AX), X10
	MOVO X10, X2
	PSLLQ $16, X10
	PAND X0, X10
	POR X10, X8
	MOVO X8, 640(BX)
	PSRLQ $46, X2
	MOVO 640(AX), X12
	MOVO X12, X3
	PSLLQ $18, X12
	PAND X0, X12
	POR X12, X2
	MOVO X2, 656(BX)
	PSRLQ $44, X3
	MOVO 656(AX), X14
	MOVO X14, X5
	PSLLQ $20, X14
	PAND X0, X14
	POR X14, X3
	MOVO X3, 672(BX)
	PSRLQ $42, X5
	MOVO 672(AX), X1
	MOVO X1, X7
	PSLLQ $22, X1
	PAND X0, X1
	POR X1, X5
	MOVO X5, 688(BX)
	PSRLQ $40, X7
	MOVO 688(AX), X4
	MOVO X4, X9
	PSLLQ $24, X4
	PAND X0, X4
	POR X4, X7
	MOVO X7, 704(BX)
	PSRLQ $38, X9
	MOVO 704(AX), X6
	MOVO X6, X11
	PSLLQ $26, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 720(BX)
	PSRLQ $36, X11
	MOVO 720(AX), X15
	MOVO X15, X13
	PSLLQ $28, X15
	PAND X0, X15
	POR X15, X11
	MOVO X11, 736(BX)
	PSRLQ $34, X13
	MOVO 736(AX), X10
	MOVO X10, X8
	PSLLQ $30, X10
	PAND X0, X10
	POR X10, X13
	MOVO X13, 752(BX)
	PSRLQ $32, X8
	MOVO 752(AX), X12
	MOVO X12, X2
	PSLLQ $32, X12
	PAND X0, X12
	POR X12, X8
	MOVO X8, 768(BX)
	PSRLQ $30, X2
	MOVO 768(AX), X14
	MOVO X14, X3
	PSLLQ $34, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 784(BX)
	PSRLQ $28, X3
	MOVO 784(AX), X1
	MOVO X1, X5
	PSLLQ $36, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 800(BX)
	PSRLQ $26, X5
	MOVO 800(AX), X4
	MOVO X4, X7
	PSLLQ $38, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 816(BX)
	PSRLQ $24, X7
	MOVO 816(AX), X6
	MOVO X6, X9
	PSLLQ $40, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 832(BX)
	PSRLQ $22, X9
	MOVO 832(AX), X15
	MOVO X15, X11
	PSLLQ $42, X15
	PAND X0, X15
	POR X15, X9
	MOVO X9, 848(BX)
	PSRLQ $20, X11
	MOVO 848(AX), X10
	MOVO X10, X13
	PSLLQ $44, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 864(BX)
	PSRLQ $18, X13
	MOVO 864(AX), X12
	MOVO X12, X8
	PSLLQ $46, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 880(BX)
	PSRLQ $16, X8
	MOVO 880(AX), X14
	MOVO X14, X2
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X8
	MOVO X8, 896(BX)
	PSRLQ $14, X2
	MOVO 896(AX), X1
	MOVO X1, X3
	PSLLQ $50, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 912(BX)
	PSRLQ $12, X3
	MOVO 912(AX), X4
	MOVO X4, X5
	PSLLQ $52, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 928(BX)
	PSRLQ $10, X5
	MOVO 928(AX), X6
	MOVO X6, X7
	PSLLQ $54, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 944(BX)
	PSRLQ $8, X7
	MOVO 944(AX), X15
	MOVO X15, X9
	PSLLQ $56, X15
	PAND X0, X15
	POR X15, X7
	MOVO X7, 960(BX)
	PSRLQ $6, X9
	MOVO 960(AX), X10
	MOVO X10, X11
	PSLLQ $58, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 976(BX)
	PSRLQ $4, X11
	MOVO 976(AX), X12
	MOVO X12, X13
	PSLLQ $60, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 992(BX)
	PSRLQ $2, X13
	MOVO X13, 1008(BX)
	RET

// func unpack64_63(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_63(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $9223372036854775807, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, X3
	PAND X0, X2
	MOVO X2, 0(BX)
	PSRLQ $63, X3
	MOVO 16(AX), X4
	MOVO X4, X5
	PSLLQ $1, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 16(BX)
	PSRLQ $62, X5
	MOVO 32(AX), X6
	MOVO X6, X7
	PSLLQ $2, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 32(BX)
	PSRLQ $61, X7
	MOVO 48(AX), X8
	MOVO X8, X9
	PSLLQ $3, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 48(BX)
	PSRLQ $60, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $4, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 64(BX)
	PSRLQ $59, X11
	MOVO 80(AX), X12
	MOVO X12, X13
	PSLLQ $5, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 80(BX)
	PSRLQ $58, X13
	MOVO 96(AX), X14
	MOVO X14, X15
	PSLLQ $6, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 96(BX)
	PSRLQ $57, X15
	MOVO 112(AX), X1
	MOVO X1, X2
	PSLLQ $7, X1
	PAND X0, X1
	POR X1, X15
	MOVO X15, 112(BX)
	PSRLQ $56, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $8, X4
	PAND X0, X4
	POR X4, X2
	MOVO X2, 128(BX)
	PSRLQ $55, X3
	MOVO 144(AX), X6
	MOVO X6, X5
	PSLLQ $9, X6
	PAND X0, X6
	POR X6, X3
	MOVO X3, 144(BX)
	PSRLQ $54, X5
	MOVO 160(AX), X8
	MOVO X8, X7
	PSLLQ $10, X8
	PAND X0, X8
	POR X8, X5
	MOVO X5, 160(BX)
	PSRLQ $53, X7
	MOVO 176(AX), X10
	MOVO X10, X9
	PSLLQ $11, X10
	PAND X0, X10
	POR X10, X7
	MOVO X7, 176(BX)
	PSRLQ $52, X9
	MOVO 192(AX), X12
	MOVO X12, X11
	PSLLQ $12, X12
	PAND X0, X12
	POR X12, X9
	MOVO X9, 192(BX)
	PSRLQ $51, X11
	MOVO 208(AX), X14
	MOVO X14, X13
	PSLLQ $13, X14
	PAND X0, X14
	POR X14, X11
	MOVO X11, 208(BX)
	PSRLQ $50, X13
	MOVO 224(AX), X1
	MOVO X1, X15
	PSLLQ $14, X1
	PAND X0, X1
	POR X1, X13
	MOVO X13, 224(BX)
	PSRLQ $49, X15
	MOVO 240(AX), X4
	MOVO X4, X2
	PSLLQ $15, X4
	PAND X0, X4
	POR X4, X15
	MOVO X15, 240(BX)
	PSRLQ $48, X2
	MOVO 256(AX), X6
	MOVO X6, X3
	PSLLQ $16, X6
	PAND X0, X6
	POR X6, X2
	MOVO X2, 256(BX)
	PSRLQ $47, X3
	MOVO 272(AX), X8
	MOVO X8, X5
	PSLLQ $17, X8
	PAND X0, X8
	POR X8, X3
	MOVO X3, 272(BX)
	PSRLQ $46, X5
	MOVO 288(AX), X10
	MOVO X10, X7
	PSLLQ $18, X10
	PAND X0, X10
	POR X10, X5
	MOVO X5, 288(BX)
	PSRLQ $45, X7
	MOVO 304(AX), X12
	MOVO X12, X9
	PSLLQ $19, X12
	PAND X0, X12
	POR X12, X7
	MOVO X7, 304(BX)
	PSRLQ $44, X9
	MOVO 320(AX), X14
	MOVO X14, X11
	PSLLQ $20, X14
	PAND X0, X14
	POR X14, X9
	MOVO X9, 320(BX)
	PSRLQ $43, X11
	MOVO 336(AX), X1
	MOVO X1, X13
	PSLLQ $21, X1
	PAND X0, X1
	POR X1, X11
	MOVO X11, 336(BX)
	PSRLQ $42, X13
	MOVO 352(AX), X4
	MOVO X4, X15
	PSLLQ $22, X4
	PAND X0, X4
	POR X4, X13
	MOVO X13, 352(BX)
	PSRLQ $41, X15
	MOVO 368(AX), X6
	MOVO X6, X2
	PSLLQ $23, X6
	PAND X0, X6
	POR X6, X15
	MOVO X15, 368(BX)
	PSRLQ $40, X2
	MOVO 384(AX), X8
	MOVO X8, X3
	PSLLQ $24, X8
	PAND X0, X8
	POR X8, X2
	MOVO X2, 384(BX)
	PSRLQ $39, X3
	MOVO 400(AX), X10
	MOVO X10, X5
	PSLLQ $25, X10
	PAND X0, X10
	POR X10, X3
	MOVO X3, 400(BX)
	PSRLQ $38, X5
	MOVO 416(AX), X12
	MOVO X12, X7
	PSLLQ $26, X12
	PAND X0, X12
	POR X12, X5
	MOVO X5, 416(BX)
	PSRLQ $37, X7
	MOVO 432(AX), X14
	MOVO X14, X9
	PSLLQ $27, X14
	PAND X0, X14
	POR X14, X7
	MOVO X7, 432(BX)
	PSRLQ $36, X9
	MOVO 448(AX), X1
	MOVO X1, X11
	PSLLQ $28, X1
	PAND X0, X1
	POR X1, X9
	MOVO X9, 448(BX)
	PSRLQ $35, X11
	MOVO 464(AX), X4
	MOVO X4, X13
	PSLLQ $29, X4
	PAND X0, X4
	POR X4, X11
	MOVO X11, 464(BX)
	PSRLQ $34, X13
	MOVO 480(AX), X6
	MOVO X6, X15
	PSLLQ $30, X6
	PAND X0, X6
	POR X6, X13
	MOVO X13, 480(BX)
	PSRLQ $33, X15
	MOVO 496(AX), X8
	MOVO X8, X2
	PSLLQ $31, X8
	PAND X0, X8
	POR X8, X15
	MOVO X15, 496(BX)
	PSRLQ $32, X2
	MOVO 512(AX), X10
	MOVO X10, X3
	PSLLQ $32, X10
	PAND X0, X10
	POR X10, X2
	MOVO X2, 512(BX)
	PSRLQ $31, X3
	MOVO 528(AX), X12
	MOVO X12, X5
	PSLLQ $33, X12
	PAND X0, X12
	POR X12, X3
	MOVO X3, 528(BX)
	PSRLQ $30, X5
	MOVO 544(AX), X14
	MOVO X14, X7
	PSLLQ $34, X14
	PAND X0, X14
	POR X14, X5
	MOVO X5, 544(BX)
	PSRLQ $29, X7
	MOVO 560(AX), X1
	MOVO X1, X9
	PSLLQ $35, X1
	PAND X0, X1
	POR X1, X7
	MOVO X7, 560(BX)
	PSRLQ $28, X9
	MOVO 576(AX), X4
	MOVO X4, X11
	PSLLQ $36, X4
	PAND X0, X4
	POR X4, X9
	MOVO X9, 576(BX)
	PSRLQ $27, X11
	MOVO 592(AX), X6
	MOVO X6, X13
	PSLLQ $37, X6
	PAND X0, X6
	POR X6, X11
	MOVO X11, 592(BX)
	PSRLQ $26, X13
	MOVO 608(AX), X8
	MOVO X8, X15
	PSLLQ $38, X8
	PAND X0, X8
	POR X8, X13
	MOVO X13, 608(BX)
	PSRLQ $25, X15
	MOVO 624(AX), X10
	MOVO X10, X2
	PSLLQ $39, X10
	PAND X0, X10
	POR X10, X15
	MOVO X15, 624(BX)
	PSRLQ $24, X2
	MOVO 640(AX), X12
	MOVO X12, X3
	PSLLQ $40, X12
	PAND X0, X12
	POR X12, X2
	MOVO X2, 640(BX)
	PSRLQ $23, X3
	MOVO 656(AX), X14
	MOVO X14, X5
	PSLLQ $41, X14
	PAND X0, X14
	POR X14, X3
	MOVO X3, 656(BX)
	PSRLQ $22, X5
	MOVO 672(AX), X1
	MOVO X1, X7
	PSLLQ $42, X1
	PAND X0, X1
	POR X1, X5
	MOVO X5, 672(BX)
	PSRLQ $21, X7
	MOVO 688(AX), X4
	MOVO X4, X9
	PSLLQ $43, X4
	PAND X0, X4
	POR X4, X7
	MOVO X7, 688(BX)
	PSRLQ $20, X9
	MOVO 704(AX), X6
	MOVO X6, X11
	PSLLQ $44, X6
	PAND X0, X6
	POR X6, X9
	MOVO X9, 704(BX)
	PSRLQ $19, X11
	MOVO 720(AX), X8
	MOVO X8, X13
	PSLLQ $45, X8
	PAND X0, X8
	POR X8, X11
	MOVO X11, 720(BX)
	PSRLQ $18, X13
	MOVO 736(AX), X10
	MOVO X10, X15
	PSLLQ $46, X10
	PAND X0, X10
	POR X10, X13
	MOVO X13, 736(BX)
	PSRLQ $17, X15
	MOVO 752(AX), X12
	MOVO X12, X2
	PSLLQ $47, X12
	PAND X0, X12
	POR X12, X15
	MOVO X15, 752(BX)
	PSRLQ $16, X2
	MOVO 768(AX), X14
	MOVO X14, X3
	PSLLQ $48, X14
	PAND X0, X14
	POR X14, X2
	MOVO X2, 768(BX)
	PSRLQ $15, X3
	MOVO 784(AX), X1
	MOVO X1, X5
	PSLLQ $49, X1
	PAND X0, X1
	POR X1, X3
	MOVO X3, 784(BX)
	PSRLQ $14, X5
	MOVO 800(AX), X4
	MOVO X4, X7
	PSLLQ $50, X4
	PAND X0, X4
	POR X4, X5
	MOVO X5, 800(BX)
	PSRLQ $13, X7
	MOVO 816(AX), X6
	MOVO X6, X9
	PSLLQ $51, X6
	PAND X0, X6
	POR X6, X7
	MOVO X7, 816(BX)
	PSRLQ $12, X9
	MOVO 832(AX), X8
	MOVO X8, X11
	PSLLQ $52, X8
	PAND X0, X8
	POR X8, X9
	MOVO X9, 832(BX)
	PSRLQ $11, X11
	MOVO 848(AX), X10
	MOVO X10, X13
	PSLLQ $53, X10
	PAND X0, X10
	POR X10, X11
	MOVO X11, 848(BX)
	PSRLQ $10, X13
	MOVO 864(AX), X12
	MOVO X12, X15
	PSLLQ $54, X12
	PAND X0, X12
	POR X12, X13
	MOVO X13, 864(BX)
	PSRLQ $9, X15
	MOVO 880(AX), X14
	MOVO X14, X2
	PSLLQ $55, X14
	PAND X0, X14
	POR X14, X15
	MOVO X15, 880(BX)
	PSRLQ $8, X2
	MOVO 896(AX), X1
	MOVO X1, X3
	PSLLQ $56, X1
	PAND X0, X1
	POR X1, X2
	MOVO X2, 896(BX)
	PSRLQ $7, X3
	MOVO 912(AX), X4
	MOVO X4, X5
	PSLLQ $57, X4
	PAND X0, X4
	POR X4, X3
	MOVO X3, 912(BX)
	PSRLQ $6, X5
	MOVO 928(AX), X6
	MOVO X6, X7
	PSLLQ $58, X6
	PAND X0, X6
	POR X6, X5
	MOVO X5, 928(BX)
	PSRLQ $5, X7
	MOVO 944(AX), X8
	MOVO X8, X9
	PSLLQ $59, X8
	PAND X0, X8
	POR X8, X7
	MOVO X7, 944(BX)
	PSRLQ $4, X9
	MOVO 960(AX), X10
	MOVO X10, X11
	PSLLQ $60, X10
	PAND X0, X10
	POR X10, X9
	MOVO X9, 960(BX)
	PSRLQ $3, X11
	MOVO 976(AX), X12
	MOVO X12, X13
	PSLLQ $61, X12
	PAND X0, X12
	POR X12, X11
	MOVO X11, 976(BX)
	PSRLQ $2, X13
	MOVO 992(AX), X14
	MOVO X14, X15
	PSLLQ $62, X14
	PAND X0, X14
	POR X14, X13
	MOVO X13, 992(BX)
	PSRLQ $1, X15
	MOVO X15, 1008(BX)
	RET

// func unpack64_64(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·unpack64_64(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ $18446744073709551615, DX
	MOVQ DX, X1
	PSHUFL $68, X1, X0
	MOVO 0(AX), X2
	MOVO X2, 0(BX)
	MOVO 16(AX), X3
	MOVO X3, 16(BX)
	MOVO 32(AX), X4
	MOVO X4, 32(BX)
	MOVO 48(AX), X5
	MOVO X5, 48(BX)
	MOVO 64(AX), X6
	MOVO X6, 64(BX)
	MOVO 80(AX), X7
	MOVO X7, 80(BX)
	MOVO 96(AX), X8
	MOVO X8, 96(BX)
	MOVO 112(AX), X9
	MOVO X9, 112(BX)
	MOVO 128(AX), X10
	MOVO X10, 128(BX)
	MOVO 144(AX), X11
	MOVO X11, 144(BX)
	MOVO 160(AX), X12
	MOVO X12, 160(BX)
	MOVO 176(AX), X13
	MOVO X13, 176(BX)
	MOVO 192(AX), X14
	MOVO X14, 192(BX)
	MOVO 208(AX), X15
	MOVO X15, 208(BX)
	MOVO 224(AX), X1
	MOVO X1, 224(BX)
	MOVO 240(AX), X2
	MOVO X2, 240(BX)
	MOVO 256(AX), X3
	MOVO X3, 256(BX)
	MOVO 272(AX), X4
	MOVO X4, 272(BX)
	MOVO 288(AX), X5
	MOVO X5, 288(BX)
	MOVO 304(AX), X6
	MOVO X6, 304(BX)
	MOVO 320(AX), X7
	MOVO X7, 320(BX)
	MOVO 336(AX), X8
	MOVO X8, 336(BX)
	MOVO 352(AX), X9
	MOVO X9, 352(BX)
	MOVO 368(AX), X10
	MOVO X10, 368(BX)
	MOVO 384(AX), X11
	MOVO X11, 384(BX)
	MOVO 400(AX), X12
	MOVO X12, 400(BX)
	MOVO 416(AX), X13
	MOVO X13, 416(BX)
	MOVO 432(AX), X14
	MOVO X14, 432(BX)
	MOVO 448(AX), X15
	MOVO X15, 448(BX)
	MOVO 464(AX), X1
	MOVO X1, 464(BX)
	MOVO 480(AX), X2
	MOVO X2, 480(BX)
	MOVO 496(AX), X3
	MOVO X3, 496(BX)
	MOVO 512(AX), X4
	MOVO X4, 512(BX)
	MOVO 528(AX), X5
	MOVO X5, 528(BX)
	MOVO 544(AX), X6
	MOVO X6, 544(BX)
	MOVO 560(AX), X7
	MOVO X7, 560(BX)
	MOVO 576(AX), X8
	MOVO X8, 576(BX)
	MOVO 592(AX), X9
	MOVO X9, 592(BX)
	MOVO 608(AX), X10
	MOVO X10, 608(BX)
	MOVO 624(AX), X11
	MOVO X11, 624(BX)
	MOVO 640(AX), X12
	MOVO X12, 640(BX)
	MOVO 656(AX), X13
	MOVO X13, 656(BX)
	MOVO 672(AX), X14
	MOVO X14, 672(BX)
	MOVO 688(AX), X15
	MOVO X15, 688(BX)
	MOVO 704(AX), X1
	MOVO X1, 704(BX)
	MOVO 720(AX), X2
	MOVO X2, 720(BX)
	MOVO 736(AX), X3
	MOVO X3, 736(BX)
	MOVO 752(AX), X4
	MOVO X4, 752(BX)
	MOVO 768(AX), X5
	MOVO X5, 768(BX)
	MOVO 784(AX), X6
	MOVO X6, 784(BX)
	MOVO 800(AX), X7
	MOVO X7, 800(BX)
	MOVO 816(AX), X8
	MOVO X8, 816(BX)
	MOVO 832(AX), X9
	MOVO X9, 832(BX)
	MOVO 848(AX), X10
	MOVO X10, 848(BX)
	MOVO 864(AX), X11
	MOVO X11, 864(BX)
	MOVO 880(AX), X12
	MOVO X12, 880(BX)
	MOVO 896(AX), X13
	MOVO X13, 896(BX)
	MOVO 912(AX), X14
	MOVO X14, 912(BX)
	MOVO 928(AX), X15
	MOVO X15, 928(BX)
	MOVO 944(AX), X1
	MOVO X1, 944(BX)
	MOVO 960(AX), X2
	MOVO X2, 960(BX)
	MOVO 976(AX), X3
	MOVO X3, 976(BX)
	MOVO 992(AX), X4
	MOVO X4, 992(BX)
	MOVO 1008(AX), X5
	MOVO X5, 1008(BX)
	RET

// func dunpack32_1(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_1(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $1, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $2, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $3, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLL $4, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $5, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	PSRLL $6, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	PSRLL $7, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLL $8, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	PSRLL $9, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	PSRLL $10, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	PSRLL $11, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLL $12, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 192(BX)
	PSRLL $13, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 208(BX)
	PSRLL $14, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $15, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLL $16, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $17, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	PSRLL $18, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	PSRLL $19, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLL $20, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	PSRLL $21, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	PSRLL $22, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 352(BX)
	PSRLL $23, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 368(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLL $24, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	PSRLL $25, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	PSRLL $26, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $27, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLL $28, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $29, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $30, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	PSRLL $31, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_2(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_2(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $3, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $2, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $4, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $6, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLL $8, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $10, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	PSRLL $12, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	PSRLL $14, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLL $16, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	PSRLL $18, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	PSRLL $20, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	PSRLL $22, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLL $24, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 192(BX)
	PSRLL $26, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 208(BX)
	PSRLL $28, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $30, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO 16(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $2, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	PSRLL $4, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	PSRLL $6, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLL $8, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	PSRLL $10, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	PSRLL $12, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 352(BX)
	PSRLL $14, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 368(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLL $16, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	PSRLL $18, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	PSRLL $20, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $22, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLL $24, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $26, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $28, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	PSRLL $30, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_3(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_3(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $7, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $3, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $6, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $9, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLL $12, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $15, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	PSRLL $18, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	PSRLL $21, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLL $24, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	PSRLL $27, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	PSRLL $30, X13
	MOVO 16(AX), X14
	MOVO X14, X15
	PSLLL $2, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLL $1, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 176(BX)
	PSRLL $4, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 192(BX)
	PSRLL $7, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 208(BX)
	PSRLL $10, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 224(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLL $13, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 240(BX)
	PSRLL $16, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 256(BX)
	PSRLL $19, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 272(BX)
	PSRLL $22, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 288(BX)
	MOVO X9, X10
	MOVO X9, X11
	PSRLL $25, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 304(BX)
	PSRLL $28, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 320(BX)
	PSRLL $31, X11
	MOVO 32(AX), X12
	MOVO X12, X14
	PSLLL $1, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 336(BX)
	MOVO X14, X13
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLL $2, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 352(BX)
	PSRLL $5, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 368(BX)
	PSRLL $8, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 384(BX)
	PSRLL $11, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 400(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLL $14, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 416(BX)
	PSRLL $17, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 432(BX)
	PSRLL $20, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 448(BX)
	PSRLL $23, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 464(BX)
	MOVO X7, X8
	PSRLL $26, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 480(BX)
	PSRLL $29, X8
	PADDL X8, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_4(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_4(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $15, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $4, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $8, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $12, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLL $16, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $20, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	PSRLL $24, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	PSRLL $28, X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO 16(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	PSRLL $4, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	PSRLL $8, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	PSRLL $12, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLL $16, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 192(BX)
	PSRLL $20, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 208(BX)
	PSRLL $24, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $28, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO 32(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $4, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	PSRLL $8, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	PSRLL $12, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PSRLL $16, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	PSRLL $20, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	PSRLL $24, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 352(BX)
	PSRLL $28, X12
	PADDL X12, X0
	MOVO X0, 368(BX)
	MOVO 48(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	PSRLL $4, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	PSRLL $8, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $12, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLL $16, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $20, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $24, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	PSRLL $28, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_5(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_5(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $31, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $5, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $10, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $15, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLL $20, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $25, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	PSRLL $30, X9
	MOVO 16(AX), X10
	MOVO X10, X11
	PSLLL $2, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLL $3, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 112(BX)
	PSRLL $8, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 128(BX)
	PSRLL $13, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 144(BX)
	PSRLL $18, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 160(BX)
	MOVO X15, X2
	PSRLL $23, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 176(BX)
	PSRLL $28, X2
	MOVO 32(AX), X3
	MOVO X3, X4
	PSLLL $4, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 192(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLL $1, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 208(BX)
	PSRLL $6, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 224(BX)
	PSRLL $11, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 240(BX)
	PSRLL $16, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 256(BX)
	MOVO X8, X10
	MOVO X8, X9
	PSRLL $21, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 272(BX)
	PSRLL $26, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 288(BX)
	PSRLL $31, X9
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLL $1, X11
	PAND X1, X11
	POR X11, X9
	PADDL X9, X0
	MOVO X0, 304(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X3
	PSRLL $4, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 320(BX)
	PSRLL $9, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 336(BX)
	PSRLL $14, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 352(BX)
	PSRLL $19, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 368(BX)
	MOVO X3, X2
	PSRLL $24, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 384(BX)
	PSRLL $29, X2
	MOVO 64(AX), X4
	MOVO X4, X5
	PSLLL $3, X4
	PAND X1, X4
	POR X4, X2
	PADDL X2, X0
	MOVO X0, 400(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X10
	PSRLL $2, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 416(BX)
	PSRLL $7, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 432(BX)
	PSRLL $12, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 448(BX)
	PSRLL $17, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 464(BX)
	MOVO X10, X11
	PSRLL $22, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 480(BX)
	PSRLL $27, X11
	PADDL X11, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_6(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_6(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $63, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $6, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $12, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $18, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	PSRLL $24, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $30, X8
	MOVO 16(AX), X9
	MOVO X9, X10
	PSLLL $2, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 96(BX)
	PSRLL $10, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 112(BX)
	PSRLL $16, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 128(BX)
	PSRLL $22, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 144(BX)
	PSRLL $28, X14
	MOVO 32(AX), X15
	MOVO X15, X2
	PSLLL $4, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 160(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLL $2, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 176(BX)
	PSRLL $8, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 192(BX)
	PSRLL $14, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 208(BX)
	PSRLL $20, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 224(BX)
	PSRLL $26, X6
	PADDL X6, X0
	MOVO X0, 240(BX)
	MOVO 48(AX), X7
	MOVO X7, X9
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X11
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 256(BX)
	PSRLL $6, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 272(BX)
	PSRLL $12, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 288(BX)
	PSRLL $18, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 304(BX)
	MOVO X11, X12
	PSRLL $24, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 320(BX)
	PSRLL $30, X12
	MOVO 64(AX), X13
	MOVO X13, X15
	PSLLL $2, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 336(BX)
	MOVO X15, X14
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLL $4, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 352(BX)
	PSRLL $10, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 368(BX)
	PSRLL $16, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 384(BX)
	PSRLL $22, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 400(BX)
	PSRLL $28, X4
	MOVO 80(AX), X5
	MOVO X5, X6
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 416(BX)
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X8
	MOVO X6, X10
	PSRLL $2, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 432(BX)
	PSRLL $8, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 448(BX)
	PSRLL $14, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 464(BX)
	PSRLL $20, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 480(BX)
	PSRLL $26, X10
	PADDL X10, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_7(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_7(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $127, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $7, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $14, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $21, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	PSRLL $28, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLL $4, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLL $3, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 80(BX)
	PSRLL $10, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 96(BX)
	PSRLL $17, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 112(BX)
	PSRLL $24, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 128(BX)
	PSRLL $31, X13
	MOVO 32(AX), X14
	MOVO X14, X15
	PSLLL $1, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 144(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLL $6, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 160(BX)
	PSRLL $13, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 176(BX)
	PSRLL $20, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 192(BX)
	PSRLL $27, X4
	MOVO 48(AX), X5
	MOVO X5, X6
	PSLLL $5, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 208(BX)
	MOVO X6, X8
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X10
	PSRLL $2, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 224(BX)
	PSRLL $9, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 240(BX)
	PSRLL $16, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 256(BX)
	PSRLL $23, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 272(BX)
	PSRLL $30, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $2, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 288(BX)
	MOVO X12, X14
	MOVO X12, X13
	MOVO X12, X15
	PSRLL $5, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 304(BX)
	PSRLL $12, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 320(BX)
	PSRLL $19, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 336(BX)
	PSRLL $26, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLL $6, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 352(BX)
	MOVO X3, X5
	MOVO X3, X4
	MOVO X3, X6
	MOVO X3, X8
	PSRLL $1, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 368(BX)
	PSRLL $8, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 384(BX)
	PSRLL $15, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 400(BX)
	PSRLL $22, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 416(BX)
	PSRLL $29, X8
	MOVO 96(AX), X7
	MOVO X7, X9
	PSLLL $3, X7
	PAND X1, X7
	POR X7, X8
	PADDL X8, X0
	MOVO X0, 432(BX)
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X12
	PSRLL $4, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 448(BX)
	PSRLL $11, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 464(BX)
	PSRLL $18, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 480(BX)
	PSRLL $25, X12
	PADDL X12, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_8(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_8(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $255, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $8, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $16, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $24, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO 16(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $8, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	PSRLL $16, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	PSRLL $24, X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO 32(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	PSRLL $8, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	PSRLL $16, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	PSRLL $24, X14
	PADDL X14, X0
	MOVO X0, 176(BX)
	MOVO 48(AX), X15
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 192(BX)
	PSRLL $8, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 208(BX)
	PSRLL $16, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $24, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO 64(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $8, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	PSRLL $16, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	PSRLL $24, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	MOVO 80(AX), X9
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	PSRLL $8, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	PSRLL $16, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 352(BX)
	PSRLL $24, X12
	PADDL X12, X0
	MOVO X0, 368(BX)
	MOVO 96(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	PSRLL $8, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	PSRLL $16, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $24, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO 112(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $8, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $16, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	PSRLL $24, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_9(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_9(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $511, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $9, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $18, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $27, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLL $5, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PSRLL $4, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	PSRLL $13, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 80(BX)
	PSRLL $22, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 96(BX)
	PSRLL $31, X11
	MOVO 32(AX), X12
	MOVO X12, X13
	PSLLL $1, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 112(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLL $8, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 128(BX)
	PSRLL $17, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 144(BX)
	PSRLL $26, X15
	MOVO 48(AX), X2
	MOVO X2, X3
	PSLLL $6, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 160(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X7
	PSRLL $3, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 176(BX)
	PSRLL $12, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 192(BX)
	PSRLL $21, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 208(BX)
	PSRLL $30, X7
	MOVO 64(AX), X6
	MOVO X6, X8
	PSLLL $2, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 224(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLL $7, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 240(BX)
	PSRLL $16, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 256(BX)
	PSRLL $25, X10
	MOVO 80(AX), X12
	MOVO X12, X11
	PSLLL $7, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 272(BX)
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X2
	PSRLL $2, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 288(BX)
	PSRLL $11, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 304(BX)
	PSRLL $20, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 320(BX)
	PSRLL $29, X2
	MOVO 96(AX), X15
	MOVO X15, X3
	PSLLL $3, X15
	PAND X1, X15
	POR X15, X2
	PADDL X2, X0
	MOVO X0, 336(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLL $6, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 352(BX)
	PSRLL $15, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 368(BX)
	PSRLL $24, X5
	MOVO 112(AX), X6
	MOVO X6, X7
	PSLLL $8, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 384(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X12
	PSRLL $1, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 400(BX)
	PSRLL $10, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 416(BX)
	PSRLL $19, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 432(BX)
	PSRLL $28, X12
	MOVO 128(AX), X10
	MOVO X10, X11
	PSLLL $4, X10
	PAND X1, X10
	POR X10, X12
	PADDL X12, X0
	MOVO X0, 448(BX)
	MOVO X11, X13
	MOVO X11, X14
	PSRLL $5, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 464(BX)
	PSRLL $14, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 480(BX)
	PSRLL $23, X14
	PADDL X14, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_10(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_10(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1023, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $10, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $20, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $30, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLL $2, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLL $8, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	PSRLL $18, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 80(BX)
	PSRLL $28, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLL $4, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 96(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLL $6, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 112(BX)
	PSRLL $16, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 128(BX)
	PSRLL $26, X14
	MOVO 48(AX), X15
	MOVO X15, X2
	PSLLL $6, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 144(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLL $4, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 160(BX)
	PSRLL $14, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 176(BX)
	PSRLL $24, X4
	MOVO 64(AX), X5
	MOVO X5, X7
	PSLLL $8, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 192(BX)
	MOVO X7, X6
	MOVO X7, X8
	PSRLL $2, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 208(BX)
	PSRLL $12, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 224(BX)
	PSRLL $22, X8
	PADDL X8, X0
	MOVO X0, 240(BX)
	MOVO 80(AX), X9
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X12
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 256(BX)
	PSRLL $10, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 272(BX)
	PSRLL $20, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 288(BX)
	PSRLL $30, X12
	MOVO 96(AX), X13
	MOVO X13, X15
	PSLLL $2, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 304(BX)
	MOVO X15, X14
	MOVO X15, X2
	PSRLL $8, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 320(BX)
	PSRLL $18, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 336(BX)
	PSRLL $28, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $4, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 352(BX)
	MOVO X5, X4
	MOVO X5, X7
	PSRLL $6, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 368(BX)
	PSRLL $16, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 384(BX)
	PSRLL $26, X7
	MOVO 128(AX), X6
	MOVO X6, X8
	PSLLL $6, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 400(BX)
	MOVO X8, X9
	MOVO X8, X11
	PSRLL $4, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 416(BX)
	PSRLL $14, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 432(BX)
	PSRLL $24, X11
	MOVO 144(AX), X10
	MOVO X10, X13
	PSLLL $8, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 448(BX)
	MOVO X13, X12
	MOVO X13, X15
	PSRLL $2, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 464(BX)
	PSRLL $12, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 480(BX)
	PSRLL $22, X15
	PADDL X15, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_11(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_11(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2047, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $11, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $22, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $10, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLL $1, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $12, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	PSRLL $23, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLL $9, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 80(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLL $2, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 96(BX)
	PSRLL $13, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 112(BX)
	PSRLL $24, X13
	MOVO 48(AX), X14
	MOVO X14, X15
	PSLLL $8, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 128(BX)
	MOVO X15, X2
	MOVO X15, X3
	PSRLL $3, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 144(BX)
	PSRLL $14, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 160(BX)
	PSRLL $25, X3
	MOVO 64(AX), X4
	MOVO X4, X6
	PSLLL $7, X4
	PAND X1, X4
	POR X4, X3
	PADDL X3, X0
	MOVO X0, 176(BX)
	MOVO X6, X5
	MOVO X6, X7
	PSRLL $4, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 192(BX)
	PSRLL $15, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 208(BX)
	PSRLL $26, X7
	MOVO 80(AX), X8
	MOVO X8, X10
	PSLLL $6, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 224(BX)
	MOVO X10, X9
	MOVO X10, X11
	PSRLL $5, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 240(BX)
	PSRLL $16, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 256(BX)
	PSRLL $27, X11
	MOVO 96(AX), X12
	MOVO X12, X14
	PSLLL $5, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 272(BX)
	MOVO X14, X13
	MOVO X14, X15
	PSRLL $6, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 288(BX)
	PSRLL $17, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 304(BX)
	PSRLL $28, X15
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLL $4, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 320(BX)
	MOVO X4, X3
	MOVO X4, X6
	PSRLL $7, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 336(BX)
	PSRLL $18, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 352(BX)
	PSRLL $29, X6
	MOVO 128(AX), X5
	MOVO X5, X8
	PSLLL $3, X5
	PAND X1, X5
	POR X5, X6
	PADDL X6, X0
	MOVO X0, 368(BX)
	MOVO X8, X7
	MOVO X8, X10
	PSRLL $8, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 384(BX)
	PSRLL $19, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 400(BX)
	PSRLL $30, X10
	MOVO 144(AX), X9
	MOVO X9, X12
	PSLLL $2, X9
	PAND X1, X9
	POR X9, X10
	PADDL X10, X0
	MOVO X0, 416(BX)
	MOVO X12, X11
	MOVO X12, X14
	PSRLL $9, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 432(BX)
	PSRLL $20, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 448(BX)
	PSRLL $31, X14
	MOVO 160(AX), X13
	MOVO X13, X2
	PSLLL $1, X13
	PAND X1, X13
	POR X13, X14
	PADDL X14, X0
	MOVO X0, 464(BX)
	MOVO X2, X15
	PSRLL $10, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 480(BX)
	PSRLL $21, X15
	PADDL X15, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_12(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_12(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4095, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $12, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $24, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $8, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLL $4, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $16, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	PSRLL $28, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLL $4, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 80(BX)
	MOVO X11, X12
	PSRLL $8, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 96(BX)
	PSRLL $20, X12
	PADDL X12, X0
	MOVO X0, 112(BX)
	MOVO 48(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 128(BX)
	PSRLL $12, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 144(BX)
	PSRLL $24, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLL $8, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 160(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLL $4, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 176(BX)
	PSRLL $16, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 192(BX)
	PSRLL $28, X6
	MOVO 80(AX), X5
	MOVO X5, X7
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X6
	PADDL X6, X0
	MOVO X0, 208(BX)
	MOVO X7, X8
	PSRLL $8, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 224(BX)
	PSRLL $20, X8
	PADDL X8, X0
	MOVO X0, 240(BX)
	MOVO 96(AX), X10
	MOVO X10, X9
	MOVO X10, X11
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 256(BX)
	PSRLL $12, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 272(BX)
	PSRLL $24, X11
	MOVO 112(AX), X12
	MOVO X12, X13
	PSLLL $8, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 288(BX)
	MOVO X13, X14
	MOVO X13, X2
	PSRLL $4, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 304(BX)
	PSRLL $16, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 320(BX)
	PSRLL $28, X2
	MOVO 128(AX), X15
	MOVO X15, X3
	PSLLL $4, X15
	PAND X1, X15
	POR X15, X2
	PADDL X2, X0
	MOVO X0, 336(BX)
	MOVO X3, X4
	PSRLL $8, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 352(BX)
	PSRLL $20, X4
	PADDL X4, X0
	MOVO X0, 368(BX)
	MOVO 144(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 384(BX)
	PSRLL $12, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 400(BX)
	PSRLL $24, X7
	MOVO 160(AX), X8
	MOVO X8, X10
	PSLLL $8, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 416(BX)
	MOVO X10, X9
	MOVO X10, X12
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 432(BX)
	PSRLL $16, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 448(BX)
	PSRLL $28, X12
	MOVO 176(AX), X11
	MOVO X11, X13
	PSLLL $4, X11
	PAND X1, X11
	POR X11, X12
	PADDL X12, X0
	MOVO X0, 464(BX)
	MOVO X13, X14
	PSRLL $8, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 480(BX)
	PSRLL $20, X14
	PADDL X14, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_13(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_13(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $8191, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $13, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $26, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $6, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLL $7, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $20, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLL $12, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLL $1, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	PSRLL $14, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 96(BX)
	PSRLL $27, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLL $5, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 112(BX)
	MOVO X14, X15
	PSRLL $8, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 128(BX)
	PSRLL $21, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLL $11, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 144(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLL $2, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 160(BX)
	PSRLL $15, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 176(BX)
	PSRLL $28, X6
	MOVO 80(AX), X5
	MOVO X5, X7
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X6
	PADDL X6, X0
	MOVO X0, 192(BX)
	MOVO X7, X9
	PSRLL $9, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 208(BX)
	PSRLL $22, X9
	MOVO 96(AX), X8
	MOVO X8, X10
	PSLLL $10, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 224(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLL $3, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 240(BX)
	PSRLL $16, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 256(BX)
	PSRLL $29, X13
	MOVO 112(AX), X12
	MOVO X12, X14
	PSLLL $3, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 272(BX)
	MOVO X14, X2
	PSRLL $10, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 288(BX)
	PSRLL $23, X2
	MOVO 128(AX), X15
	MOVO X15, X3
	PSLLL $9, X15
	PAND X1, X15
	POR X15, X2
	PADDL X2, X0
	MOVO X0, 304(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLL $4, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 320(BX)
	PSRLL $17, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 336(BX)
	PSRLL $30, X5
	MOVO 144(AX), X6
	MOVO X6, X7
	PSLLL $2, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 352(BX)
	MOVO X7, X8
	PSRLL $11, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 368(BX)
	PSRLL $24, X8
	MOVO 160(AX), X9
	MOVO X9, X10
	PSLLL $8, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 384(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLL $5, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 400(BX)
	PSRLL $18, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 416(BX)
	PSRLL $31, X12
	MOVO 176(AX), X13
	MOVO X13, X14
	PSLLL $1, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 432(BX)
	MOVO X14, X15
	PSRLL $12, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 448(BX)
	PSRLL $25, X15
	MOVO 192(AX), X2
	MOVO X2, X3
	PSLLL $7, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 464(BX)
	MOVO X3, X4
	PSRLL $6, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 480(BX)
	PSRLL $19, X4
	PADDL X4, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_14(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_14(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $16383, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $14, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $28, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $4, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLL $10, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $24, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLL $8, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	PSRLL $6, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	PSRLL $20, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLL $12, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 96(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLL $2, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 112(BX)
	PSRLL $16, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 128(BX)
	PSRLL $30, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLL $2, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 144(BX)
	MOVO X3, X4
	PSRLL $12, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 160(BX)
	PSRLL $26, X4
	MOVO 80(AX), X6
	MOVO X6, X5
	PSLLL $6, X6
	PAND X1, X6
	POR X6, X4
	PADDL X4, X0
	MOVO X0, 176(BX)
	MOVO X5, X7
	PSRLL $8, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 192(BX)
	PSRLL $22, X7
	MOVO 96(AX), X9
	MOVO X9, X8
	PSLLL $10, X9
	PAND X1, X9
	POR X9, X7
	PADDL X7, X0
	MOVO X0, 208(BX)
	MOVO X8, X10
	PSRLL $4, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 224(BX)
	PSRLL $18, X10
	PADDL X10, X0
	MOVO X0, 240(BX)
	MOVO 112(AX), X12
	MOVO X12, X11
	MOVO X12, X13
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 256(BX)
	PSRLL $14, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 272(BX)
	PSRLL $28, X13
	MOVO 128(AX), X14
	MOVO X14, X2
	PSLLL $4, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 288(BX)
	MOVO X2, X15
	PSRLL $10, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 304(BX)
	PSRLL $24, X15
	MOVO 144(AX), X3
	MOVO X3, X6
	PSLLL $8, X3
	PAND X1, X3
	POR X3, X15
	PADDL X15, X0
	MOVO X0, 320(BX)
	MOVO X6, X4
	PSRLL $6, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 336(BX)
	PSRLL $20, X4
	MOVO 160(AX), X5
	MOVO X5, X9
	PSLLL $12, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 352(BX)
	MOVO X9, X7
	MOVO X9, X8
	PSRLL $2, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 368(BX)
	PSRLL $16, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 384(BX)
	PSRLL $30, X8
	MOVO 176(AX), X10
	MOVO X10, X12
	PSLLL $2, X10
	PAND X1, X10
	POR X10, X8
	PADDL X8, X0
	MOVO X0, 400(BX)
	MOVO X12, X11
	PSRLL $12, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 416(BX)
	PSRLL $26, X11
	MOVO 192(AX), X14
	MOVO X14, X13
	PSLLL $6, X14
	PAND X1, X14
	POR X14, X11
	PADDL X11, X0
	MOVO X0, 432(BX)
	MOVO X13, X2
	PSRLL $8, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 448(BX)
	PSRLL $22, X2
	MOVO 208(AX), X3
	MOVO X3, X15
	PSLLL $10, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 464(BX)
	MOVO X15, X6
	PSRLL $4, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 480(BX)
	PSRLL $18, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_15(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_15(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $32767, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $15, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $30, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLL $2, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLL $13, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $28, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLL $4, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	PSRLL $11, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	PSRLL $26, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLL $6, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 96(BX)
	MOVO X13, X14
	PSRLL $9, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 112(BX)
	PSRLL $24, X14
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLL $8, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 128(BX)
	MOVO X2, X3
	PSRLL $7, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 144(BX)
	PSRLL $22, X3
	MOVO 80(AX), X4
	MOVO X4, X6
	PSLLL $10, X4
	PAND X1, X4
	POR X4, X3
	PADDL X3, X0
	MOVO X0, 160(BX)
	MOVO X6, X5
	PSRLL $5, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 176(BX)
	PSRLL $20, X5
	MOVO 96(AX), X7
	MOVO X7, X9
	PSLLL $12, X7
	PAND X1, X7
	POR X7, X5
	PADDL X5, X0
	MOVO X0, 192(BX)
	MOVO X9, X8
	PSRLL $3, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 208(BX)
	PSRLL $18, X8
	MOVO 112(AX), X10
	MOVO X10, X12
	PSLLL $14, X10
	PAND X1, X10
	POR X10, X8
	PADDL X8, X0
	MOVO X0, 224(BX)
	MOVO X12, X11
	MOVO X12, X13
	PSRLL $1, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 240(BX)
	PSRLL $16, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 256(BX)
	PSRLL $31, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLL $1, X15
	PAND X1, X15
	POR X15, X13
	PADDL X13, X0
	MOVO X0, 272(BX)
	MOVO X14, X2
	PSRLL $14, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 288(BX)
	PSRLL $29, X2
	MOVO 144(AX), X4
	MOVO X4, X3
	PSLLL $3, X4
	PAND X1, X4
	POR X4, X2
	PADDL X2, X0
	MOVO X0, 304(BX)
	MOVO X3, X6
	PSRLL $12, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 320(BX)
	PSRLL $27, X6
	MOVO 160(AX), X7
	MOVO X7, X5
	PSLLL $5, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 336(BX)
	MOVO X5, X9
	PSRLL $10, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 352(BX)
	PSRLL $25, X9
	MOVO 176(AX), X10
	MOVO X10, X8
	PSLLL $7, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 368(BX)
	MOVO X8, X12
	PSRLL $8, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 384(BX)
	PSRLL $23, X12
	MOVO 192(AX), X11
	MOVO X11, X15
	PSLLL $9, X11
	PAND X1, X11
	POR X11, X12
	PADDL X12, X0
	MOVO X0, 400(BX)
	MOVO X15, X13
	PSRLL $6, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $21, X13
	MOVO 208(AX), X14
	MOVO X14, X4
	PSLLL $11, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 432(BX)
	MOVO X4, X2
	PSRLL $4, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 448(BX)
	PSRLL $19, X2
	MOVO 224(AX), X3
	MOVO X3, X7
	PSLLL $13, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 464(BX)
	MOVO X7, X6
	PSRLL $2, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 480(BX)
	PSRLL $17, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_16(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_16(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $65535, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $16, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO 16(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	PSRLL $16, X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO 32(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	PSRLL $16, X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	MOVO 48(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	PSRLL $16, X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO 64(AX), X11
	MOVO X11, X12
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	PSRLL $16, X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	MOVO 80(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	PSRLL $16, X14
	PADDL X14, X0
	MOVO X0, 176(BX)
	MOVO 96(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 192(BX)
	PSRLL $16, X2
	PADDL X2, X0
	MOVO X0, 208(BX)
	MOVO 112(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $16, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO 128(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $16, X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	MOVO 144(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	PSRLL $16, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	MOVO 160(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	PSRLL $16, X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	MOVO 176(AX), X11
	MOVO X11, X12
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 352(BX)
	PSRLL $16, X12
	PADDL X12, X0
	MOVO X0, 368(BX)
	MOVO 192(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	PSRLL $16, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	MOVO 208(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $16, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO 224(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $16, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	MOVO 240(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	PSRLL $16, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_17(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_17(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $131071, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $17, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $15, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLL $2, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $19, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $13, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLL $4, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	PSRLL $21, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLL $11, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	MOVO X12, X13
	PSRLL $6, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 96(BX)
	PSRLL $23, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLL $9, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 112(BX)
	MOVO X15, X2
	PSRLL $8, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 128(BX)
	PSRLL $25, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLL $7, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 144(BX)
	MOVO X5, X4
	PSRLL $10, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 160(BX)
	PSRLL $27, X4
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLL $5, X6
	PAND X1, X6
	POR X6, X4
	PADDL X4, X0
	MOVO X0, 176(BX)
	MOVO X8, X7
	PSRLL $12, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 192(BX)
	PSRLL $29, X7
	MOVO 112(AX), X9
	MOVO X9, X11
	PSLLL $3, X9
	PAND X1, X9
	POR X9, X7
	PADDL X7, X0
	MOVO X0, 208(BX)
	MOVO X11, X10
	PSRLL $14, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 224(BX)
	PSRLL $31, X10
	MOVO 128(AX), X12
	MOVO X12, X14
	PSLLL $1, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 240(BX)
	PSRLL $16, X14
	MOVO 144(AX), X13
	MOVO X13, X15
	PSLLL $16, X13
	PAND X1, X13
	POR X13, X14
	PADDL X14, X0
	MOVO X0, 256(BX)
	MOVO X15, X3
	PSRLL $1, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 272(BX)
	PSRLL $18, X3
	MOVO 160(AX), X2
	MOVO X2, X5
	PSLLL $14, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 288(BX)
	MOVO X5, X6
	PSRLL $3, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 304(BX)
	PSRLL $20, X6
	MOVO 176(AX), X4
	MOVO X4, X8
	PSLLL $12, X4
	PAND X1, X4
	POR X4, X6
	PADDL X6, X0
	MOVO X0, 320(BX)
	MOVO X8, X9
	PSRLL $5, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 336(BX)
	PSRLL $22, X9
	MOVO 192(AX), X7
	MOVO X7, X11
	PSLLL $10, X7
	PAND X1, X7
	POR X7, X9
	PADDL X9, X0
	MOVO X0, 352(BX)
	MOVO X11, X12
	PSRLL $7, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 368(BX)
	PSRLL $24, X12
	MOVO 208(AX), X10
	MOVO X10, X13
	PSLLL $8, X10
	PAND X1, X10
	POR X10, X12
	PADDL X12, X0
	MOVO X0, 384(BX)
	MOVO X13, X14
	PSRLL $9, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 400(BX)
	PSRLL $26, X14
	MOVO 224(AX), X15
	MOVO X15, X2
	PSLLL $6, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 416(BX)
	MOVO X2, X3
	PSRLL $11, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	PSRLL $28, X3
	MOVO 240(AX), X5
	MOVO X5, X4
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	MOVO X4, X6
	PSRLL $13, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $30, X6
	MOVO 256(AX), X8
	MOVO X8, X7
	PSLLL $2, X8
	PAND X1, X8
	POR X8, X6
	PADDL X6, X0
	MOVO X0, 480(BX)
	PSRLL $15, X7
	PADDL X7, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_18(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_18(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $262143, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $18, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $14, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLL $4, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $22, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $10, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLL $8, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	PSRLL $26, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLL $6, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	MOVO X12, X13
	PSRLL $12, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 96(BX)
	PSRLL $30, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLL $2, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 112(BX)
	PSRLL $16, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLL $16, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 128(BX)
	MOVO X3, X5
	PSRLL $2, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 144(BX)
	PSRLL $20, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLL $12, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 160(BX)
	MOVO X6, X8
	PSRLL $6, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 176(BX)
	PSRLL $24, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLL $8, X7
	PAND X1, X7
	POR X7, X8
	PADDL X8, X0
	MOVO X0, 192(BX)
	MOVO X9, X11
	PSRLL $10, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 208(BX)
	PSRLL $28, X11
	MOVO 128(AX), X10
	MOVO X10, X12
	PSLLL $4, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 224(BX)
	PSRLL $14, X12
	PADDL X12, X0
	MOVO X0, 240(BX)
	MOVO 144(AX), X14
	MOVO X14, X13
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 256(BX)
	PSRLL $18, X13
	MOVO 160(AX), X2
	MOVO X2, X15
	PSLLL $14, X2
	PAND X1, X2
	POR X2, X13
	PADDL X13, X0
	MOVO X0, 272(BX)
	MOVO X15, X3
	PSRLL $4, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 288(BX)
	PSRLL $22, X3
	MOVO 176(AX), X4
	MOVO X4, X5
	PSLLL $10, X4
	PAND X1, X4
	POR X4, X3
	PADDL X3, X0
	MOVO X0, 304(BX)
	MOVO X5, X6
	PSRLL $8, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 320(BX)
	PSRLL $26, X6
	MOVO 192(AX), X7
	MOVO X7, X8
	PSLLL $6, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 336(BX)
	MOVO X8, X9
	PSRLL $12, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 352(BX)
	PSRLL $30, X9
	MOVO 208(AX), X10
	MOVO X10, X11
	PSLLL $2, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 368(BX)
	PSRLL $16, X11
	MOVO 224(AX), X12
	MOVO X12, X14
	PSLLL $16, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 384(BX)
	MOVO X14, X2
	PSRLL $2, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	PSRLL $20, X2
	MOVO 240(AX), X13
	MOVO X13, X15
	PSLLL $12, X13
	PAND X1, X13
	POR X13, X2
	PADDL X2, X0
	MOVO X0, 416(BX)
	MOVO X15, X4
	PSRLL $6, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 432(BX)
	PSRLL $24, X4
	MOVO 256(AX), X3
	MOVO X3, X5
	PSLLL $8, X3
	PAND X1, X3
	POR X3, X4
	PADDL X4, X0
	MOVO X0, 448(BX)
	MOVO X5, X7
	PSRLL $10, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 464(BX)
	PSRLL $28, X7
	MOVO 272(AX), X6
	MOVO X6, X8
	PSLLL $4, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 480(BX)
	PSRLL $14, X8
	PADDL X8, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_19(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_19(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $524287, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $19, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $13, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLL $6, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $25, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $7, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLL $12, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	PSRLL $31, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLL $1, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	PSRLL $18, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLL $14, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 96(BX)
	MOVO X14, X15
	PSRLL $5, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 112(BX)
	PSRLL $24, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLL $8, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 128(BX)
	MOVO X3, X5
	PSRLL $11, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 144(BX)
	PSRLL $30, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLL $2, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 160(BX)
	PSRLL $17, X6
	MOVO 112(AX), X8
	MOVO X8, X7
	PSLLL $15, X8
	PAND X1, X8
	POR X8, X6
	PADDL X6, X0
	MOVO X0, 176(BX)
	MOVO X7, X9
	PSRLL $4, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 192(BX)
	PSRLL $23, X9
	MOVO 128(AX), X11
	MOVO X11, X10
	PSLLL $9, X11
	PAND X1, X11
	POR X11, X9
	PADDL X9, X0
	MOVO X0, 208(BX)
	MOVO X10, X13
	PSRLL $10, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 224(BX)
	PSRLL $29, X13
	MOVO 144(AX), X12
	MOVO X12, X14
	PSLLL $3, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 240(BX)
	PSRLL $16, X14
	MOVO 160(AX), X2
	MOVO X2, X15
	PSLLL $16, X2
	PAND X1, X2
	POR X2, X14
	PADDL X14, X0
	MOVO X0, 256(BX)
	MOVO X15, X3
	PSRLL $3, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 272(BX)
	PSRLL $22, X3
	MOVO 176(AX), X4
	MOVO X4, X5
	PSLLL $10, X4
	PAND X1, X4
	POR X4, X3
	PADDL X3, X0
	MOVO X0, 288(BX)
	MOVO X5, X8
	PSRLL $9, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 304(BX)
	PSRLL $28, X8
	MOVO 192(AX), X6
	MOVO X6, X7
	PSLLL $4, X6
	PAND X1, X6
	POR X6, X8
	PADDL X8, X0
	MOVO X0, 320(BX)
	PSRLL $15, X7
	MOVO 208(AX), X11
	MOVO X11, X9
	PSLLL $17, X11
	PAND X1, X11
	POR X11, X7
	PADDL X7, X0
	MOVO X0, 336(BX)
	MOVO X9, X10
	PSRLL $2, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 352(BX)
	PSRLL $21, X10
	MOVO 224(AX), X12
	MOVO X12, X13
	PSLLL $11, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 368(BX)
	MOVO X13, X2
	PSRLL $8, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	PSRLL $27, X2
	MOVO 240(AX), X14
	MOVO X14, X15
	PSLLL $5, X14
	PAND X1, X14
	POR X14, X2
	PADDL X2, X0
	MOVO X0, 400(BX)
	PSRLL $14, X15
	MOVO 256(AX), X4
	MOVO X4, X3
	PSLLL $18, X4
	PAND X1, X4
	POR X4, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	MOVO X3, X5
	PSRLL $1, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 432(BX)
	PSRLL $20, X5
	MOVO 272(AX), X6
	MOVO X6, X8
	PSLLL $12, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 448(BX)
	MOVO X8, X11
	PSRLL $7, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 464(BX)
	PSRLL $26, X11
	MOVO 288(AX), X7
	MOVO X7, X9
	PSLLL $6, X7
	PAND X1, X7
	POR X7, X11
	PADDL X11, X0
	MOVO X0, 480(BX)
	PSRLL $13, X9
	PADDL X9, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_20(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_20(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1048575, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $20, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $12, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLL $8, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $28, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $4, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $16, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $16, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	MOVO X11, X12
	PSRLL $4, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 80(BX)
	PSRLL $24, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLL $8, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 96(BX)
	PSRLL $12, X14
	PADDL X14, X0
	MOVO X0, 112(BX)
	MOVO 80(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 128(BX)
	PSRLL $20, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLL $12, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 144(BX)
	MOVO X5, X4
	PSRLL $8, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 160(BX)
	PSRLL $28, X4
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLL $4, X6
	PAND X1, X6
	POR X6, X4
	PADDL X4, X0
	MOVO X0, 176(BX)
	PSRLL $16, X8
	MOVO 128(AX), X7
	MOVO X7, X10
	PSLLL $16, X7
	PAND X1, X7
	POR X7, X8
	PADDL X8, X0
	MOVO X0, 192(BX)
	MOVO X10, X9
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 208(BX)
	PSRLL $24, X9
	MOVO 144(AX), X11
	MOVO X11, X13
	PSLLL $8, X11
	PAND X1, X11
	POR X11, X9
	PADDL X9, X0
	MOVO X0, 224(BX)
	PSRLL $12, X13
	PADDL X13, X0
	MOVO X0, 240(BX)
	MOVO 160(AX), X12
	MOVO X12, X14
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 256(BX)
	PSRLL $20, X14
	MOVO 176(AX), X15
	MOVO X15, X3
	PSLLL $12, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 272(BX)
	MOVO X3, X2
	PSRLL $8, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 288(BX)
	PSRLL $28, X2
	MOVO 192(AX), X5
	MOVO X5, X6
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X2
	PADDL X2, X0
	MOVO X0, 304(BX)
	PSRLL $16, X6
	MOVO 208(AX), X4
	MOVO X4, X7
	PSLLL $16, X4
	PAND X1, X4
	POR X4, X6
	PADDL X6, X0
	MOVO X0, 320(BX)
	MOVO X7, X8
	PSRLL $4, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 336(BX)
	PSRLL $24, X8
	MOVO 224(AX), X10
	MOVO X10, X11
	PSLLL $8, X10
	PAND X1, X10
	POR X10, X8
	PADDL X8, X0
	MOVO X0, 352(BX)
	PSRLL $12, X11
	PADDL X11, X0
	MOVO X0, 368(BX)
	MOVO 240(AX), X9
	MOVO X9, X13
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 384(BX)
	PSRLL $20, X13
	MOVO 256(AX), X12
	MOVO X12, X15
	PSLLL $12, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 400(BX)
	MOVO X15, X14
	PSRLL $8, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $28, X14
	MOVO 272(AX), X3
	MOVO X3, X5
	PSLLL $4, X3
	PAND X1, X3
	POR X3, X14
	PADDL X14, X0
	MOVO X0, 432(BX)
	PSRLL $16, X5
	MOVO 288(AX), X2
	MOVO X2, X4
	PSLLL $16, X2
	PAND X1, X2
	POR X2, X5
	PADDL X5, X0
	MOVO X0, 448(BX)
	MOVO X4, X6
	PSRLL $4, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $24, X6
	MOVO 304(AX), X7
	MOVO X7, X10
	PSLLL $8, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 480(BX)
	PSRLL $12, X10
	PADDL X10, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_21(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_21(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2097151, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $21, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $11, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLL $10, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $31, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLL $1, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 48(BX)
	PSRLL $20, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $12, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	MOVO X11, X12
	PSRLL $9, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 80(BX)
	PSRLL $30, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLL $2, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 96(BX)
	PSRLL $19, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLL $13, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 112(BX)
	MOVO X2, X3
	PSRLL $8, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 128(BX)
	PSRLL $29, X3
	MOVO 96(AX), X5
	MOVO X5, X4
	PSLLL $3, X5
	PAND X1, X5
	POR X5, X3
	PADDL X3, X0
	MOVO X0, 144(BX)
	PSRLL $18, X4
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLL $14, X6
	PAND X1, X6
	POR X6, X4
	PADDL X4, X0
	MOVO X0, 160(BX)
	MOVO X8, X7
	PSRLL $7, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 176(BX)
	PSRLL $28, X7
	MOVO 128(AX), X10
	MOVO X10, X9
	PSLLL $4, X10
	PAND X1, X10
	POR X10, X7
	PADDL X7, X0
	MOVO X0, 192(BX)
	PSRLL $17, X9
	MOVO 144(AX), X11
	MOVO X11, X13
	PSLLL $15, X11
	PAND X1, X11
	POR X11, X9
	PADDL X9, X0
	MOVO X0, 208(BX)
	MOVO X13, X12
	PSRLL $6, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 224(BX)
	PSRLL $27, X12
	MOVO 160(AX), X15
	MOVO X15, X14
	PSLLL $5, X15
	PAND X1, X15
	POR X15, X12
	PADDL X12, X0
	MOVO X0, 240(BX)
	PSRLL $16, X14
	MOVO 176(AX), X2
	MOVO X2, X5
	PSLLL $16, X2
	PAND X1, X2
	POR X2, X14
	PADDL X14, X0
	MOVO X0, 256(BX)
	MOVO X5, X3
	PSRLL $5, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 272(BX)
	PSRLL $26, X3
	MOVO 192(AX), X6
	MOVO X6, X4
	PSLLL $6, X6
	PAND X1, X6
	POR X6, X3
	PADDL X3, X0
	MOVO X0, 288(BX)
	PSRLL $15, X4
	MOVO 208(AX), X8
	MOVO X8, X10
	PSLLL $17, X8
	PAND X1, X8
	POR X8, X4
	PADDL X4, X0
	MOVO X0, 304(BX)
	MOVO X10, X7
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 320(BX)
	PSRLL $25, X7
	MOVO 224(AX), X11
	MOVO X11, X9
	PSLLL $7, X11
	PAND X1, X11
	POR X11, X7
	PADDL X7, X0
	MOVO X0, 336(BX)
	PSRLL $14, X9
	MOVO 240(AX), X13
	MOVO X13, X15
	PSLLL $18, X13
	PAND X1, X13
	POR X13, X9
	PADDL X9, X0
	MOVO X0, 352(BX)
	MOVO X15, X12
	PSRLL $3, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 368(BX)
	PSRLL $24, X12
	MOVO 256(AX), X2
	MOVO X2, X14
	PSLLL $8, X2
	PAND X1, X2
	POR X2, X12
	PADDL X12, X0
	MOVO X0, 384(BX)
	PSRLL $13, X14
	MOVO 272(AX), X5
	MOVO X5, X6
	PSLLL $19, X5
	PAND X1, X5
	POR X5, X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	MOVO X6, X3
	PSRLL $2, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 416(BX)
	PSRLL $23, X3
	MOVO 288(AX), X8
	MOVO X8, X4
	PSLLL $9, X8
	PAND X1, X8
	POR X8, X3
	PADDL X3, X0
	MOVO X0, 432(BX)
	PSRLL $12, X4
	MOVO 304(AX), X10
	MOVO X10, X11
	PSLLL $20, X10
	PAND X1, X10
	POR X10, X4
	PADDL X4, X0
	MOVO X0, 448(BX)
	MOVO X11, X7
	PSRLL $1, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 464(BX)
	PSRLL $22, X7
	MOVO 320(AX), X13
	MOVO X13, X9
	PSLLL $10, X13
	PAND X1, X13
	POR X13, X7
	PADDL X7, X0
	MOVO X0, 480(BX)
	PSRLL $11, X9
	PADDL X9, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_22(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_22(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4194303, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $22, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $10, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $12, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $20, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLL $2, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $24, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $8, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	PSRLL $14, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLL $18, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 80(BX)
	MOVO X13, X14
	PSRLL $4, X13
	PAND X1, X13
	PADDL X13, X0
	MOVO X0, 96(BX)
	PSRLL $26, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLL $6, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 112(BX)
	PSRLL $16, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLL $16, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 128(BX)
	MOVO X5, X4
	PSRLL $6, X5
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 144(BX)
	PSRLL $28, X4
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLL $4, X7
	PAND X1, X7
	POR X7, X4
	PADDL X4, X0
	MOVO X0, 160(BX)
	PSRLL $18, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLL $14, X8
	PAND X1, X8
	POR X8, X6
	PADDL X6, X0
	MOVO X0, 176(BX)
	MOVO X10, X9
	PSRLL $8, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 192(BX)
	PSRLL $30, X9
	MOVO 144(AX), X12
	MOVO X12, X11
	PSLLL $2, X12
	PAND X1, X12
	POR X12, X9
	PADDL X9, X0
	MOVO X0, 208(BX)
	PSRLL $20, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLL $12, X13
	PAND X1, X13
	POR X13, X11
	PADDL X11, X0
	MOVO X0, 224(BX)
	PSRLL $10, X15
	PADDL X15, X0
	MOVO X0, 240(BX)
	MOVO 176(AX), X14
	MOVO X14, X3
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 256(BX)
	PSRLL $22, X3
	MOVO 192(AX), X2
	MOVO X2, X5
	PSLLL $10, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 272(BX)
	PSRLL $12, X5
	MOVO 208(AX), X7
	MOVO X7, X4
	PSLLL $20, X7
	PAND X1, X7
	POR X7, X5
	PADDL X5, X0
	MOVO X0, 288(BX)
	MOVO X4, X8
	PSRLL $2, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 304(BX)
	PSRLL $24, X8
	MOVO 224(AX), X6
	MOVO X6, X10
	PSLLL $8, X6
	PAND X1, X6
	POR X6, X8
	PADDL X8, X0
	MOVO X0, 320(BX)
	PSRLL $14, X10
	MOVO 240(AX), X12
	MOVO X12, X9
	PSLLL $18, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	MOVO X9, X13
	PSRLL $4, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 352(BX)
	PSRLL $26, X13
	MOVO 256(AX), X11
	MOVO X11, X15
	PSLLL $6, X11
	PAND X1, X11
	POR X11, X13
	PADDL X13, X0
	MOVO X0, 368(BX)
	PSRLL $16, X15
	MOVO 272(AX), X14
	MOVO X14, X2
	PSLLL $16, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 384(BX)
	MOVO X2, X3
	PSRLL $6, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 400(BX)
	PSRLL $28, X3
	MOVO 288(AX), X7
	MOVO X7, X5
	PSLLL $4, X7
	PAND X1, X7
	POR X7, X3
	PADDL X3, X0
	MOVO X0, 416(BX)
	PSRLL $18, X5
	MOVO 304(AX), X4
	MOVO X4, X6
	PSLLL $14, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 432(BX)
	MOVO X6, X8
	PSRLL $8, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 448(BX)
	PSRLL $30, X8
	MOVO 320(AX), X12
	MOVO X12, X10
	PSLLL $2, X12
	PAND X1, X12
	POR X12, X8
	PADDL X8, X0
	MOVO X0, 464(BX)
	PSRLL $20, X10
	MOVO 336(AX), X9
	MOVO X9, X11
	PSLLL $12, X9
	PAND X1, X9
	POR X9, X10
	PADDL X10, X0
	MOVO X0, 480(BX)
	PSRLL $10, X11
	PADDL X11, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_23(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_23(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $8388607, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $23, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $9, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $14, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $18, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLL $5, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $28, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLL $4, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	PSRLL $19, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLL $13, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 80(BX)
	PSRLL $10, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLL $22, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 96(BX)
	MOVO X15, X2
	PSRLL $1, X15
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 112(BX)
	PSRLL $24, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLL $8, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 128(BX)
	PSRLL $15, X5
	MOVO 112(AX), X4
	MOVO X4, X7
	PSLLL $17, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 144(BX)
	MOVO X7, X6
	PSRLL $6, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 160(BX)
	PSRLL $29, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLL $3, X8
	PAND X1, X8
	POR X8, X6
	PADDL X6, X0
	MOVO X0, 176(BX)
	PSRLL $20, X10
	MOVO 144(AX), X9
	MOVO X9, X12
	PSLLL $12, X9
	PAND X1, X9
	POR X9, X10
	PADDL X10, X0
	MOVO X0, 192(BX)
	PSRLL $11, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLL $21, X11
	PAND X1, X11
	POR X11, X12
	PADDL X12, X0
	MOVO X0, 208(BX)
	MOVO X14, X13
	PSRLL $2, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 224(BX)
	PSRLL $25, X13
	MOVO 176(AX), X15
	MOVO X15, X3
	PSLLL $7, X15
	PAND X1, X15
	POR X15, X13
	PADDL X13, X0
	MOVO X0, 240(BX)
	PSRLL $16, X3
	MOVO 192(AX), X2
	MOVO X2, X4
	PSLLL $16, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 256(BX)
	MOVO X4, X5
	PSRLL $7, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 272(BX)
	PSRLL $30, X5
	MOVO 208(AX), X7
	MOVO X7, X8
	PSLLL $2, X7
	PAND X1, X7
	POR X7, X5
	PADDL X5, X0
	MOVO X0, 288(BX)
	PSRLL $21, X8
	MOVO 224(AX), X6
	MOVO X6, X9
	PSLLL $11, X6
	PAND X1, X6
	POR X6, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	PSRLL $12, X9
	MOVO 240(AX), X10
	MOVO X10, X11
	PSLLL $20, X10
	PAND X1, X10
	POR X10, X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	MOVO X11, X12
	PSRLL $3, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 336(BX)
	PSRLL $26, X12
	MOVO 256(AX), X14
	MOVO X14, X15
	PSLLL $6, X14
	PAND X1, X14
	POR X14, X12
	PADDL X12, X0
	MOVO X0, 352(BX)
	PSRLL $17, X15
	MOVO 272(AX), X13
	MOVO X13, X2
	PSLLL $15, X13
	PAND X1, X13
	POR X13, X15
	PADDL X15, X0
	MOVO X0, 368(BX)
	MOVO X2, X3
	PSRLL $8, X2
	PAND X1, X2
	PADDL X2, X0
	MOVO X0, 384(BX)
	PSRLL $31, X3
	MOVO 288(AX), X4
	MOVO X4, X7
	PSLLL $1, X4
	PAND X1, X4
	POR X4, X3
	PADDL X3, X0
	MOVO X0, 400(BX)
	PSRLL $22, X7
	MOVO 304(AX), X5
	MOVO X5, X6
	PSLLL $10, X5
	PAND X1, X5
	POR X5, X7
	PADDL X7, X0
	MOVO X0, 416(BX)
	PSRLL $13, X6
	MOVO 320(AX), X8
	MOVO X8, X10
	PSLLL $19, X8
	PAND X1, X8
	POR X8, X6
	PADDL X6, X0
	MOVO X0, 432(BX)
	MOVO X10, X9
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 448(BX)
	PSRLL $27, X9
	MOVO 336(AX), X11
	MOVO X11, X14
	PSLLL $5, X11
	PAND X1, X11
	POR X11, X9
	PADDL X9, X0
	MOVO X0, 464(BX)
	PSRLL $18, X14
	MOVO 352(AX), X12
	MOVO X12, X13
	PSLLL $14, X12
	PAND X1, X12
	POR X12, X14
	PADDL X14, X0
	MOVO X0, 480(BX)
	PSRLL $9, X13
	PADDL X13, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_24(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_24(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $16777215, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $24, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $8, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $16, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $16, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $8, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	MOVO 48(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 64(BX)
	PSRLL $24, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $8, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 80(BX)
	PSRLL $16, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $16, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 96(BX)
	PSRLL $8, X14
	PADDL X14, X0
	MOVO X0, 112(BX)
	MOVO 96(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDL X15, X0
	MOVO X0, 128(BX)
	PSRLL $24, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $8, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 144(BX)
	PSRLL $16, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLL $16, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 160(BX)
	PSRLL $8, X7
	PADDL X7, X0
	MOVO X0, 176(BX)
	MOVO 144(AX), X6
	MOVO X6, X8
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 192(BX)
	PSRLL $24, X8
	MOVO 160(AX), X9
	MOVO X9, X11
	PSLLL $8, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 208(BX)
	PSRLL $16, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLL $16, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 224(BX)
	PSRLL $8, X13
	PADDL X13, X0
	MOVO X0, 240(BX)
	MOVO 192(AX), X12
	MOVO X12, X14
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 256(BX)
	PSRLL $24, X14
	MOVO 208(AX), X15
	MOVO X15, X3
	PSLLL $8, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 272(BX)
	PSRLL $16, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLL $16, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 288(BX)
	PSRLL $8, X4
	PADDL X4, X0
	MOVO X0, 304(BX)
	MOVO 240(AX), X5
	MOVO X5, X7
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 320(BX)
	PSRLL $24, X7
	MOVO 256(AX), X6
	MOVO X6, X9
	PSLLL $8, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 336(BX)
	PSRLL $16, X9
	MOVO 272(AX), X8
	MOVO X8, X10
	PSLLL $16, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 352(BX)
	PSRLL $8, X10
	PADDL X10, X0
	MOVO X0, 368(BX)
	MOVO 288(AX), X11
	MOVO X11, X13
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 384(BX)
	PSRLL $24, X13
	MOVO 304(AX), X12
	MOVO X12, X15
	PSLLL $8, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 400(BX)
	PSRLL $16, X15
	MOVO 320(AX), X14
	MOVO X14, X2
	PSLLL $16, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	PSRLL $8, X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO 336(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $24, X4
	MOVO 352(AX), X5
	MOVO X5, X6
	PSLLL $8, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $16, X6
	MOVO 368(AX), X7
	MOVO X7, X8
	PSLLL $16, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 480(BX)
	PSRLL $8, X8
	PADDL X8, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_25(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_25(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $33554431, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $25, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $7, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $18, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $14, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $11, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $21, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	MOVO X10, X11
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	PSRLL $29, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLL $3, X12
	PAND X1, X12
	POR X12, X11
	PADDL X11, X0
	MOVO X0, 80(BX)
	PSRLL $22, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLL $10, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 96(BX)
	PSRLL $15, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLL $17, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 112(BX)
	PSRLL $8, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLL $24, X5
	PAND X1, X5
	POR X5, X3
	PADDL X3, X0
	MOVO X0, 128(BX)
	MOVO X4, X7
	PSRLL $1, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 144(BX)
	PSRLL $26, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLL $6, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 160(BX)
	PSRLL $19, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLL $13, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 176(BX)
	PSRLL $12, X10
	MOVO 160(AX), X12
	MOVO X12, X11
	PSLLL $20, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 192(BX)
	MOVO X11, X14
	PSRLL $5, X11
	PAND X1, X11
	PADDL X11, X0
	MOVO X0, 208(BX)
	PSRLL $30, X14
	MOVO 176(AX), X13
	MOVO X13, X2
	PSLLL $2, X13
	PAND X1, X13
	POR X13, X14
	PADDL X14, X0
	MOVO X0, 224(BX)
	PSRLL $23, X2
	MOVO 192(AX), X15
	MOVO X15, X5
	PSLLL $9, X15
	PAND X1, X15
	POR X15, X2
	PADDL X2, X0
	MOVO X0, 240(BX)
	PSRLL $16, X5
	MOVO 208(AX), X3
	MOVO X3, X4
	PSLLL $16, X3
	PAND X1, X3
	POR X3, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $9, X4
	MOVO 224(AX), X6
	MOVO X6, X7
	PSLLL $23, X6
	PAND X1, X6
	POR X6, X4
	PADDL X4, X0
	MOVO X0, 272(BX)
	MOVO X7, X8
	PSRLL $2, X7
	PAND X1, X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	PSRLL $27, X8
	MOVO 240(AX), X9
	MOVO X9, X12
	PSLLL $5, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	PSRLL $20, X12
	MOVO 256(AX), X10
	MOVO X10, X11
	PSLLL $12, X10
	PAND X1, X10
	POR X10, X12
	PADDL X12, X0
	MOVO X0, 320(BX)
	PSRLL $13, X11
	MOVO 272(AX), X13
	MOVO X13, X14
	PSLLL $19, X13
	PAND X1, X13
	POR X13, X11
	PADDL X11, X0
	MOVO X0, 336(BX)
	MOVO X14, X15
	PSRLL $6, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 352(BX)
	PSRLL $31, X15
	MOVO 288(AX), X2
	MOVO X2, X3
	PSLLL $1, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 368(BX)
	PSRLL $24, X3
	MOVO 304(AX), X5
	MOVO X5, X6
	PSLLL $8, X5
	PAND X1, X5
	POR X5, X3
	PADDL X3, X0
	MOVO X0, 384(BX)
	PSRLL $17, X6
	MOVO 320(AX), X4
	MOVO X4, X7
	PSLLL $15, X4
	PAND X1, X4
	POR X4, X6
	PADDL X6, X0
	MOVO X0, 400(BX)
	PSRLL $10, X7
	MOVO 336(AX), X9
	MOVO X9, X8
	PSLLL $22, X9
	PAND X1, X9
	POR X9, X7
	PADDL X7, X0
	MOVO X0, 416(BX)
	MOVO X8, X10
	PSRLL $3, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 432(BX)
	PSRLL $28, X10
	MOVO 352(AX), X12
	MOVO X12, X13
	PSLLL $4, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 448(BX)
	PSRLL $21, X13
	MOVO 368(AX), X11
	MOVO X11, X14
	PSLLL $11, X11
	PAND X1, X11
	POR X11, X13
	PADDL X13, X0
	MOVO X0, 464(BX)
	PSRLL $14, X14
	MOVO 384(AX), X2
	MOVO X2, X15
	PSLLL $18, X2
	PAND X1, X2
	POR X2, X14
	PADDL X14, X0
	MOVO X0, 480(BX)
	PSRLL $7, X15
	PADDL X15, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_26(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_26(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $67108863, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $26, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $6, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $20, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $12, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $14, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $18, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $8, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $24, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	MOVO X12, X13
	PSRLL $2, X12
	PAND X1, X12
	PADDL X12, X0
	MOVO X0, 80(BX)
	PSRLL $28, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLL $4, X14
	PAND X1, X14
	POR X14, X13
	PADDL X13, X0
	MOVO X0, 96(BX)
	PSRLL $22, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLL $10, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 112(BX)
	PSRLL $16, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLL $16, X5
	PAND X1, X5
	POR X5, X3
	PADDL X3, X0
	MOVO X0, 128(BX)
	PSRLL $10, X4
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLL $22, X7
	PAND X1, X7
	POR X7, X4
	PADDL X4, X0
	MOVO X0, 144(BX)
	MOVO X6, X9
	PSRLL $4, X6
	PAND X1, X6
	PADDL X6, X0
	MOVO X0, 160(BX)
	PSRLL $30, X9
	MOVO 144(AX), X8
	MOVO X8, X11
	PSLLL $2, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 176(BX)
	PSRLL $24, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLL $8, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 192(BX)
	PSRLL $18, X12
	MOVO 176(AX), X14
	MOVO X14, X13
	PSLLL $14, X14
	PAND X1, X14
	POR X14, X12
	PADDL X12, X0
	MOVO X0, 208(BX)
	PSRLL $12, X13
	MOVO 192(AX), X2
	MOVO X2, X15
	PSLLL $20, X2
	PAND X1, X2
	POR X2, X13
	PADDL X13, X0
	MOVO X0, 224(BX)
	PSRLL $6, X15
	PADDL X15, X0
	MOVO X0, 240(BX)
	MOVO 208(AX), X5
	MOVO X5, X3
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $26, X3
	MOVO 224(AX), X7
	MOVO X7, X4
	PSLLL $6, X7
	PAND X1, X7
	POR X7, X3
	PADDL X3, X0
	MOVO X0, 272(BX)
	PSRLL $20, X4
	MOVO 240(AX), X6
	MOVO X6, X8
	PSLLL $12, X6
	PAND X1, X6
	POR X6, X4
	PADDL X4, X0
	MOVO X0, 288(BX)
	PSRLL $14, X8
	MOVO 256(AX), X9
	MOVO X9, X10
	PSLLL $18, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	PSRLL $8, X10
	MOVO 272(AX), X11
	MOVO X11, X14
	PSLLL $24, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 320(BX)
	MOVO X14, X12
	PSRLL $2, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 336(BX)
	PSRLL $28, X12
	MOVO 288(AX), X2
	MOVO X2, X13
	PSLLL $4, X2
	PAND X1, X2
	POR X2, X12
	PADDL X12, X0
	MOVO X0, 352(BX)
	PSRLL $22, X13
	MOVO 304(AX), X15
	MOVO X15, X5
	PSLLL $10, X15
	PAND X1, X15
	POR X15, X13
	PADDL X13, X0
	MOVO X0, 368(BX)
	PSRLL $16, X5
	MOVO 320(AX), X7
	MOVO X7, X3
	PSLLL $16, X7
	PAND X1, X7
	POR X7, X5
	PADDL X5, X0
	MOVO X0, 384(BX)
	PSRLL $10, X3
	MOVO 336(AX), X6
	MOVO X6, X4
	PSLLL $22, X6
	PAND X1, X6
	POR X6, X3
	PADDL X3, X0
	MOVO X0, 400(BX)
	MOVO X4, X9
	PSRLL $4, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 416(BX)
	PSRLL $30, X9
	MOVO 352(AX), X8
	MOVO X8, X11
	PSLLL $2, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 432(BX)
	PSRLL $24, X11
	MOVO 368(AX), X10
	MOVO X10, X14
	PSLLL $8, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 448(BX)
	PSRLL $18, X14
	MOVO 384(AX), X2
	MOVO X2, X12
	PSLLL $14, X2
	PAND X1, X2
	POR X2, X14
	PADDL X14, X0
	MOVO X0, 464(BX)
	PSRLL $12, X12
	MOVO 400(AX), X15
	MOVO X15, X13
	PSLLL $20, X15
	PAND X1, X15
	POR X15, X12
	PADDL X12, X0
	MOVO X0, 480(BX)
	PSRLL $6, X13
	PADDL X13, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_27(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_27(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $134217727, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $27, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $5, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $22, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $10, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $17, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $15, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $12, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $20, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	PSRLL $7, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $25, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 80(BX)
	MOVO X14, X15
	PSRLL $2, X14
	PAND X1, X14
	PADDL X14, X0
	MOVO X0, 96(BX)
	PSRLL $29, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLL $3, X2
	PAND X1, X2
	POR X2, X15
	PADDL X15, X0
	MOVO X0, 112(BX)
	PSRLL $24, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLL $8, X5
	PAND X1, X5
	POR X5, X3
	PADDL X3, X0
	MOVO X0, 128(BX)
	PSRLL $19, X4
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLL $13, X7
	PAND X1, X7
	POR X7, X4
	PADDL X4, X0
	MOVO X0, 144(BX)
	PSRLL $14, X6
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLL $18, X9
	PAND X1, X9
	POR X9, X6
	PADDL X6, X0
	MOVO X0, 160(BX)
	PSRLL $9, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLL $23, X11
	PAND X1, X11
	POR X11, X8
	PADDL X8, X0
	MOVO X0, 176(BX)
	MOVO X10, X13
	PSRLL $4, X10
	PAND X1, X10
	PADDL X10, X0
	MOVO X0, 192(BX)
	PSRLL $31, X13
	MOVO 176(AX), X12
	MOVO X12, X14
	PSLLL $1, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 208(BX)
	PSRLL $26, X14
	MOVO 192(AX), X2
	MOVO X2, X15
	PSLLL $6, X2
	PAND X1, X2
	POR X2, X14
	PADDL X14, X0
	MOVO X0, 224(BX)
	PSRLL $21, X15
	MOVO 208(AX), X5
	MOVO X5, X3
	PSLLL $11, X5
	PAND X1, X5
	POR X5, X15
	PADDL X15, X0
	MOVO X0, 240(BX)
	PSRLL $16, X3
	MOVO 224(AX), X7
	MOVO X7, X4
	PSLLL $16, X7
	PAND X1, X7
	POR X7, X3
	PADDL X3, X0
	MOVO X0, 256(BX)
	PSRLL $11, X4
	MOVO 240(AX), X9
	MOVO X9, X6
	PSLLL $21, X9
	PAND X1, X9
	POR X9, X4
	PADDL X4, X0
	MOVO X0, 272(BX)
	PSRLL $6, X6
	MOVO 256(AX), X11
	MOVO X11, X8
	PSLLL $26, X11
	PAND X1, X11
	POR X11, X6
	PADDL X6, X0
	MOVO X0, 288(BX)
	MOVO X8, X10
	PSRLL $1, X8
	PAND X1, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	PSRLL $28, X10
	MOVO 272(AX), X12
	MOVO X12, X13
	PSLLL $4, X12
	PAND X1, X12
	POR X12, X10
	PADDL X10, X0
	MOVO X0, 320(BX)
	PSRLL $23, X13
	MOVO 288(AX), X2
	MOVO X2, X14
	PSLLL $9, X2
	PAND X1, X2
	POR X2, X13
	PADDL X13, X0
	MOVO X0, 336(BX)
	PSRLL $18, X14
	MOVO 304(AX), X5
	MOVO X5, X15
	PSLLL $14, X5
	PAND X1, X5
	POR X5, X14
	PADDL X14, X0
	MOVO X0, 352(BX)
	PSRLL $13, X15
	MOVO 320(AX), X7
	MOVO X7, X3
	PSLLL $19, X7
	PAND X1, X7
	POR X7, X15
	PADDL X15, X0
	MOVO X0, 368(BX)
	PSRLL $8, X3
	MOVO 336(AX), X9
	MOVO X9, X4
	PSLLL $24, X9
	PAND X1, X9
	POR X9, X3
	PADDL X3, X0
	MOVO X0, 384(BX)
	MOVO X4, X11
	PSRLL $3, X4
	PAND X1, X4
	PADDL X4, X0
	MOVO X0, 400(BX)
	PSRLL $30, X11
	MOVO 352(AX), X6
	MOVO X6, X8
	PSLLL $2, X6
	PAND X1, X6
	POR X6, X11
	PADDL X11, X0
	MOVO X0, 416(BX)
	PSRLL $25, X8
	MOVO 368(AX), X12
	MOVO X12, X10
	PSLLL $7, X12
	PAND X1, X12
	POR X12, X8
	PADDL X8, X0
	MOVO X0, 432(BX)
	PSRLL $20, X10
	MOVO 384(AX), X2
	MOVO X2, X13
	PSLLL $12, X2
	PAND X1, X2
	POR X2, X10
	PADDL X10, X0
	MOVO X0, 448(BX)
	PSRLL $15, X13
	MOVO 400(AX), X5
	MOVO X5, X14
	PSLLL $17, X5
	PAND X1, X5
	POR X5, X13
	PADDL X13, X0
	MOVO X0, 464(BX)
	PSRLL $10, X14
	MOVO 416(AX), X7
	MOVO X7, X15
	PSLLL $22, X7
	PAND X1, X7
	POR X7, X14
	PADDL X14, X0
	MOVO X0, 480(BX)
	PSRLL $5, X15
	PADDL X15, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_28(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_28(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $268435455, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $28, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $24, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $8, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $20, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $12, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $16, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $16, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	PSRLL $12, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $20, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 80(BX)
	PSRLL $8, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLL $24, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 96(BX)
	PSRLL $4, X2
	PADDL X2, X0
	MOVO X0, 112(BX)
	MOVO 112(AX), X3
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 128(BX)
	PSRLL $28, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLL $4, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 144(BX)
	PSRLL $24, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLL $8, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 160(BX)
	PSRLL $20, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLL $12, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 176(BX)
	PSRLL $16, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLL $16, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 192(BX)
	PSRLL $12, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLL $20, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 208(BX)
	PSRLL $8, X15
	MOVO 208(AX), X14
	MOVO X14, X2
	PSLLL $24, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 224(BX)
	PSRLL $4, X2
	PADDL X2, X0
	MOVO X0, 240(BX)
	MOVO 224(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 256(BX)
	PSRLL $28, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLL $4, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 272(BX)
	PSRLL $24, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLL $8, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 288(BX)
	PSRLL $20, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLL $12, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	PSRLL $16, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLL $16, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 320(BX)
	PSRLL $12, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLL $20, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 336(BX)
	PSRLL $8, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLL $24, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 352(BX)
	PSRLL $4, X2
	PADDL X2, X0
	MOVO X0, 368(BX)
	MOVO 336(AX), X3
	MOVO X3, X5
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 384(BX)
	PSRLL $28, X5
	MOVO 352(AX), X4
	MOVO X4, X7
	PSLLL $4, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 400(BX)
	PSRLL $24, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLL $8, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 416(BX)
	PSRLL $20, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLL $12, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 432(BX)
	PSRLL $16, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLL $16, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 448(BX)
	PSRLL $12, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLL $20, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 464(BX)
	PSRLL $8, X15
	MOVO 432(AX), X14
	MOVO X14, X2
	PSLLL $24, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 480(BX)
	PSRLL $4, X2
	PADDL X2, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_29(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_29(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $536870911, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $29, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $3, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $26, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $6, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $23, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $9, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $20, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $12, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	PSRLL $17, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $15, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 80(BX)
	PSRLL $14, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLL $18, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 96(BX)
	PSRLL $11, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $21, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 112(BX)
	PSRLL $8, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLL $24, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 128(BX)
	PSRLL $5, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLL $27, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 144(BX)
	MOVO X9, X8
	PSRLL $2, X9
	PAND X1, X9
	PADDL X9, X0
	MOVO X0, 160(BX)
	PSRLL $31, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLL $1, X11
	PAND X1, X11
	POR X11, X8
	PADDL X8, X0
	MOVO X0, 176(BX)
	PSRLL $28, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLL $4, X13
	PAND X1, X13
	POR X13, X10
	PADDL X10, X0
	MOVO X0, 192(BX)
	PSRLL $25, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLL $7, X15
	PAND X1, X15
	POR X15, X12
	PADDL X12, X0
	MOVO X0, 208(BX)
	PSRLL $22, X14
	MOVO 208(AX), X3
	MOVO X3, X2
	PSLLL $10, X3
	PAND X1, X3
	POR X3, X14
	PADDL X14, X0
	MOVO X0, 224(BX)
	PSRLL $19, X2
	MOVO 224(AX), X4
	MOVO X4, X5
	PSLLL $13, X4
	PAND X1, X4
	POR X4, X2
	PADDL X2, X0
	MOVO X0, 240(BX)
	PSRLL $16, X5
	MOVO 240(AX), X6
	MOVO X6, X7
	PSLLL $16, X6
	PAND X1, X6
	POR X6, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $13, X7
	MOVO 256(AX), X9
	MOVO X9, X11
	PSLLL $19, X9
	PAND X1, X9
	POR X9, X7
	PADDL X7, X0
	MOVO X0, 272(BX)
	PSRLL $10, X11
	MOVO 272(AX), X8
	MOVO X8, X13
	PSLLL $22, X8
	PAND X1, X8
	POR X8, X11
	PADDL X11, X0
	MOVO X0, 288(BX)
	PSRLL $7, X13
	MOVO 288(AX), X10
	MOVO X10, X15
	PSLLL $25, X10
	PAND X1, X10
	POR X10, X13
	PADDL X13, X0
	MOVO X0, 304(BX)
	PSRLL $4, X15
	MOVO 304(AX), X12
	MOVO X12, X3
	PSLLL $28, X12
	PAND X1, X12
	POR X12, X15
	PADDL X15, X0
	MOVO X0, 320(BX)
	MOVO X3, X14
	PSRLL $1, X3
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 336(BX)
	PSRLL $30, X14
	MOVO 320(AX), X4
	MOVO X4, X2
	PSLLL $2, X4
	PAND X1, X4
	POR X4, X14
	PADDL X14, X0
	MOVO X0, 352(BX)
	PSRLL $27, X2
	MOVO 336(AX), X6
	MOVO X6, X5
	PSLLL $5, X6
	PAND X1, X6
	POR X6, X2
	PADDL X2, X0
	MOVO X0, 368(BX)
	PSRLL $24, X5
	MOVO 352(AX), X9
	MOVO X9, X7
	PSLLL $8, X9
	PAND X1, X9
	POR X9, X5
	PADDL X5, X0
	MOVO X0, 384(BX)
	PSRLL $21, X7
	MOVO 368(AX), X8
	MOVO X8, X11
	PSLLL $11, X8
	PAND X1, X8
	POR X8, X7
	PADDL X7, X0
	MOVO X0, 400(BX)
	PSRLL $18, X11
	MOVO 384(AX), X10
	MOVO X10, X13
	PSLLL $14, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 416(BX)
	PSRLL $15, X13
	MOVO 400(AX), X12
	MOVO X12, X15
	PSLLL $17, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 432(BX)
	PSRLL $12, X15
	MOVO 416(AX), X3
	MOVO X3, X4
	PSLLL $20, X3
	PAND X1, X3
	POR X3, X15
	PADDL X15, X0
	MOVO X0, 448(BX)
	PSRLL $9, X4
	MOVO 432(AX), X14
	MOVO X14, X6
	PSLLL $23, X14
	PAND X1, X14
	POR X14, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $6, X6
	MOVO 448(AX), X2
	MOVO X2, X9
	PSLLL $26, X2
	PAND X1, X2
	POR X2, X6
	PADDL X6, X0
	MOVO X0, 480(BX)
	PSRLL $3, X9
	PADDL X9, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_30(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_30(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1073741823, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $30, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $2, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $28, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $4, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $26, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $6, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $24, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $8, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	PSRLL $22, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $10, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 80(BX)
	PSRLL $20, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLL $12, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 96(BX)
	PSRLL $18, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $14, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 112(BX)
	PSRLL $16, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLL $16, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 128(BX)
	PSRLL $14, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLL $18, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 144(BX)
	PSRLL $12, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLL $20, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 160(BX)
	PSRLL $10, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLL $22, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 176(BX)
	PSRLL $8, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLL $24, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 192(BX)
	PSRLL $6, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLL $26, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 208(BX)
	PSRLL $4, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLL $28, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $2, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO 240(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	PSRLL $30, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLL $2, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	PSRLL $28, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLL $4, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 288(BX)
	PSRLL $26, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLL $6, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 304(BX)
	PSRLL $24, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLL $8, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 320(BX)
	PSRLL $22, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLL $10, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 336(BX)
	PSRLL $20, X2
	MOVO 336(AX), X3
	MOVO X3, X4
	PSLLL $12, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 352(BX)
	PSRLL $18, X4
	MOVO 352(AX), X5
	MOVO X5, X7
	PSLLL $14, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 368(BX)
	PSRLL $16, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLL $16, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 384(BX)
	PSRLL $14, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLL $18, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 400(BX)
	PSRLL $12, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLL $20, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 416(BX)
	PSRLL $10, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLL $22, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 432(BX)
	PSRLL $8, X15
	MOVO 432(AX), X14
	MOVO X14, X3
	PSLLL $24, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 448(BX)
	PSRLL $6, X3
	MOVO 448(AX), X2
	MOVO X2, X5
	PSLLL $26, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 464(BX)
	PSRLL $4, X5
	MOVO 464(AX), X4
	MOVO X4, X6
	PSLLL $28, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	PSRLL $2, X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_31(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_31(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2147483647, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	PSRLL $31, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLL $1, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	PSRLL $30, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLL $2, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 32(BX)
	PSRLL $29, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLL $3, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 48(BX)
	PSRLL $28, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLL $4, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 64(BX)
	PSRLL $27, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLL $5, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 80(BX)
	PSRLL $26, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLL $6, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 96(BX)
	PSRLL $25, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLL $7, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 112(BX)
	PSRLL $24, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLL $8, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 128(BX)
	PSRLL $23, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLL $9, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 144(BX)
	PSRLL $22, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLL $10, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 160(BX)
	PSRLL $21, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLL $11, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 176(BX)
	PSRLL $20, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLL $12, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 192(BX)
	PSRLL $19, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLL $13, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 208(BX)
	PSRLL $18, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLL $14, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	PSRLL $17, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLL $15, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	PSRLL $16, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLL $16, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 256(BX)
	PSRLL $15, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLL $17, X9
	PAND X1, X9
	POR X9, X8
	PADDL X8, X0
	MOVO X0, 272(BX)
	PSRLL $14, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLL $18, X11
	PAND X1, X11
	POR X11, X10
	PADDL X10, X0
	MOVO X0, 288(BX)
	PSRLL $13, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLL $19, X13
	PAND X1, X13
	POR X13, X12
	PADDL X12, X0
	MOVO X0, 304(BX)
	PSRLL $12, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLL $20, X15
	PAND X1, X15
	POR X15, X14
	PADDL X14, X0
	MOVO X0, 320(BX)
	PSRLL $11, X2
	MOVO 336(AX), X3
	MOVO X3, X5
	PSLLL $21, X3
	PAND X1, X3
	POR X3, X2
	PADDL X2, X0
	MOVO X0, 336(BX)
	PSRLL $10, X5
	MOVO 352(AX), X4
	MOVO X4, X7
	PSLLL $22, X4
	PAND X1, X4
	POR X4, X5
	PADDL X5, X0
	MOVO X0, 352(BX)
	PSRLL $9, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLL $23, X6
	PAND X1, X6
	POR X6, X7
	PADDL X7, X0
	MOVO X0, 368(BX)
	PSRLL $8, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLL $24, X8
	PAND X1, X8
	POR X8, X9
	PADDL X9, X0
	MOVO X0, 384(BX)
	PSRLL $7, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLL $25, X10
	PAND X1, X10
	POR X10, X11
	PADDL X11, X0
	MOVO X0, 400(BX)
	PSRLL $6, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLL $26, X12
	PAND X1, X12
	POR X12, X13
	PADDL X13, X0
	MOVO X0, 416(BX)
	PSRLL $5, X15
	MOVO 432(AX), X14
	MOVO X14, X3
	PSLLL $27, X14
	PAND X1, X14
	POR X14, X15
	PADDL X15, X0
	MOVO X0, 432(BX)
	PSRLL $4, X3
	MOVO 448(AX), X2
	MOVO X2, X4
	PSLLL $28, X2
	PAND X1, X2
	POR X2, X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	PSRLL $3, X4
	MOVO 464(AX), X5
	MOVO X5, X6
	PSLLL $29, X5
	PAND X1, X5
	POR X5, X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	PSRLL $2, X6
	MOVO 480(AX), X7
	MOVO X7, X8
	PSLLL $30, X7
	PAND X1, X7
	POR X7, X6
	PADDL X6, X0
	MOVO X0, 480(BX)
	PSRLL $1, X8
	PADDL X8, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack32_32(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack32_32(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $2, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4294967295, SI
	MOVQ SI, X2
	PSHUFL $0, X2, X1
	MOVO 0(AX), X3
	PADDL X3, X0
	MOVO X0, 0(BX)
	MOVO 16(AX), X4
	PADDL X4, X0
	MOVO X0, 16(BX)
	MOVO 32(AX), X5
	PADDL X5, X0
	MOVO X0, 32(BX)
	MOVO 48(AX), X6
	PADDL X6, X0
	MOVO X0, 48(BX)
	MOVO 64(AX), X7
	PADDL X7, X0
	MOVO X0, 64(BX)
	MOVO 80(AX), X8
	PADDL X8, X0
	MOVO X0, 80(BX)
	MOVO 96(AX), X9
	PADDL X9, X0
	MOVO X0, 96(BX)
	MOVO 112(AX), X10
	PADDL X10, X0
	MOVO X0, 112(BX)
	MOVO 128(AX), X11
	PADDL X11, X0
	MOVO X0, 128(BX)
	MOVO 144(AX), X12
	PADDL X12, X0
	MOVO X0, 144(BX)
	MOVO 160(AX), X13
	PADDL X13, X0
	MOVO X0, 160(BX)
	MOVO 176(AX), X14
	PADDL X14, X0
	MOVO X0, 176(BX)
	MOVO 192(AX), X15
	PADDL X15, X0
	MOVO X0, 192(BX)
	MOVO 208(AX), X2
	PADDL X2, X0
	MOVO X0, 208(BX)
	MOVO 224(AX), X3
	PADDL X3, X0
	MOVO X0, 224(BX)
	MOVO 240(AX), X4
	PADDL X4, X0
	MOVO X0, 240(BX)
	MOVO 256(AX), X5
	PADDL X5, X0
	MOVO X0, 256(BX)
	MOVO 272(AX), X6
	PADDL X6, X0
	MOVO X0, 272(BX)
	MOVO 288(AX), X7
	PADDL X7, X0
	MOVO X0, 288(BX)
	MOVO 304(AX), X8
	PADDL X8, X0
	MOVO X0, 304(BX)
	MOVO 320(AX), X9
	PADDL X9, X0
	MOVO X0, 320(BX)
	MOVO 336(AX), X10
	PADDL X10, X0
	MOVO X0, 336(BX)
	MOVO 352(AX), X11
	PADDL X11, X0
	MOVO X0, 352(BX)
	MOVO 368(AX), X12
	PADDL X12, X0
	MOVO X0, 368(BX)
	MOVO 384(AX), X13
	PADDL X13, X0
	MOVO X0, 384(BX)
	MOVO 400(AX), X14
	PADDL X14, X0
	MOVO X0, 400(BX)
	MOVO 416(AX), X15
	PADDL X15, X0
	MOVO X0, 416(BX)
	MOVO 432(AX), X2
	PADDL X2, X0
	MOVO X0, 432(BX)
	MOVO 448(AX), X3
	PADDL X3, X0
	MOVO X0, 448(BX)
	MOVO 464(AX), X4
	PADDL X4, X0
	MOVO X0, 464(BX)
	MOVO 480(AX), X5
	PADDL X5, X0
	MOVO X0, 480(BX)
	MOVO 496(AX), X6
	PADDL X6, X0
	MOVO X0, 496(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_1(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_1(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $1, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $2, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $3, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $5, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $6, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $7, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $11, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $12, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $13, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	PSRLQ $14, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $15, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $17, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $18, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $19, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $20, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $21, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	PSRLQ $22, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	PSRLQ $23, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $24, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $25, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $26, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $27, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $29, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $30, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $31, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $33, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $34, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $35, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $36, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $37, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $38, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $39, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $40, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $41, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $42, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $43, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $44, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $45, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $46, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $47, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $48, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $49, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $50, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	PSRLQ $51, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $52, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $53, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $54, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $55, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $56, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $57, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $58, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $59, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $60, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $61, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $62, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $63, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_2(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_2(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $3, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $2, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $4, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $6, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $10, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $12, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $14, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $18, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $20, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $22, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $26, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $30, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $34, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $36, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $38, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $40, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $42, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	PSRLQ $44, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	PSRLQ $46, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $48, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $50, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $52, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $54, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLQ $56, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $58, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $60, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $62, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 16(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $2, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $10, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $12, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $14, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $18, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $20, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $22, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $24, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $26, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $28, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $30, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $34, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $36, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	PSRLQ $38, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $40, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $42, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $44, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $46, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $48, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $50, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $52, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $54, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $56, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $58, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $60, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $62, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_3(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_3(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $7, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $3, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $6, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $9, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $12, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $15, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $18, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $21, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $24, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $27, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $30, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $33, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $36, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $39, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	PSRLQ $42, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $45, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $48, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $51, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $54, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $57, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	PSRLQ $60, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $63, X10
	MOVO 16(AX), X11
	MOVO X11, X12
	PSLLQ $1, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X2
	PSRLQ $2, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 352(BX)
	PSRLQ $5, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 368(BX)
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 384(BX)
	PSRLQ $11, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 400(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $14, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 416(BX)
	PSRLQ $17, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 432(BX)
	PSRLQ $20, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $23, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 464(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X11
	PSRLQ $26, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $29, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 512(BX)
	PSRLQ $35, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 528(BX)
	MOVO X11, X10
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $38, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 544(BX)
	PSRLQ $41, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	PSRLQ $44, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 576(BX)
	PSRLQ $47, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 592(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $50, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $53, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 640(BX)
	PSRLQ $59, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 656(BX)
	PSRLQ $62, X4
	MOVO 32(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 672(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X11
	PSRLQ $1, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 688(BX)
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 704(BX)
	PSRLQ $7, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 720(BX)
	PSRLQ $10, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 736(BX)
	MOVO X11, X10
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $13, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 768(BX)
	PSRLQ $19, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 784(BX)
	PSRLQ $22, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 800(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X5
	PSRLQ $25, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 816(BX)
	PSRLQ $28, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 832(BX)
	PSRLQ $31, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 848(BX)
	PSRLQ $34, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 864(BX)
	MOVO X5, X4
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $37, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 896(BX)
	PSRLQ $43, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 912(BX)
	PSRLQ $46, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 928(BX)
	MOVO X8, X9
	MOVO X8, X11
	MOVO X8, X10
	MOVO X8, X12
	PSRLQ $49, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 944(BX)
	PSRLQ $52, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	PSRLQ $55, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	PSRLQ $58, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 992(BX)
	PSRLQ $61, X12
	PADDQ X12, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_4(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_4(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $15, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $4, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $20, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $24, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $28, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $36, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $40, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $44, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $48, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $52, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	PSRLQ $56, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $60, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO 16(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $12, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	PSRLQ $24, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	PSRLQ $28, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $32, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $36, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $40, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $44, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLQ $48, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $52, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $56, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $60, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 32(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $4, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $8, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $20, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $24, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $28, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $36, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $40, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $44, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $48, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $52, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $56, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $60, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO 48(AX), X9
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	PSRLQ $12, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $20, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $28, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $32, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $36, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $40, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $44, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $48, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $52, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $56, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $60, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_5(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_5(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $31, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $5, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $10, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $15, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $20, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $25, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $30, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $35, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $40, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $45, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $50, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $55, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	PSRLQ $60, X15
	MOVO 16(AX), X2
	MOVO X2, X3
	PSLLQ $4, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $1, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 208(BX)
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 224(BX)
	PSRLQ $11, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 256(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $21, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 272(BX)
	PSRLQ $26, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 288(BX)
	PSRLQ $31, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 304(BX)
	PSRLQ $36, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X2
	PSRLQ $41, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 336(BX)
	PSRLQ $46, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 352(BX)
	PSRLQ $51, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 384(BX)
	PSRLQ $61, X2
	MOVO 32(AX), X15
	MOVO X15, X3
	PSLLQ $3, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 400(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $2, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 416(BX)
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 432(BX)
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 448(BX)
	PSRLQ $17, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 464(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $22, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $27, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $37, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $42, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 544(BX)
	PSRLQ $47, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 560(BX)
	PSRLQ $52, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 576(BX)
	PSRLQ $57, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 592(BX)
	PSRLQ $62, X15
	MOVO 48(AX), X2
	MOVO X2, X3
	PSLLQ $2, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 608(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $3, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 624(BX)
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 640(BX)
	PSRLQ $13, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 656(BX)
	PSRLQ $18, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 672(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $23, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 688(BX)
	PSRLQ $28, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 704(BX)
	PSRLQ $33, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 720(BX)
	PSRLQ $38, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 736(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X2
	PSRLQ $43, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 768(BX)
	PSRLQ $53, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 784(BX)
	PSRLQ $58, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 800(BX)
	PSRLQ $63, X2
	MOVO 64(AX), X15
	MOVO X15, X3
	PSLLQ $1, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 816(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 832(BX)
	PSRLQ $9, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 848(BX)
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 864(BX)
	PSRLQ $19, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 880(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $24, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 896(BX)
	PSRLQ $29, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	PSRLQ $34, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	PSRLQ $39, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 944(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $44, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 960(BX)
	PSRLQ $49, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 976(BX)
	PSRLQ $54, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 992(BX)
	PSRLQ $59, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_6(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_6(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $63, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $18, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $24, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $30, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $36, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $42, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $48, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $54, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $60, X13
	MOVO 16(AX), X14
	MOVO X14, X15
	PSLLQ $4, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $2, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 176(BX)
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 192(BX)
	PSRLQ $14, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 208(BX)
	PSRLQ $20, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 224(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $26, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 256(BX)
	PSRLQ $38, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 272(BX)
	PSRLQ $44, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 288(BX)
	MOVO X9, X10
	MOVO X9, X11
	PSRLQ $50, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 304(BX)
	PSRLQ $56, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	PSRLQ $62, X11
	MOVO 32(AX), X12
	MOVO X12, X14
	PSLLQ $2, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 336(BX)
	MOVO X14, X13
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 368(BX)
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 384(BX)
	PSRLQ $22, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 400(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 416(BX)
	PSRLQ $34, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 432(BX)
	PSRLQ $40, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 448(BX)
	PSRLQ $46, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 464(BX)
	MOVO X7, X8
	PSRLQ $52, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $58, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	MOVO 48(AX), X9
	MOVO X9, X10
	MOVO X9, X12
	MOVO X9, X11
	MOVO X9, X14
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	PSRLQ $12, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $18, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 560(BX)
	MOVO X14, X13
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 576(BX)
	PSRLQ $30, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 592(BX)
	PSRLQ $36, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 608(BX)
	PSRLQ $42, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 624(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLQ $48, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 640(BX)
	PSRLQ $54, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 656(BX)
	PSRLQ $60, X5
	MOVO 64(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 672(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X12
	PSRLQ $2, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 688(BX)
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 704(BX)
	PSRLQ $14, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 720(BX)
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 736(BX)
	MOVO X12, X11
	MOVO X12, X14
	MOVO X12, X13
	MOVO X12, X15
	PSRLQ $26, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 768(BX)
	PSRLQ $38, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 784(BX)
	PSRLQ $44, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 800(BX)
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $50, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 816(BX)
	PSRLQ $56, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	PSRLQ $62, X3
	MOVO 80(AX), X4
	MOVO X4, X6
	PSLLQ $2, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 848(BX)
	MOVO X6, X5
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 864(BX)
	PSRLQ $10, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 880(BX)
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 896(BX)
	PSRLQ $22, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	MOVO X9, X10
	MOVO X9, X12
	MOVO X9, X11
	MOVO X9, X14
	PSRLQ $28, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	PSRLQ $34, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 944(BX)
	PSRLQ $40, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	PSRLQ $46, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	MOVO X14, X13
	PSRLQ $52, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $58, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_7(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_7(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $127, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $21, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PSRLQ $28, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $35, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $42, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $49, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X11, X12
	PSRLQ $56, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $63, X12
	MOVO 16(AX), X13
	MOVO X13, X14
	PSLLQ $1, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $6, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 160(BX)
	PSRLQ $13, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 176(BX)
	PSRLQ $20, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 192(BX)
	PSRLQ $27, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 208(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $34, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 224(BX)
	PSRLQ $41, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 256(BX)
	PSRLQ $55, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 272(BX)
	PSRLQ $62, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $2, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 288(BX)
	MOVO X10, X11
	MOVO X10, X13
	MOVO X10, X12
	MOVO X10, X14
	PSRLQ $5, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 304(BX)
	PSRLQ $12, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 320(BX)
	PSRLQ $19, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 336(BX)
	PSRLQ $26, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 352(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $33, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 384(BX)
	PSRLQ $47, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 400(BX)
	PSRLQ $54, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 416(BX)
	PSRLQ $61, X4
	MOVO 48(AX), X5
	MOVO X5, X6
	PSLLQ $3, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 432(BX)
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X8
	MOVO X6, X10
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 448(BX)
	PSRLQ $11, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 464(BX)
	PSRLQ $18, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 480(BX)
	PSRLQ $25, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	MOVO X10, X11
	MOVO X10, X13
	MOVO X10, X12
	MOVO X10, X14
	PSRLQ $32, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 512(BX)
	PSRLQ $39, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 528(BX)
	PSRLQ $46, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 544(BX)
	PSRLQ $53, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 560(BX)
	PSRLQ $60, X14
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLQ $4, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 576(BX)
	MOVO X2, X3
	MOVO X2, X5
	MOVO X2, X4
	MOVO X2, X6
	PSRLQ $3, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	PSRLQ $10, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 608(BX)
	PSRLQ $17, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 624(BX)
	PSRLQ $24, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 640(BX)
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X8
	MOVO X6, X10
	PSRLQ $31, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 656(BX)
	PSRLQ $38, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 672(BX)
	PSRLQ $45, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 688(BX)
	PSRLQ $52, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 704(BX)
	PSRLQ $59, X10
	MOVO 80(AX), X11
	MOVO X11, X13
	PSLLQ $5, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 720(BX)
	MOVO X13, X12
	MOVO X13, X15
	MOVO X13, X14
	MOVO X13, X2
	PSRLQ $2, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 736(BX)
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 768(BX)
	PSRLQ $23, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 784(BX)
	MOVO X2, X3
	MOVO X2, X5
	MOVO X2, X4
	MOVO X2, X6
	PSRLQ $30, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	PSRLQ $37, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 816(BX)
	PSRLQ $44, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 832(BX)
	PSRLQ $51, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 848(BX)
	PSRLQ $58, X6
	MOVO 96(AX), X7
	MOVO X7, X9
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 864(BX)
	MOVO X9, X8
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X13
	PSRLQ $1, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 880(BX)
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 896(BX)
	PSRLQ $15, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 912(BX)
	PSRLQ $22, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 928(BX)
	MOVO X13, X12
	MOVO X13, X15
	MOVO X13, X14
	MOVO X13, X2
	PSRLQ $29, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 944(BX)
	PSRLQ $36, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	PSRLQ $43, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 976(BX)
	PSRLQ $50, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $57, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_8(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_8(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $255, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $24, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $40, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $48, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $56, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO 16(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $8, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $40, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	PSRLQ $48, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $56, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO 32(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $40, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	PSRLQ $48, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	PSRLQ $56, X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO 48(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	MOVO X13, X3
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $24, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLQ $32, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $40, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $48, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $56, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 64(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	MOVO X7, X11
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $24, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $40, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $48, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $56, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO 80(AX), X15
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $24, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $40, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $48, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $56, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO 96(AX), X9
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	PSRLQ $32, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $40, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $48, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $56, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 112(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $24, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $40, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $48, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $56, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_9(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_9(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $511, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $9, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $18, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $27, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PSRLQ $36, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $45, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $54, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $63, X10
	MOVO 16(AX), X11
	MOVO X11, X12
	PSLLQ $1, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X2
	PSRLQ $8, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	PSRLQ $17, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 144(BX)
	PSRLQ $26, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 160(BX)
	PSRLQ $35, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 176(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLQ $44, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 192(BX)
	PSRLQ $53, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 208(BX)
	PSRLQ $62, X4
	MOVO 32(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 224(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X9
	MOVO X6, X11
	PSRLQ $7, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	PSRLQ $25, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 272(BX)
	PSRLQ $34, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 288(BX)
	MOVO X11, X10
	MOVO X11, X12
	PSRLQ $43, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 304(BX)
	PSRLQ $52, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	PSRLQ $61, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLQ $3, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	MOVO X14, X5
	PSRLQ $6, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	PSRLQ $24, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 384(BX)
	PSRLQ $33, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 400(BX)
	MOVO X5, X4
	MOVO X5, X6
	PSRLQ $42, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 416(BX)
	PSRLQ $51, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 432(BX)
	PSRLQ $60, X6
	MOVO 64(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 448(BX)
	MOVO X8, X9
	MOVO X8, X11
	MOVO X8, X10
	MOVO X8, X13
	PSRLQ $5, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 464(BX)
	PSRLQ $14, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 480(BX)
	PSRLQ $23, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 512(BX)
	MOVO X13, X12
	MOVO X13, X14
	PSRLQ $41, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $50, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $59, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $5, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	MOVO X2, X3
	MOVO X2, X5
	MOVO X2, X4
	MOVO X2, X7
	PSRLQ $4, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 576(BX)
	PSRLQ $13, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 592(BX)
	PSRLQ $22, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	PSRLQ $31, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 624(BX)
	MOVO X7, X6
	MOVO X7, X8
	PSRLQ $40, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 640(BX)
	PSRLQ $49, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 656(BX)
	PSRLQ $58, X8
	MOVO 96(AX), X9
	MOVO X9, X11
	PSLLQ $6, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 672(BX)
	MOVO X11, X10
	MOVO X11, X13
	MOVO X11, X12
	MOVO X11, X15
	PSRLQ $3, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 688(BX)
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 704(BX)
	PSRLQ $21, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $30, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 736(BX)
	MOVO X15, X14
	MOVO X15, X2
	PSRLQ $39, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 768(BX)
	PSRLQ $57, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $7, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	MOVO X5, X4
	MOVO X5, X7
	MOVO X5, X6
	MOVO X5, X9
	PSRLQ $2, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	PSRLQ $11, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 816(BX)
	PSRLQ $20, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 832(BX)
	PSRLQ $29, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 848(BX)
	MOVO X9, X8
	MOVO X9, X11
	PSRLQ $38, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 864(BX)
	PSRLQ $47, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X11
	MOVO 128(AX), X10
	MOVO X10, X13
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 896(BX)
	MOVO X13, X12
	MOVO X13, X15
	MOVO X13, X14
	MOVO X13, X3
	PSRLQ $1, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	PSRLQ $10, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 928(BX)
	PSRLQ $19, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 944(BX)
	PSRLQ $28, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 960(BX)
	MOVO X3, X2
	MOVO X3, X5
	PSRLQ $37, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 976(BX)
	PSRLQ $46, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $55, X5
	PADDQ X5, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_10(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_10(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1023, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $10, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $30, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $40, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $50, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $60, X9
	MOVO 16(AX), X10
	MOVO X10, X11
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X15
	PSRLQ $6, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	PSRLQ $26, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 144(BX)
	PSRLQ $36, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 160(BX)
	MOVO X15, X2
	PSRLQ $46, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 176(BX)
	PSRLQ $56, X2
	MOVO 32(AX), X3
	MOVO X3, X4
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 192(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $2, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 208(BX)
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 224(BX)
	PSRLQ $22, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	MOVO X8, X10
	MOVO X8, X9
	PSRLQ $42, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 272(BX)
	PSRLQ $52, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $62, X9
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 304(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X3
	PSRLQ $8, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 320(BX)
	PSRLQ $18, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 336(BX)
	PSRLQ $28, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $38, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	MOVO X3, X2
	PSRLQ $48, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $58, X2
	MOVO 64(AX), X4
	MOVO X4, X5
	PSLLQ $6, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 400(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X10
	PSRLQ $4, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 416(BX)
	PSRLQ $14, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 432(BX)
	PSRLQ $24, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 448(BX)
	PSRLQ $34, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 464(BX)
	MOVO X10, X11
	PSRLQ $44, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 480(BX)
	PSRLQ $54, X11
	PADDQ X11, X0
	MOVO X0, 496(BX)
	MOVO 80(AX), X9
	MOVO X9, X12
	MOVO X9, X13
	MOVO X9, X14
	MOVO X9, X15
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $10, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $20, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 544(BX)
	PSRLQ $30, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $40, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 576(BX)
	PSRLQ $50, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 592(BX)
	PSRLQ $60, X4
	MOVO 96(AX), X2
	MOVO X2, X5
	PSLLQ $4, X2
	PAND X1, X2
	POR X2, X4
	PADDQ X4, X0
	MOVO X0, 608(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X10
	PSRLQ $6, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 624(BX)
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 640(BX)
	PSRLQ $26, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 656(BX)
	PSRLQ $36, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 672(BX)
	MOVO X10, X11
	PSRLQ $46, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 688(BX)
	PSRLQ $56, X11
	MOVO 112(AX), X9
	MOVO X9, X12
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X11
	PADDQ X11, X0
	MOVO X0, 704(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	MOVO X12, X3
	PSRLQ $2, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 720(BX)
	PSRLQ $12, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 736(BX)
	PSRLQ $22, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 768(BX)
	MOVO X3, X2
	MOVO X3, X4
	PSRLQ $42, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 784(BX)
	PSRLQ $52, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	PSRLQ $62, X4
	MOVO 128(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 816(BX)
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X10
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 832(BX)
	PSRLQ $18, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 848(BX)
	PSRLQ $28, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 864(BX)
	PSRLQ $38, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 880(BX)
	MOVO X9, X11
	PSRLQ $48, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 896(BX)
	PSRLQ $58, X11
	MOVO 144(AX), X12
	MOVO X12, X13
	PSLLQ $6, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 912(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X3
	MOVO X13, X2
	PSRLQ $4, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	PSRLQ $14, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 944(BX)
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 960(BX)
	PSRLQ $34, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 976(BX)
	MOVO X2, X5
	PSRLQ $44, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $54, X5
	PADDQ X5, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_11(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_11(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2047, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $11, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $22, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $33, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	PSRLQ $44, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $55, X8
	MOVO 16(AX), X9
	MOVO X9, X10
	PSLLQ $9, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $2, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $13, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	PSRLQ $35, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 144(BX)
	MOVO X14, X15
	PSRLQ $46, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 160(BX)
	PSRLQ $57, X15
	MOVO 32(AX), X2
	MOVO X2, X3
	PSLLQ $7, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 176(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 192(BX)
	PSRLQ $15, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 208(BX)
	PSRLQ $26, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 224(BX)
	PSRLQ $37, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 240(BX)
	MOVO X7, X9
	PSRLQ $48, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	PSRLQ $59, X9
	MOVO 48(AX), X8
	MOVO X8, X10
	PSLLQ $5, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $17, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 304(BX)
	PSRLQ $28, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 320(BX)
	PSRLQ $39, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 336(BX)
	MOVO X14, X2
	PSRLQ $50, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $61, X2
	MOVO 64(AX), X15
	MOVO X15, X3
	PSLLQ $3, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $19, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 400(BX)
	PSRLQ $30, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 416(BX)
	PSRLQ $41, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 432(BX)
	MOVO X7, X8
	PSRLQ $52, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 448(BX)
	PSRLQ $63, X8
	MOVO 80(AX), X9
	MOVO X9, X10
	PSLLQ $1, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 464(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $10, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 480(BX)
	PSRLQ $21, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 512(BX)
	PSRLQ $43, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $54, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $10, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $1, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	PSRLQ $12, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	PSRLQ $23, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	PSRLQ $34, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	MOVO X6, X7
	PSRLQ $45, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X7
	MOVO 112(AX), X9
	MOVO X9, X8
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 640(BX)
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	MOVO X8, X13
	PSRLQ $3, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 656(BX)
	PSRLQ $14, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 672(BX)
	PSRLQ $25, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 688(BX)
	PSRLQ $36, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 704(BX)
	MOVO X13, X15
	PSRLQ $47, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $58, X15
	MOVO 128(AX), X14
	MOVO X14, X2
	PSLLQ $6, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 736(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $5, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $27, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 784(BX)
	PSRLQ $38, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	MOVO X6, X9
	PSRLQ $49, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 816(BX)
	PSRLQ $60, X9
	MOVO 144(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 832(BX)
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X12
	MOVO X8, X13
	PSRLQ $7, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 848(BX)
	PSRLQ $18, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 864(BX)
	PSRLQ $29, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 896(BX)
	MOVO X13, X14
	PSRLQ $51, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	PSRLQ $62, X14
	MOVO 160(AX), X15
	MOVO X15, X2
	PSLLQ $2, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 928(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $9, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 944(BX)
	PSRLQ $20, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 960(BX)
	PSRLQ $31, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 976(BX)
	PSRLQ $42, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 992(BX)
	PSRLQ $53, X6
	PADDQ X6, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_12(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_12(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4095, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $12, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $24, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $36, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X7, X8
	PSRLQ $48, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $60, X8
	MOVO 16(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	MOVO X10, X11
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $20, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	PSRLQ $44, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 144(BX)
	PSRLQ $56, X14
	MOVO 32(AX), X15
	MOVO X15, X2
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 160(BX)
	MOVO X2, X3
	MOVO X2, X4
	MOVO X2, X5
	MOVO X2, X6
	PSRLQ $4, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 176(BX)
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 192(BX)
	PSRLQ $28, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 208(BX)
	PSRLQ $40, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 224(BX)
	PSRLQ $52, X6
	PADDQ X6, X0
	MOVO X0, 240(BX)
	MOVO 48(AX), X7
	MOVO X7, X9
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X11
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	PSRLQ $12, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 288(BX)
	PSRLQ $36, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 304(BX)
	MOVO X11, X12
	PSRLQ $48, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 320(BX)
	PSRLQ $60, X12
	MOVO 64(AX), X13
	MOVO X13, X15
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	MOVO X15, X14
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 352(BX)
	PSRLQ $20, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 384(BX)
	PSRLQ $44, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 400(BX)
	PSRLQ $56, X4
	MOVO 80(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 416(BX)
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X8
	MOVO X6, X10
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 432(BX)
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 448(BX)
	PSRLQ $28, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 464(BX)
	PSRLQ $40, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 480(BX)
	PSRLQ $52, X10
	PADDQ X10, X0
	MOVO X0, 496(BX)
	MOVO 96(AX), X11
	MOVO X11, X13
	MOVO X11, X12
	MOVO X11, X15
	MOVO X11, X14
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	PSRLQ $12, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $36, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 560(BX)
	MOVO X14, X2
	PSRLQ $48, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 576(BX)
	PSRLQ $60, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $4, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	MOVO X5, X4
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X9
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	PSRLQ $20, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 640(BX)
	PSRLQ $44, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 656(BX)
	PSRLQ $56, X9
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $8, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 672(BX)
	MOVO X10, X11
	MOVO X10, X13
	MOVO X10, X12
	MOVO X10, X15
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 688(BX)
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 704(BX)
	PSRLQ $28, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $40, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 736(BX)
	PSRLQ $52, X15
	PADDQ X15, X0
	MOVO X0, 752(BX)
	MOVO 144(AX), X14
	MOVO X14, X3
	MOVO X14, X2
	MOVO X14, X5
	MOVO X14, X4
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 768(BX)
	PSRLQ $12, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 784(BX)
	PSRLQ $24, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	PSRLQ $36, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 816(BX)
	MOVO X4, X6
	PSRLQ $48, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 832(BX)
	PSRLQ $60, X6
	MOVO 160(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 848(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	MOVO X8, X13
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 864(BX)
	PSRLQ $20, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 896(BX)
	PSRLQ $44, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 912(BX)
	PSRLQ $56, X13
	MOVO 176(AX), X12
	MOVO X12, X15
	PSLLQ $8, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	MOVO X15, X14
	MOVO X15, X3
	MOVO X15, X2
	MOVO X15, X5
	PSRLQ $4, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 944(BX)
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 960(BX)
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 976(BX)
	PSRLQ $40, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $52, X5
	PADDQ X5, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_13(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_13(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $8191, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $13, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $26, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $39, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	PSRLQ $52, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLQ $12, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $1, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $14, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $27, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	PSRLQ $53, X13
	MOVO 32(AX), X14
	MOVO X14, X15
	PSLLQ $11, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 144(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $2, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	PSRLQ $15, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 176(BX)
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 192(BX)
	PSRLQ $41, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 208(BX)
	PSRLQ $54, X5
	MOVO 48(AX), X6
	MOVO X6, X8
	PSLLQ $10, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 224(BX)
	MOVO X8, X7
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PSRLQ $3, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	PSRLQ $29, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	PSRLQ $42, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $55, X11
	MOVO 64(AX), X12
	MOVO X12, X14
	PSLLQ $9, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 304(BX)
	MOVO X14, X13
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $17, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 336(BX)
	PSRLQ $30, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 352(BX)
	PSRLQ $43, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X3
	MOVO 80(AX), X4
	MOVO X4, X6
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	MOVO X6, X5
	MOVO X6, X8
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $5, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 400(BX)
	PSRLQ $18, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 416(BX)
	PSRLQ $31, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	PSRLQ $44, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 448(BX)
	PSRLQ $57, X9
	MOVO 96(AX), X10
	MOVO X10, X12
	PSLLQ $7, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 464(BX)
	MOVO X12, X11
	MOVO X12, X14
	MOVO X12, X13
	MOVO X12, X15
	PSRLQ $6, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 480(BX)
	PSRLQ $19, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 512(BX)
	PSRLQ $45, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $58, X15
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $6, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 544(BX)
	MOVO X4, X3
	MOVO X4, X6
	MOVO X4, X5
	MOVO X4, X8
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 560(BX)
	PSRLQ $20, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	PSRLQ $33, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 592(BX)
	PSRLQ $46, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	PSRLQ $59, X8
	MOVO 128(AX), X7
	MOVO X7, X10
	PSLLQ $5, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 624(BX)
	MOVO X10, X9
	MOVO X10, X12
	MOVO X10, X11
	MOVO X10, X14
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 640(BX)
	PSRLQ $21, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 656(BX)
	PSRLQ $34, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	PSRLQ $47, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 688(BX)
	PSRLQ $60, X14
	MOVO 144(AX), X13
	MOVO X13, X2
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 704(BX)
	MOVO X2, X15
	MOVO X2, X4
	MOVO X2, X3
	MOVO X2, X6
	PSRLQ $9, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 720(BX)
	PSRLQ $22, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 736(BX)
	PSRLQ $35, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $61, X6
	MOVO 160(AX), X5
	MOVO X5, X7
	PSLLQ $3, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 784(BX)
	MOVO X7, X8
	MOVO X7, X10
	MOVO X7, X9
	MOVO X7, X12
	PSRLQ $10, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 800(BX)
	PSRLQ $23, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 816(BX)
	PSRLQ $36, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 832(BX)
	PSRLQ $49, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 848(BX)
	PSRLQ $62, X12
	MOVO 176(AX), X11
	MOVO X11, X13
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 864(BX)
	MOVO X13, X14
	MOVO X13, X2
	MOVO X13, X15
	MOVO X13, X4
	PSRLQ $11, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 880(BX)
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 896(BX)
	PSRLQ $37, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 912(BX)
	PSRLQ $50, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 928(BX)
	PSRLQ $63, X4
	MOVO 192(AX), X3
	MOVO X3, X5
	PSLLQ $1, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 944(BX)
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 960(BX)
	PSRLQ $25, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 976(BX)
	PSRLQ $38, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 992(BX)
	PSRLQ $51, X8
	PADDQ X8, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_14(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_14(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $16383, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $14, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $28, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $42, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	PSRLQ $56, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $6, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $34, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	PSRLQ $62, X13
	MOVO 32(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 144(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $12, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	PSRLQ $26, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 176(BX)
	PSRLQ $40, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 192(BX)
	PSRLQ $54, X4
	MOVO 48(AX), X5
	MOVO X5, X6
	PSLLQ $10, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 208(BX)
	MOVO X6, X8
	MOVO X6, X7
	MOVO X6, X9
	MOVO X6, X10
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 224(BX)
	PSRLQ $18, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	PSRLQ $46, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	PSRLQ $60, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	MOVO X12, X14
	MOVO X12, X13
	MOVO X12, X15
	PSRLQ $10, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 304(BX)
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $38, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 336(BX)
	PSRLQ $52, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 352(BX)
	MOVO X3, X5
	MOVO X3, X4
	MOVO X3, X6
	MOVO X3, X8
	PSRLQ $2, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 368(BX)
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $30, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 400(BX)
	PSRLQ $44, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 416(BX)
	PSRLQ $58, X8
	MOVO 96(AX), X7
	MOVO X7, X9
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X12
	PSRLQ $8, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 448(BX)
	PSRLQ $22, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 464(BX)
	PSRLQ $36, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 480(BX)
	PSRLQ $50, X12
	PADDQ X12, X0
	MOVO X0, 496(BX)
	MOVO 112(AX), X14
	MOVO X14, X13
	MOVO X14, X2
	MOVO X14, X15
	MOVO X14, X3
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 512(BX)
	PSRLQ $14, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $28, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 544(BX)
	PSRLQ $42, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 560(BX)
	PSRLQ $56, X3
	MOVO 128(AX), X5
	MOVO X5, X4
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	MOVO X4, X6
	MOVO X4, X7
	MOVO X4, X8
	MOVO X4, X9
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	PSRLQ $20, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 608(BX)
	PSRLQ $34, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 640(BX)
	PSRLQ $62, X9
	MOVO 144(AX), X11
	MOVO X11, X10
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 656(BX)
	MOVO X10, X12
	MOVO X10, X14
	MOVO X10, X13
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 672(BX)
	PSRLQ $26, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 688(BX)
	PSRLQ $40, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 704(BX)
	PSRLQ $54, X13
	MOVO 160(AX), X2
	MOVO X2, X15
	PSLLQ $10, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	MOVO X15, X5
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X6
	PSRLQ $4, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 736(BX)
	PSRLQ $18, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $46, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 784(BX)
	PSRLQ $60, X6
	MOVO 176(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 800(BX)
	MOVO X8, X11
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $10, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 816(BX)
	PSRLQ $24, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 832(BX)
	PSRLQ $38, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 848(BX)
	PSRLQ $52, X10
	MOVO 192(AX), X12
	MOVO X12, X14
	PSLLQ $12, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 864(BX)
	MOVO X14, X2
	MOVO X14, X13
	MOVO X14, X15
	MOVO X14, X5
	PSRLQ $2, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 880(BX)
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 896(BX)
	PSRLQ $30, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	PSRLQ $44, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 928(BX)
	PSRLQ $58, X5
	MOVO 208(AX), X3
	MOVO X3, X4
	PSLLQ $6, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 944(BX)
	MOVO X4, X7
	MOVO X4, X6
	MOVO X4, X8
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 960(BX)
	PSRLQ $22, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 976(BX)
	PSRLQ $36, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 992(BX)
	PSRLQ $50, X8
	PADDQ X8, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_15(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_15(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $32767, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	MOVO X3, X7
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $15, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $30, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $45, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	PSRLQ $60, X7
	MOVO 16(AX), X8
	MOVO X8, X9
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PSRLQ $11, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $26, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $41, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X12
	MOVO 32(AX), X13
	MOVO X13, X14
	PSLLQ $8, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 128(BX)
	MOVO X14, X15
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $7, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	PSRLQ $22, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	PSRLQ $37, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 176(BX)
	PSRLQ $52, X3
	MOVO 48(AX), X4
	MOVO X4, X5
	PSLLQ $12, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 192(BX)
	MOVO X5, X6
	MOVO X5, X8
	MOVO X5, X7
	MOVO X5, X9
	PSRLQ $3, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 208(BX)
	PSRLQ $18, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 224(BX)
	PSRLQ $33, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 256(BX)
	PSRLQ $63, X9
	MOVO 64(AX), X10
	MOVO X10, X11
	PSLLQ $1, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	MOVO X11, X13
	MOVO X11, X12
	MOVO X11, X14
	PSRLQ $14, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 288(BX)
	PSRLQ $29, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $44, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 320(BX)
	PSRLQ $59, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $5, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 336(BX)
	MOVO X2, X4
	MOVO X2, X3
	MOVO X2, X5
	PSRLQ $10, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 352(BX)
	PSRLQ $25, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $55, X5
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLQ $9, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 400(BX)
	MOVO X8, X7
	MOVO X8, X10
	MOVO X8, X9
	PSRLQ $6, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	PSRLQ $21, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 432(BX)
	PSRLQ $36, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $51, X9
	MOVO 112(AX), X11
	MOVO X11, X13
	PSLLQ $13, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 464(BX)
	MOVO X13, X12
	MOVO X13, X15
	MOVO X13, X14
	MOVO X13, X2
	PSRLQ $2, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	PSRLQ $17, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $47, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 528(BX)
	PSRLQ $62, X2
	MOVO 128(AX), X4
	MOVO X4, X3
	PSLLQ $2, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 544(BX)
	MOVO X3, X6
	MOVO X3, X5
	MOVO X3, X8
	PSRLQ $13, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 560(BX)
	PSRLQ $28, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 576(BX)
	PSRLQ $43, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 592(BX)
	PSRLQ $58, X8
	MOVO 144(AX), X7
	MOVO X7, X10
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 608(BX)
	MOVO X10, X11
	MOVO X10, X9
	MOVO X10, X13
	PSRLQ $9, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 624(BX)
	PSRLQ $24, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	PSRLQ $39, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 656(BX)
	PSRLQ $54, X13
	MOVO 160(AX), X12
	MOVO X12, X15
	PSLLQ $10, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	MOVO X15, X14
	MOVO X15, X4
	MOVO X15, X2
	PSRLQ $5, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 688(BX)
	PSRLQ $20, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 704(BX)
	PSRLQ $35, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 720(BX)
	PSRLQ $50, X2
	MOVO 176(AX), X3
	MOVO X3, X6
	PSLLQ $14, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 736(BX)
	MOVO X6, X5
	MOVO X6, X7
	MOVO X6, X8
	MOVO X6, X10
	PSRLQ $1, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 768(BX)
	PSRLQ $31, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 784(BX)
	PSRLQ $46, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 800(BX)
	PSRLQ $61, X10
	MOVO 192(AX), X11
	MOVO X11, X9
	PSLLQ $3, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 816(BX)
	MOVO X9, X12
	MOVO X9, X13
	MOVO X9, X15
	PSRLQ $12, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 832(BX)
	PSRLQ $27, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 848(BX)
	PSRLQ $42, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 864(BX)
	PSRLQ $57, X15
	MOVO 208(AX), X14
	MOVO X14, X4
	PSLLQ $7, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 880(BX)
	MOVO X4, X3
	MOVO X4, X2
	MOVO X4, X6
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 896(BX)
	PSRLQ $23, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 912(BX)
	PSRLQ $38, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 928(BX)
	PSRLQ $53, X6
	MOVO 224(AX), X5
	MOVO X5, X7
	PSLLQ $11, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO X7, X8
	MOVO X7, X11
	MOVO X7, X10
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $19, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $34, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 992(BX)
	PSRLQ $49, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_16(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_16(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $65535, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $16, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $48, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO 16(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $48, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO 32(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	PSRLQ $32, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $48, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO 48(AX), X15
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	PSRLQ $32, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $48, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO 64(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $48, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO 80(AX), X9
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $16, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	PSRLQ $48, X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO 96(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $48, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO 112(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $16, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $48, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 128(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $48, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO 144(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	MOVO X11, X14
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $32, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $48, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO 160(AX), X15
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $32, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $48, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO 176(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	MOVO X5, X8
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $48, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO 192(AX), X9
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $16, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	PSRLQ $48, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO 208(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $48, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 224(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $16, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $48, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO 240(AX), X7
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X10
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $48, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_17(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_17(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $131071, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $17, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $34, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $51, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $13, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PSRLQ $4, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $21, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $38, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $55, X11
	MOVO 32(AX), X12
	MOVO X12, X13
	PSLLQ $9, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X2
	PSRLQ $8, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	PSRLQ $25, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	PSRLQ $42, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	PSRLQ $59, X2
	MOVO 48(AX), X3
	MOVO X3, X4
	PSLLQ $5, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 176(BX)
	MOVO X4, X5
	MOVO X4, X7
	MOVO X4, X6
	PSRLQ $12, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 192(BX)
	PSRLQ $29, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 208(BX)
	PSRLQ $46, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 224(BX)
	PSRLQ $63, X6
	MOVO 64(AX), X8
	MOVO X8, X9
	PSLLQ $1, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 240(BX)
	MOVO X9, X10
	MOVO X9, X12
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 256(BX)
	PSRLQ $33, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 272(BX)
	PSRLQ $50, X12
	MOVO 80(AX), X11
	MOVO X11, X13
	PSLLQ $14, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 288(BX)
	MOVO X13, X14
	MOVO X13, X15
	MOVO X13, X3
	PSRLQ $3, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $20, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $37, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 336(BX)
	PSRLQ $54, X3
	MOVO 96(AX), X2
	MOVO X2, X4
	PSLLQ $10, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	MOVO X4, X5
	MOVO X4, X7
	MOVO X4, X8
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	PSRLQ $24, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $41, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 400(BX)
	PSRLQ $58, X8
	MOVO 112(AX), X6
	MOVO X6, X9
	PSLLQ $6, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PSRLQ $11, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $28, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $45, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 464(BX)
	PSRLQ $62, X12
	MOVO 128(AX), X13
	MOVO X13, X14
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 480(BX)
	MOVO X14, X15
	MOVO X14, X2
	PSRLQ $15, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $49, X2
	MOVO 144(AX), X3
	MOVO X3, X4
	PSLLQ $15, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 528(BX)
	MOVO X4, X5
	MOVO X4, X7
	MOVO X4, X6
	PSRLQ $2, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 544(BX)
	PSRLQ $19, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 560(BX)
	PSRLQ $36, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 576(BX)
	PSRLQ $53, X6
	MOVO 160(AX), X8
	MOVO X8, X9
	PSLLQ $11, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 592(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X13
	PSRLQ $6, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 608(BX)
	PSRLQ $23, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 624(BX)
	PSRLQ $40, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	PSRLQ $57, X13
	MOVO 176(AX), X12
	MOVO X12, X14
	PSLLQ $7, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	MOVO X14, X15
	MOVO X14, X3
	MOVO X14, X2
	PSRLQ $10, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 672(BX)
	PSRLQ $27, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 688(BX)
	PSRLQ $44, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	PSRLQ $61, X2
	MOVO 192(AX), X4
	MOVO X4, X5
	PSLLQ $3, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 720(BX)
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 736(BX)
	PSRLQ $31, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X8
	MOVO 208(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 768(BX)
	MOVO X9, X10
	MOVO X9, X11
	MOVO X9, X12
	PSRLQ $1, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $18, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 800(BX)
	PSRLQ $35, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 816(BX)
	PSRLQ $52, X12
	MOVO 224(AX), X13
	MOVO X13, X14
	PSLLQ $12, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	MOVO X14, X15
	MOVO X14, X3
	MOVO X14, X4
	PSRLQ $5, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $22, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $39, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X4
	MOVO 240(AX), X2
	MOVO X2, X5
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X4
	PADDQ X4, X0
	MOVO X0, 896(BX)
	MOVO X5, X7
	MOVO X5, X6
	MOVO X5, X8
	PSRLQ $9, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 912(BX)
	PSRLQ $26, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 928(BX)
	PSRLQ $43, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	PSRLQ $60, X8
	MOVO 256(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 960(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLQ $13, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 976(BX)
	PSRLQ $30, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 992(BX)
	PSRLQ $47, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_18(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_18(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $262143, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $18, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $36, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $54, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	MOVO X8, X11
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $26, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $44, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	PSRLQ $62, X11
	MOVO 32(AX), X12
	MOVO X12, X13
	PSLLQ $2, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 112(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	PSRLQ $34, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	PSRLQ $52, X15
	MOVO 48(AX), X2
	MOVO X2, X3
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X7
	PSRLQ $6, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	PSRLQ $24, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 192(BX)
	PSRLQ $42, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 208(BX)
	PSRLQ $60, X7
	MOVO 64(AX), X6
	MOVO X6, X8
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 224(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $14, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 256(BX)
	PSRLQ $50, X10
	MOVO 80(AX), X12
	MOVO X12, X11
	PSLLQ $14, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 272(BX)
	MOVO X11, X13
	MOVO X11, X14
	MOVO X11, X2
	PSRLQ $4, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 288(BX)
	PSRLQ $22, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $40, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $58, X2
	MOVO 96(AX), X15
	MOVO X15, X3
	PSLLQ $6, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 336(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLQ $12, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	PSRLQ $30, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	PSRLQ $48, X5
	MOVO 112(AX), X6
	MOVO X6, X7
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	MOVO X7, X8
	MOVO X7, X9
	MOVO X7, X12
	PSRLQ $2, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 400(BX)
	PSRLQ $20, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	PSRLQ $38, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $56, X12
	MOVO 128(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 448(BX)
	MOVO X11, X13
	MOVO X11, X14
	PSRLQ $10, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 464(BX)
	PSRLQ $28, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	PSRLQ $46, X14
	PADDQ X14, X0
	MOVO X0, 496(BX)
	MOVO 144(AX), X15
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X4
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $18, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 528(BX)
	PSRLQ $36, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 544(BX)
	PSRLQ $54, X4
	MOVO 160(AX), X6
	MOVO X6, X5
	PSLLQ $10, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 560(BX)
	MOVO X5, X7
	MOVO X5, X8
	MOVO X5, X9
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 576(BX)
	PSRLQ $26, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 592(BX)
	PSRLQ $44, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 608(BX)
	PSRLQ $62, X9
	MOVO 176(AX), X10
	MOVO X10, X12
	PSLLQ $2, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 624(BX)
	MOVO X12, X11
	MOVO X12, X13
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 640(BX)
	PSRLQ $34, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 656(BX)
	PSRLQ $52, X13
	MOVO 192(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	MOVO X15, X2
	MOVO X15, X3
	MOVO X15, X6
	PSRLQ $6, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 688(BX)
	PSRLQ $24, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $42, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 720(BX)
	PSRLQ $60, X6
	MOVO 208(AX), X4
	MOVO X4, X5
	PSLLQ $4, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 736(BX)
	MOVO X5, X7
	MOVO X5, X8
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $50, X8
	MOVO 224(AX), X10
	MOVO X10, X9
	PSLLQ $14, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 784(BX)
	MOVO X9, X12
	MOVO X9, X11
	MOVO X9, X14
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	PSRLQ $22, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	PSRLQ $40, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 832(BX)
	PSRLQ $58, X14
	MOVO 240(AX), X13
	MOVO X13, X15
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $12, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $30, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	PSRLQ $48, X3
	MOVO 256(AX), X4
	MOVO X4, X6
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	MOVO X6, X5
	MOVO X6, X7
	MOVO X6, X10
	PSRLQ $2, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 912(BX)
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $38, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $56, X10
	MOVO 272(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X1, X8
	POR X8, X10
	PADDQ X10, X0
	MOVO X0, 960(BX)
	MOVO X9, X12
	MOVO X9, X11
	PSRLQ $10, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 976(BX)
	PSRLQ $28, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $46, X11
	PADDQ X11, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_19(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_19(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $524287, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $19, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $38, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $57, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $7, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $12, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $31, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $50, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLQ $14, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	MOVO X12, X13
	MOVO X12, X14
	MOVO X12, X15
	PSRLQ $5, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	PSRLQ $24, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	PSRLQ $43, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	PSRLQ $62, X15
	MOVO 48(AX), X2
	MOVO X2, X3
	PSLLQ $2, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLQ $17, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	PSRLQ $36, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 192(BX)
	PSRLQ $55, X5
	MOVO 64(AX), X7
	MOVO X7, X6
	PSLLQ $9, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 208(BX)
	MOVO X6, X8
	MOVO X6, X9
	PSRLQ $10, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 224(BX)
	PSRLQ $29, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X9
	MOVO 80(AX), X11
	MOVO X11, X10
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 256(BX)
	MOVO X10, X12
	MOVO X10, X13
	MOVO X10, X14
	PSRLQ $3, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 272(BX)
	PSRLQ $22, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 288(BX)
	PSRLQ $41, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $60, X14
	MOVO 96(AX), X2
	MOVO X2, X15
	PSLLQ $4, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	MOVO X15, X3
	MOVO X15, X4
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 336(BX)
	PSRLQ $34, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	PSRLQ $53, X4
	MOVO 112(AX), X7
	MOVO X7, X5
	PSLLQ $11, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	MOVO X5, X6
	MOVO X5, X8
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $27, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 400(BX)
	PSRLQ $46, X8
	MOVO 128(AX), X11
	MOVO X11, X9
	PSLLQ $18, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	MOVO X9, X10
	MOVO X9, X12
	MOVO X9, X13
	PSRLQ $1, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $39, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	PSRLQ $58, X13
	MOVO 144(AX), X2
	MOVO X2, X14
	PSLLQ $6, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	MOVO X14, X15
	MOVO X14, X3
	PSRLQ $13, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $51, X3
	MOVO 160(AX), X7
	MOVO X7, X4
	PSLLQ $13, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 528(BX)
	MOVO X4, X5
	MOVO X4, X6
	MOVO X4, X11
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 544(BX)
	PSRLQ $25, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 560(BX)
	PSRLQ $44, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 576(BX)
	PSRLQ $63, X11
	MOVO 176(AX), X8
	MOVO X8, X9
	PSLLQ $1, X8
	PAND X1, X8
	POR X8, X11
	PADDQ X11, X0
	MOVO X0, 592(BX)
	MOVO X9, X10
	MOVO X9, X12
	PSRLQ $18, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 608(BX)
	PSRLQ $37, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X12
	MOVO 192(AX), X2
	MOVO X2, X13
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X12
	PADDQ X12, X0
	MOVO X0, 640(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLQ $11, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	PSRLQ $30, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 672(BX)
	PSRLQ $49, X15
	MOVO 208(AX), X7
	MOVO X7, X3
	PSLLQ $15, X7
	PAND X1, X7
	POR X7, X15
	PADDQ X15, X0
	MOVO X0, 688(BX)
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	PSRLQ $23, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 720(BX)
	PSRLQ $42, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 736(BX)
	PSRLQ $61, X6
	MOVO 224(AX), X8
	MOVO X8, X11
	PSLLQ $3, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	MOVO X11, X9
	MOVO X11, X10
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 768(BX)
	PSRLQ $35, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $54, X10
	MOVO 240(AX), X2
	MOVO X2, X12
	PSLLQ $10, X2
	PAND X1, X2
	POR X2, X10
	PADDQ X10, X0
	MOVO X0, 800(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	PSRLQ $28, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $47, X14
	MOVO 256(AX), X7
	MOVO X7, X15
	PSLLQ $17, X7
	PAND X1, X7
	POR X7, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	MOVO X15, X3
	MOVO X15, X4
	MOVO X15, X5
	PSRLQ $2, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $21, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 896(BX)
	PSRLQ $59, X5
	MOVO 272(AX), X8
	MOVO X8, X6
	PSLLQ $5, X8
	PAND X1, X8
	POR X8, X5
	PADDQ X5, X0
	MOVO X0, 912(BX)
	MOVO X6, X11
	MOVO X6, X9
	PSRLQ $14, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $33, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 944(BX)
	PSRLQ $52, X9
	MOVO 288(AX), X2
	MOVO X2, X10
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	MOVO X10, X12
	MOVO X10, X13
	PSRLQ $7, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 976(BX)
	PSRLQ $26, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $45, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_20(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_20(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1048575, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $20, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $40, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $60, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $36, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $56, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLQ $8, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $12, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	PSRLQ $52, X14
	MOVO 48(AX), X15
	MOVO X15, X2
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 160(BX)
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	PSRLQ $48, X4
	MOVO 64(AX), X5
	MOVO X5, X7
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 192(BX)
	MOVO X7, X6
	MOVO X7, X8
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	PSRLQ $24, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 224(BX)
	PSRLQ $44, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	MOVO 80(AX), X9
	MOVO X9, X11
	MOVO X9, X10
	MOVO X9, X12
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 256(BX)
	PSRLQ $20, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 272(BX)
	PSRLQ $40, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $60, X12
	MOVO 96(AX), X13
	MOVO X13, X15
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 304(BX)
	MOVO X15, X14
	MOVO X15, X2
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 320(BX)
	PSRLQ $36, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 336(BX)
	PSRLQ $56, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 352(BX)
	MOVO X5, X4
	MOVO X5, X7
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 384(BX)
	PSRLQ $52, X7
	MOVO 128(AX), X6
	MOVO X6, X8
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 400(BX)
	MOVO X8, X9
	MOVO X8, X11
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	PSRLQ $28, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $48, X11
	MOVO 144(AX), X10
	MOVO X10, X13
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 448(BX)
	MOVO X13, X12
	MOVO X13, X15
	PSRLQ $4, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 464(BX)
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 480(BX)
	PSRLQ $44, X15
	PADDQ X15, X0
	MOVO X0, 496(BX)
	MOVO 160(AX), X14
	MOVO X14, X3
	MOVO X14, X2
	MOVO X14, X5
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 512(BX)
	PSRLQ $20, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 528(BX)
	PSRLQ $40, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 544(BX)
	PSRLQ $60, X5
	MOVO 176(AX), X4
	MOVO X4, X6
	PSLLQ $4, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 560(BX)
	MOVO X6, X7
	MOVO X6, X8
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 576(BX)
	PSRLQ $36, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 592(BX)
	PSRLQ $56, X8
	MOVO 192(AX), X9
	MOVO X9, X10
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 608(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	PSRLQ $52, X13
	MOVO 208(AX), X12
	MOVO X12, X15
	PSLLQ $12, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	MOVO X15, X14
	MOVO X15, X3
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 672(BX)
	PSRLQ $28, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	PSRLQ $48, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	MOVO X4, X5
	MOVO X4, X6
	PSRLQ $4, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 720(BX)
	PSRLQ $24, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 736(BX)
	PSRLQ $44, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	MOVO 240(AX), X7
	MOVO X7, X9
	MOVO X7, X8
	MOVO X7, X10
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $20, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $40, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 800(BX)
	PSRLQ $60, X10
	MOVO 256(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 816(BX)
	MOVO X12, X13
	MOVO X12, X15
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	PSRLQ $36, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 848(BX)
	PSRLQ $56, X15
	MOVO 272(AX), X14
	MOVO X14, X2
	PSLLQ $8, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLQ $12, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $52, X4
	MOVO 288(AX), X5
	MOVO X5, X6
	PSLLQ $12, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $28, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $48, X9
	MOVO 304(AX), X8
	MOVO X8, X11
	PSLLQ $16, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	MOVO X11, X10
	MOVO X11, X12
	PSRLQ $4, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	PSRLQ $24, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 992(BX)
	PSRLQ $44, X12
	PADDQ X12, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_21(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_21(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2097151, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	MOVO X3, X6
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $21, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $42, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $63, X6
	MOVO 16(AX), X7
	MOVO X7, X8
	PSLLQ $1, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $20, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $41, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	PSRLQ $62, X10
	MOVO 32(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 96(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $19, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	PSRLQ $61, X14
	MOVO 48(AX), X15
	MOVO X15, X2
	PSLLQ $3, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLQ $18, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 160(BX)
	PSRLQ $39, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	PSRLQ $60, X4
	MOVO 64(AX), X5
	MOVO X5, X7
	PSLLQ $4, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 192(BX)
	MOVO X7, X6
	MOVO X7, X8
	PSRLQ $17, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	PSRLQ $38, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 224(BX)
	PSRLQ $59, X8
	MOVO 80(AX), X9
	MOVO X9, X11
	PSLLQ $5, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	MOVO X11, X10
	MOVO X11, X12
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	PSRLQ $37, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 272(BX)
	PSRLQ $58, X12
	MOVO 96(AX), X13
	MOVO X13, X15
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 288(BX)
	MOVO X15, X14
	MOVO X15, X2
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 304(BX)
	PSRLQ $36, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $57, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $7, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 336(BX)
	MOVO X5, X4
	MOVO X5, X7
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	PSRLQ $35, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLQ $8, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 384(BX)
	MOVO X9, X8
	MOVO X9, X11
	PSRLQ $13, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 400(BX)
	PSRLQ $34, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	PSRLQ $55, X11
	MOVO 144(AX), X10
	MOVO X10, X13
	PSLLQ $9, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 432(BX)
	MOVO X13, X12
	MOVO X13, X15
	PSRLQ $12, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 448(BX)
	PSRLQ $33, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	PSRLQ $54, X15
	MOVO 160(AX), X14
	MOVO X14, X3
	PSLLQ $10, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 480(BX)
	MOVO X3, X2
	MOVO X3, X5
	PSRLQ $11, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 512(BX)
	PSRLQ $53, X5
	MOVO 176(AX), X4
	MOVO X4, X6
	PSLLQ $11, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 528(BX)
	MOVO X6, X7
	MOVO X6, X9
	PSRLQ $10, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 544(BX)
	PSRLQ $31, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 560(BX)
	PSRLQ $52, X9
	MOVO 192(AX), X8
	MOVO X8, X10
	PSLLQ $12, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 576(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLQ $9, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 592(BX)
	PSRLQ $30, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 608(BX)
	PSRLQ $51, X13
	MOVO 208(AX), X12
	MOVO X12, X14
	PSLLQ $13, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 624(BX)
	MOVO X14, X15
	MOVO X14, X3
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 640(BX)
	PSRLQ $29, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 656(BX)
	PSRLQ $50, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $14, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	MOVO X4, X5
	MOVO X4, X6
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	PSRLQ $28, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $49, X6
	MOVO 240(AX), X7
	MOVO X7, X8
	PSLLQ $15, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $6, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 736(BX)
	PSRLQ $27, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X10
	MOVO 256(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 768(BX)
	MOVO X12, X13
	MOVO X12, X14
	PSRLQ $5, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 784(BX)
	PSRLQ $26, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 800(BX)
	PSRLQ $47, X14
	MOVO 272(AX), X15
	MOVO X15, X2
	PSLLQ $17, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 816(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLQ $4, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	PSRLQ $25, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 848(BX)
	PSRLQ $46, X4
	MOVO 288(AX), X5
	MOVO X5, X7
	PSLLQ $18, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 864(BX)
	MOVO X7, X6
	MOVO X7, X8
	PSRLQ $3, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 880(BX)
	PSRLQ $24, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 896(BX)
	PSRLQ $45, X8
	MOVO 304(AX), X9
	MOVO X9, X11
	PSLLQ $19, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	MOVO X11, X10
	MOVO X11, X12
	PSRLQ $2, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 928(BX)
	PSRLQ $23, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 944(BX)
	PSRLQ $44, X12
	MOVO 320(AX), X13
	MOVO X13, X15
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	MOVO X15, X14
	MOVO X15, X2
	PSRLQ $1, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 976(BX)
	PSRLQ $22, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $43, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_22(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_22(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4194303, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $22, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $44, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $20, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $2, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $46, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $18, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $4, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	PSRLQ $26, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X13
	MOVO 48(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $6, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 144(BX)
	PSRLQ $28, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 160(BX)
	PSRLQ $50, X3
	MOVO 64(AX), X4
	MOVO X4, X6
	PSLLQ $14, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	MOVO X6, X5
	MOVO X6, X7
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 192(BX)
	PSRLQ $30, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 208(BX)
	PSRLQ $52, X7
	MOVO 80(AX), X8
	MOVO X8, X10
	PSLLQ $12, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 224(BX)
	MOVO X10, X9
	MOVO X10, X11
	PSRLQ $10, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 256(BX)
	PSRLQ $54, X11
	MOVO 96(AX), X12
	MOVO X12, X14
	PSLLQ $10, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 272(BX)
	MOVO X14, X13
	MOVO X14, X15
	PSRLQ $12, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	PSRLQ $34, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $56, X15
	MOVO 112(AX), X2
	MOVO X2, X4
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 320(BX)
	MOVO X4, X3
	MOVO X4, X6
	PSRLQ $14, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 336(BX)
	PSRLQ $36, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	PSRLQ $58, X6
	MOVO 128(AX), X5
	MOVO X5, X8
	PSLLQ $6, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 368(BX)
	MOVO X8, X7
	MOVO X8, X10
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	PSRLQ $38, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 400(BX)
	PSRLQ $60, X10
	MOVO 144(AX), X9
	MOVO X9, X12
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 416(BX)
	MOVO X12, X11
	MOVO X12, X14
	PSRLQ $18, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 432(BX)
	PSRLQ $40, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 448(BX)
	PSRLQ $62, X14
	MOVO 160(AX), X13
	MOVO X13, X2
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 464(BX)
	MOVO X2, X15
	PSRLQ $20, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 480(BX)
	PSRLQ $42, X15
	PADDQ X15, X0
	MOVO X0, 496(BX)
	MOVO 176(AX), X4
	MOVO X4, X3
	MOVO X4, X5
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 512(BX)
	PSRLQ $22, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 528(BX)
	PSRLQ $44, X5
	MOVO 192(AX), X6
	MOVO X6, X8
	PSLLQ $20, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 544(BX)
	MOVO X8, X7
	MOVO X8, X9
	PSRLQ $2, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 560(BX)
	PSRLQ $24, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 576(BX)
	PSRLQ $46, X9
	MOVO 208(AX), X10
	MOVO X10, X12
	PSLLQ $18, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 592(BX)
	MOVO X12, X11
	MOVO X12, X13
	PSRLQ $4, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 608(BX)
	PSRLQ $26, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X13
	MOVO 224(AX), X14
	MOVO X14, X2
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 640(BX)
	MOVO X2, X15
	MOVO X2, X4
	PSRLQ $6, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $28, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 672(BX)
	PSRLQ $50, X4
	MOVO 240(AX), X3
	MOVO X3, X6
	PSLLQ $14, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO X6, X5
	MOVO X6, X8
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 704(BX)
	PSRLQ $30, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 720(BX)
	PSRLQ $52, X8
	MOVO 256(AX), X7
	MOVO X7, X10
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 736(BX)
	MOVO X10, X9
	MOVO X10, X12
	PSRLQ $10, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $54, X12
	MOVO 272(AX), X11
	MOVO X11, X14
	PSLLQ $10, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 784(BX)
	MOVO X14, X13
	MOVO X14, X2
	PSRLQ $12, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 800(BX)
	PSRLQ $34, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 816(BX)
	PSRLQ $56, X2
	MOVO 288(AX), X15
	MOVO X15, X3
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLQ $14, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 848(BX)
	PSRLQ $36, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 864(BX)
	PSRLQ $58, X6
	MOVO 304(AX), X5
	MOVO X5, X7
	PSLLQ $6, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 880(BX)
	MOVO X7, X8
	MOVO X7, X10
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 896(BX)
	PSRLQ $38, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	PSRLQ $60, X10
	MOVO 320(AX), X9
	MOVO X9, X11
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 928(BX)
	MOVO X11, X12
	MOVO X11, X14
	PSRLQ $18, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 944(BX)
	PSRLQ $40, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	PSRLQ $62, X14
	MOVO 336(AX), X13
	MOVO X13, X15
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 976(BX)
	MOVO X15, X2
	PSRLQ $20, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $42, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_23(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_23(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $8388607, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $23, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $46, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $18, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $5, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $28, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $51, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $13, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $10, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	PSRLQ $33, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X13
	MOVO 48(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 144(BX)
	PSRLQ $38, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 160(BX)
	PSRLQ $61, X3
	MOVO 64(AX), X4
	MOVO X4, X6
	PSLLQ $3, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	MOVO X6, X5
	PSRLQ $20, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 192(BX)
	PSRLQ $43, X5
	MOVO 80(AX), X7
	MOVO X7, X8
	PSLLQ $21, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 208(BX)
	MOVO X8, X10
	MOVO X8, X9
	PSRLQ $2, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 224(BX)
	PSRLQ $25, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X9
	MOVO 96(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 256(BX)
	MOVO X12, X14
	MOVO X12, X13
	PSRLQ $7, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 272(BX)
	PSRLQ $30, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	PSRLQ $53, X13
	MOVO 112(AX), X15
	MOVO X15, X2
	PSLLQ $11, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	MOVO X2, X4
	MOVO X2, X3
	PSRLQ $12, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 320(BX)
	PSRLQ $35, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 336(BX)
	PSRLQ $58, X3
	MOVO 128(AX), X6
	MOVO X6, X7
	PSLLQ $6, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	MOVO X7, X5
	MOVO X7, X8
	PSRLQ $17, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $63, X8
	MOVO 144(AX), X10
	MOVO X10, X11
	PSLLQ $1, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 400(BX)
	MOVO X11, X9
	PSRLQ $22, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	PSRLQ $45, X9
	MOVO 160(AX), X12
	MOVO X12, X14
	PSLLQ $19, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	MOVO X14, X15
	MOVO X14, X13
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 448(BX)
	PSRLQ $27, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 464(BX)
	PSRLQ $50, X13
	MOVO 176(AX), X2
	MOVO X2, X4
	PSLLQ $14, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	MOVO X4, X6
	MOVO X4, X3
	PSRLQ $9, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 512(BX)
	PSRLQ $55, X3
	MOVO 192(AX), X7
	MOVO X7, X5
	PSLLQ $9, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 528(BX)
	MOVO X5, X10
	MOVO X5, X8
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 544(BX)
	PSRLQ $37, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	PSRLQ $60, X8
	MOVO 208(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 576(BX)
	MOVO X12, X9
	PSRLQ $19, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $42, X9
	MOVO 224(AX), X14
	MOVO X14, X15
	PSLLQ $22, X14
	PAND X1, X14
	POR X14, X9
	PADDQ X9, X0
	MOVO X0, 608(BX)
	MOVO X15, X2
	MOVO X15, X13
	PSRLQ $1, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	PSRLQ $24, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 640(BX)
	PSRLQ $47, X13
	MOVO 240(AX), X4
	MOVO X4, X6
	PSLLQ $17, X4
	PAND X1, X4
	POR X4, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	MOVO X6, X7
	MOVO X6, X3
	PSRLQ $6, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 672(BX)
	PSRLQ $29, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 688(BX)
	PSRLQ $52, X3
	MOVO 256(AX), X5
	MOVO X5, X10
	PSLLQ $12, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	MOVO X10, X11
	MOVO X10, X8
	PSRLQ $11, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 720(BX)
	PSRLQ $34, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 736(BX)
	PSRLQ $57, X8
	MOVO 272(AX), X12
	MOVO X12, X14
	PSLLQ $7, X12
	PAND X1, X12
	POR X12, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO X14, X9
	MOVO X14, X15
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 768(BX)
	PSRLQ $39, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $62, X15
	MOVO 288(AX), X2
	MOVO X2, X4
	PSLLQ $2, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 800(BX)
	MOVO X4, X13
	PSRLQ $21, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 816(BX)
	PSRLQ $44, X13
	MOVO 304(AX), X6
	MOVO X6, X7
	PSLLQ $20, X6
	PAND X1, X6
	POR X6, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	MOVO X7, X5
	MOVO X7, X3
	PSRLQ $3, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 848(BX)
	PSRLQ $26, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 864(BX)
	PSRLQ $49, X3
	MOVO 320(AX), X10
	MOVO X10, X11
	PSLLQ $15, X10
	PAND X1, X10
	POR X10, X3
	PADDQ X3, X0
	MOVO X0, 880(BX)
	MOVO X11, X12
	MOVO X11, X8
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 896(BX)
	PSRLQ $31, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 912(BX)
	PSRLQ $54, X8
	MOVO 336(AX), X14
	MOVO X14, X9
	PSLLQ $10, X14
	PAND X1, X14
	POR X14, X8
	PADDQ X8, X0
	MOVO X0, 928(BX)
	MOVO X9, X2
	MOVO X9, X15
	PSRLQ $13, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 944(BX)
	PSRLQ $36, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 960(BX)
	PSRLQ $59, X15
	MOVO 352(AX), X4
	MOVO X4, X6
	PSLLQ $5, X4
	PAND X1, X4
	POR X4, X15
	PADDQ X15, X0
	MOVO X0, 976(BX)
	MOVO X6, X13
	PSRLQ $18, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 992(BX)
	PSRLQ $41, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_24(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_24(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $16777215, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $24, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $48, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $32, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $56, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	MOVO X11, X12
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	PSRLQ $40, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	MOVO 48(AX), X13
	MOVO X13, X14
	MOVO X13, X15
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 128(BX)
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 144(BX)
	PSRLQ $48, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 160(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 176(BX)
	PSRLQ $32, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 192(BX)
	PSRLQ $56, X6
	MOVO 80(AX), X5
	MOVO X5, X7
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 208(BX)
	MOVO X7, X8
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 224(BX)
	PSRLQ $40, X8
	PADDQ X8, X0
	MOVO X0, 240(BX)
	MOVO 96(AX), X10
	MOVO X10, X9
	MOVO X10, X11
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 256(BX)
	PSRLQ $24, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	PSRLQ $48, X11
	MOVO 112(AX), X12
	MOVO X12, X13
	PSLLQ $16, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 288(BX)
	MOVO X13, X14
	MOVO X13, X2
	PSRLQ $8, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $32, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $56, X2
	MOVO 128(AX), X15
	MOVO X15, X3
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 336(BX)
	MOVO X3, X4
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	PSRLQ $40, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	MOVO 144(AX), X5
	MOVO X5, X6
	MOVO X5, X7
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $24, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 400(BX)
	PSRLQ $48, X7
	MOVO 160(AX), X8
	MOVO X8, X10
	PSLLQ $16, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 416(BX)
	MOVO X10, X9
	MOVO X10, X12
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 432(BX)
	PSRLQ $32, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 448(BX)
	PSRLQ $56, X12
	MOVO 176(AX), X11
	MOVO X11, X13
	PSLLQ $8, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	MOVO X13, X14
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	PSRLQ $40, X14
	PADDQ X14, X0
	MOVO X0, 496(BX)
	MOVO 192(AX), X15
	MOVO X15, X2
	MOVO X15, X3
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $24, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 528(BX)
	PSRLQ $48, X3
	MOVO 208(AX), X4
	MOVO X4, X5
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 544(BX)
	MOVO X5, X6
	MOVO X5, X8
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 560(BX)
	PSRLQ $32, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 576(BX)
	PSRLQ $56, X8
	MOVO 224(AX), X7
	MOVO X7, X10
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 592(BX)
	MOVO X10, X9
	PSRLQ $16, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 608(BX)
	PSRLQ $40, X9
	PADDQ X9, X0
	MOVO X0, 624(BX)
	MOVO 240(AX), X11
	MOVO X11, X12
	MOVO X11, X13
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 656(BX)
	PSRLQ $48, X13
	MOVO 256(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	MOVO X15, X2
	MOVO X15, X4
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 688(BX)
	PSRLQ $32, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $56, X4
	MOVO 272(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 720(BX)
	MOVO X5, X6
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 736(BX)
	PSRLQ $40, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	MOVO 288(AX), X7
	MOVO X7, X8
	MOVO X7, X10
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 784(BX)
	PSRLQ $48, X10
	MOVO 304(AX), X9
	MOVO X9, X11
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 800(BX)
	MOVO X11, X12
	MOVO X11, X14
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 816(BX)
	PSRLQ $32, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	PSRLQ $56, X14
	MOVO 320(AX), X13
	MOVO X13, X15
	PSLLQ $8, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	MOVO X15, X2
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $40, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 336(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $24, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $48, X5
	MOVO 352(AX), X6
	MOVO X6, X7
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $32, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 960(BX)
	PSRLQ $56, X9
	MOVO 368(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 976(BX)
	MOVO X11, X12
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 992(BX)
	PSRLQ $40, X12
	PADDQ X12, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_25(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_25(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $33554431, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $25, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $50, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $14, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	MOVO X7, X9
	PSRLQ $11, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $36, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	PSRLQ $61, X9
	MOVO 32(AX), X10
	MOVO X10, X11
	PSLLQ $3, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 80(BX)
	MOVO X11, X12
	PSRLQ $22, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	PSRLQ $47, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLQ $17, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	MOVO X14, X15
	MOVO X14, X2
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	PSRLQ $33, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 144(BX)
	PSRLQ $58, X2
	MOVO 64(AX), X3
	MOVO X3, X4
	PSLLQ $6, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 160(BX)
	MOVO X4, X6
	PSRLQ $19, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	PSRLQ $44, X6
	MOVO 80(AX), X5
	MOVO X5, X7
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 192(BX)
	MOVO X7, X8
	MOVO X7, X10
	PSRLQ $5, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	PSRLQ $30, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 224(BX)
	PSRLQ $55, X10
	MOVO 96(AX), X9
	MOVO X9, X11
	PSLLQ $9, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	MOVO X11, X13
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	PSRLQ $41, X13
	MOVO 112(AX), X12
	MOVO X12, X14
	PSLLQ $23, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 272(BX)
	MOVO X14, X15
	MOVO X14, X3
	PSRLQ $2, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	PSRLQ $27, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 304(BX)
	PSRLQ $52, X3
	MOVO 128(AX), X2
	MOVO X2, X4
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 320(BX)
	MOVO X4, X5
	MOVO X4, X6
	PSRLQ $13, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 336(BX)
	PSRLQ $38, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	PSRLQ $63, X6
	MOVO 144(AX), X7
	MOVO X7, X8
	PSLLQ $1, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 368(BX)
	MOVO X8, X9
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	PSRLQ $49, X9
	MOVO 160(AX), X10
	MOVO X10, X11
	PSLLQ $15, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 400(BX)
	MOVO X11, X12
	MOVO X11, X13
	PSRLQ $10, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	PSRLQ $35, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 432(BX)
	PSRLQ $60, X13
	MOVO 176(AX), X14
	MOVO X14, X15
	PSLLQ $4, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 448(BX)
	MOVO X15, X2
	PSRLQ $21, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 464(BX)
	PSRLQ $46, X2
	MOVO 192(AX), X3
	MOVO X3, X4
	PSLLQ $18, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 480(BX)
	MOVO X4, X5
	MOVO X4, X7
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $57, X7
	MOVO 208(AX), X6
	MOVO X6, X8
	PSLLQ $7, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 528(BX)
	MOVO X8, X10
	PSRLQ $18, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 544(BX)
	PSRLQ $43, X10
	MOVO 224(AX), X9
	MOVO X9, X11
	PSLLQ $21, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X11, X12
	MOVO X11, X14
	PSRLQ $4, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $29, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $54, X14
	MOVO 240(AX), X13
	MOVO X13, X15
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	MOVO X15, X3
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	PSRLQ $40, X3
	MOVO 256(AX), X2
	MOVO X2, X4
	PSLLQ $24, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 640(BX)
	MOVO X4, X5
	MOVO X4, X6
	PSRLQ $1, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 656(BX)
	PSRLQ $26, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 672(BX)
	PSRLQ $51, X6
	MOVO 272(AX), X7
	MOVO X7, X8
	PSLLQ $13, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 688(BX)
	MOVO X8, X9
	MOVO X8, X10
	PSRLQ $12, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 704(BX)
	PSRLQ $37, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 720(BX)
	PSRLQ $62, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 736(BX)
	MOVO X12, X13
	PSRLQ $23, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X13
	MOVO 304(AX), X14
	MOVO X14, X15
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 768(BX)
	MOVO X15, X2
	MOVO X15, X3
	PSRLQ $9, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 784(BX)
	PSRLQ $34, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	PSRLQ $59, X3
	MOVO 320(AX), X4
	MOVO X4, X5
	PSLLQ $5, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 816(BX)
	MOVO X5, X7
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 832(BX)
	PSRLQ $45, X7
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLQ $19, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 848(BX)
	MOVO X8, X9
	MOVO X8, X11
	PSRLQ $6, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 864(BX)
	PSRLQ $31, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X11
	MOVO 352(AX), X10
	MOVO X10, X12
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 896(BX)
	MOVO X12, X14
	PSRLQ $17, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 912(BX)
	PSRLQ $42, X14
	MOVO 368(AX), X13
	MOVO X13, X15
	PSLLQ $22, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 928(BX)
	MOVO X15, X2
	MOVO X15, X4
	PSRLQ $3, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 944(BX)
	PSRLQ $28, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 960(BX)
	PSRLQ $53, X4
	MOVO 384(AX), X3
	MOVO X3, X5
	PSLLQ $11, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 976(BX)
	MOVO X5, X6
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 992(BX)
	PSRLQ $39, X6
	PADDQ X6, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_26(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_26(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $67108863, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $26, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $52, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLQ $14, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $40, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $2, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $28, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	PSRLQ $54, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	MOVO X14, X15
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	PSRLQ $42, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $22, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 144(BX)
	MOVO X3, X4
	MOVO X3, X6
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 160(BX)
	PSRLQ $30, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	PSRLQ $56, X6
	MOVO 80(AX), X5
	MOVO X5, X7
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 192(BX)
	MOVO X7, X9
	PSRLQ $18, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	PSRLQ $44, X9
	MOVO 96(AX), X8
	MOVO X8, X10
	PSLLQ $20, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 224(BX)
	MOVO X10, X11
	MOVO X10, X13
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	PSRLQ $58, X13
	MOVO 112(AX), X12
	MOVO X12, X14
	PSLLQ $6, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 272(BX)
	MOVO X14, X2
	PSRLQ $20, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	PSRLQ $46, X2
	MOVO 128(AX), X15
	MOVO X15, X3
	PSLLQ $18, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 304(BX)
	MOVO X3, X4
	MOVO X3, X5
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 320(BX)
	PSRLQ $34, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 336(BX)
	PSRLQ $60, X5
	MOVO 144(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	MOVO X7, X8
	PSRLQ $22, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	PSRLQ $48, X8
	MOVO 160(AX), X9
	MOVO X9, X10
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $10, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 400(BX)
	PSRLQ $36, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	PSRLQ $62, X12
	MOVO 176(AX), X13
	MOVO X13, X14
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 432(BX)
	MOVO X14, X15
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 448(BX)
	PSRLQ $50, X15
	MOVO 192(AX), X2
	MOVO X2, X3
	PSLLQ $14, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 464(BX)
	MOVO X3, X4
	PSRLQ $12, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 480(BX)
	PSRLQ $38, X4
	PADDQ X4, X0
	MOVO X0, 496(BX)
	MOVO 208(AX), X6
	MOVO X6, X5
	MOVO X6, X7
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 512(BX)
	PSRLQ $26, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 528(BX)
	PSRLQ $52, X7
	MOVO 224(AX), X9
	MOVO X9, X8
	PSLLQ $12, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 544(BX)
	MOVO X8, X10
	PSRLQ $14, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 560(BX)
	PSRLQ $40, X10
	MOVO 240(AX), X11
	MOVO X11, X13
	PSLLQ $24, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	MOVO X13, X12
	MOVO X13, X14
	PSRLQ $2, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 592(BX)
	PSRLQ $28, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 608(BX)
	PSRLQ $54, X14
	MOVO 256(AX), X2
	MOVO X2, X15
	PSLLQ $10, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO X15, X3
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $42, X3
	MOVO 272(AX), X4
	MOVO X4, X6
	PSLLQ $22, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 656(BX)
	MOVO X6, X5
	MOVO X6, X9
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 672(BX)
	PSRLQ $30, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 688(BX)
	PSRLQ $56, X9
	MOVO 288(AX), X7
	MOVO X7, X8
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 704(BX)
	MOVO X8, X11
	PSRLQ $18, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 720(BX)
	PSRLQ $44, X11
	MOVO 304(AX), X10
	MOVO X10, X13
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 736(BX)
	MOVO X13, X12
	MOVO X13, X2
	PSRLQ $6, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 768(BX)
	PSRLQ $58, X2
	MOVO 320(AX), X14
	MOVO X14, X15
	PSLLQ $6, X14
	PAND X1, X14
	POR X14, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	MOVO X15, X4
	PSRLQ $20, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 800(BX)
	PSRLQ $46, X4
	MOVO 336(AX), X3
	MOVO X3, X6
	PSLLQ $18, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 816(BX)
	MOVO X6, X5
	MOVO X6, X7
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 832(BX)
	PSRLQ $34, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 848(BX)
	PSRLQ $60, X7
	MOVO 352(AX), X9
	MOVO X9, X8
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 864(BX)
	MOVO X8, X10
	PSRLQ $22, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 880(BX)
	PSRLQ $48, X10
	MOVO 368(AX), X11
	MOVO X11, X13
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 896(BX)
	MOVO X13, X12
	MOVO X13, X14
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	PSRLQ $36, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 928(BX)
	PSRLQ $62, X14
	MOVO 384(AX), X2
	MOVO X2, X15
	PSLLQ $2, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 944(BX)
	MOVO X15, X3
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 960(BX)
	PSRLQ $50, X3
	MOVO 400(AX), X4
	MOVO X4, X6
	PSLLQ $14, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 976(BX)
	MOVO X6, X5
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 992(BX)
	PSRLQ $38, X5
	PADDQ X5, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_27(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_27(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $134217727, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $27, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $54, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $10, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLQ $17, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $44, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $20, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	MOVO X10, X12
	PSRLQ $7, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $34, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	PSRLQ $61, X12
	MOVO 48(AX), X13
	MOVO X13, X14
	PSLLQ $3, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 112(BX)
	MOVO X14, X15
	PSRLQ $24, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	PSRLQ $51, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $13, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 144(BX)
	MOVO X3, X4
	PSRLQ $14, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 160(BX)
	PSRLQ $41, X4
	MOVO 80(AX), X6
	MOVO X6, X5
	PSLLQ $23, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	MOVO X5, X7
	MOVO X5, X9
	PSRLQ $4, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 192(BX)
	PSRLQ $31, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	PSRLQ $58, X9
	MOVO 96(AX), X8
	MOVO X8, X10
	PSLLQ $6, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 224(BX)
	MOVO X10, X11
	PSRLQ $21, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X11
	MOVO 112(AX), X13
	MOVO X13, X12
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	MOVO X12, X14
	PSRLQ $11, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 272(BX)
	PSRLQ $38, X14
	MOVO 128(AX), X2
	MOVO X2, X15
	PSLLQ $26, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	MOVO X15, X3
	MOVO X15, X6
	PSRLQ $1, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 304(BX)
	PSRLQ $28, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 320(BX)
	PSRLQ $55, X6
	MOVO 144(AX), X4
	MOVO X4, X5
	PSLLQ $9, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 336(BX)
	MOVO X5, X7
	PSRLQ $18, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	PSRLQ $45, X7
	MOVO 160(AX), X8
	MOVO X8, X9
	PSLLQ $19, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	MOVO X9, X10
	MOVO X9, X13
	PSRLQ $8, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 384(BX)
	PSRLQ $35, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 400(BX)
	PSRLQ $62, X13
	MOVO 176(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 416(BX)
	MOVO X12, X2
	PSRLQ $25, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 432(BX)
	PSRLQ $52, X2
	MOVO 192(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X1, X14
	POR X14, X2
	PADDQ X2, X0
	MOVO X0, 448(BX)
	MOVO X15, X3
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 464(BX)
	PSRLQ $42, X3
	MOVO 208(AX), X4
	MOVO X4, X6
	PSLLQ $22, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 480(BX)
	MOVO X6, X5
	MOVO X6, X8
	PSRLQ $5, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $59, X8
	MOVO 224(AX), X7
	MOVO X7, X9
	PSLLQ $5, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	MOVO X9, X10
	PSRLQ $22, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $49, X10
	MOVO 240(AX), X11
	MOVO X11, X13
	PSLLQ $15, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X13, X12
	PSRLQ $12, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 576(BX)
	PSRLQ $39, X12
	MOVO 256(AX), X14
	MOVO X14, X2
	PSLLQ $25, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	MOVO X2, X15
	MOVO X2, X4
	PSRLQ $2, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 608(BX)
	PSRLQ $29, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X4
	MOVO 272(AX), X3
	MOVO X3, X6
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 640(BX)
	MOVO X6, X5
	PSRLQ $19, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 656(BX)
	PSRLQ $46, X5
	MOVO 288(AX), X7
	MOVO X7, X8
	PSLLQ $18, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 672(BX)
	MOVO X8, X9
	MOVO X8, X11
	PSRLQ $9, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 688(BX)
	PSRLQ $36, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 704(BX)
	PSRLQ $63, X11
	MOVO 304(AX), X10
	MOVO X10, X13
	PSLLQ $1, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 720(BX)
	MOVO X13, X14
	PSRLQ $26, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 736(BX)
	PSRLQ $53, X14
	MOVO 320(AX), X12
	MOVO X12, X2
	PSLLQ $11, X12
	PAND X1, X12
	POR X12, X14
	PADDQ X14, X0
	MOVO X0, 752(BX)
	MOVO X2, X15
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 768(BX)
	PSRLQ $43, X15
	MOVO 336(AX), X3
	MOVO X3, X4
	PSLLQ $21, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 784(BX)
	MOVO X4, X6
	MOVO X4, X7
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 800(BX)
	PSRLQ $33, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 816(BX)
	PSRLQ $60, X7
	MOVO 352(AX), X5
	MOVO X5, X8
	PSLLQ $4, X5
	PAND X1, X5
	POR X5, X7
	PADDQ X7, X0
	MOVO X0, 832(BX)
	MOVO X8, X9
	PSRLQ $23, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 848(BX)
	PSRLQ $50, X9
	MOVO 368(AX), X10
	MOVO X10, X11
	PSLLQ $14, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 864(BX)
	MOVO X11, X13
	PSRLQ $13, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X13
	MOVO 384(AX), X12
	MOVO X12, X14
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 896(BX)
	MOVO X14, X2
	MOVO X14, X3
	PSRLQ $3, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 912(BX)
	PSRLQ $30, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 928(BX)
	PSRLQ $57, X3
	MOVO 400(AX), X15
	MOVO X15, X4
	PSLLQ $7, X15
	PAND X1, X15
	POR X15, X3
	PADDQ X3, X0
	MOVO X0, 944(BX)
	MOVO X4, X6
	PSRLQ $20, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 960(BX)
	PSRLQ $47, X6
	MOVO 416(AX), X5
	MOVO X5, X7
	PSLLQ $17, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 976(BX)
	MOVO X7, X8
	PSRLQ $10, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 992(BX)
	PSRLQ $37, X8
	PADDQ X8, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_28(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_28(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $268435455, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $28, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $56, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $8, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLQ $20, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $48, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $40, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	MOVO X13, X14
	MOVO X13, X15
	PSRLQ $4, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	PSRLQ $60, X15
	MOVO 64(AX), X2
	MOVO X2, X3
	PSLLQ $4, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 144(BX)
	MOVO X3, X4
	PSRLQ $24, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 160(BX)
	PSRLQ $52, X4
	MOVO 80(AX), X6
	MOVO X6, X5
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	MOVO X5, X7
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 192(BX)
	PSRLQ $44, X7
	MOVO 96(AX), X9
	MOVO X9, X8
	PSLLQ $20, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	MOVO X8, X10
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 224(BX)
	PSRLQ $36, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	MOVO 112(AX), X12
	MOVO X12, X11
	MOVO X12, X13
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 256(BX)
	PSRLQ $28, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 272(BX)
	PSRLQ $56, X13
	MOVO 128(AX), X14
	MOVO X14, X2
	PSLLQ $8, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 288(BX)
	MOVO X2, X15
	PSRLQ $20, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 304(BX)
	PSRLQ $48, X15
	MOVO 144(AX), X3
	MOVO X3, X6
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 320(BX)
	MOVO X6, X4
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 336(BX)
	PSRLQ $40, X4
	MOVO 160(AX), X5
	MOVO X5, X9
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 352(BX)
	MOVO X9, X7
	MOVO X9, X8
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 384(BX)
	PSRLQ $60, X8
	MOVO 176(AX), X10
	MOVO X10, X12
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 400(BX)
	MOVO X12, X11
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 416(BX)
	PSRLQ $52, X11
	MOVO 192(AX), X14
	MOVO X14, X13
	PSLLQ $12, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 432(BX)
	MOVO X13, X2
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 448(BX)
	PSRLQ $44, X2
	MOVO 208(AX), X3
	MOVO X3, X15
	PSLLQ $20, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 464(BX)
	MOVO X15, X6
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 480(BX)
	PSRLQ $36, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 224(AX), X5
	MOVO X5, X4
	MOVO X5, X9
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $28, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 528(BX)
	PSRLQ $56, X9
	MOVO 240(AX), X7
	MOVO X7, X10
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	MOVO X10, X8
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	PSRLQ $48, X8
	MOVO 256(AX), X12
	MOVO X12, X14
	PSLLQ $16, X12
	PAND X1, X12
	POR X12, X8
	PADDQ X8, X0
	MOVO X0, 576(BX)
	MOVO X14, X11
	PSRLQ $12, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 592(BX)
	PSRLQ $40, X11
	MOVO 272(AX), X13
	MOVO X13, X3
	PSLLQ $24, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 608(BX)
	MOVO X3, X2
	MOVO X3, X15
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 640(BX)
	PSRLQ $60, X15
	MOVO 288(AX), X6
	MOVO X6, X5
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X15
	PADDQ X15, X0
	MOVO X0, 656(BX)
	MOVO X5, X4
	PSRLQ $24, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 672(BX)
	PSRLQ $52, X4
	MOVO 304(AX), X7
	MOVO X7, X9
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO X9, X10
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 704(BX)
	PSRLQ $44, X10
	MOVO 320(AX), X12
	MOVO X12, X8
	PSLLQ $20, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 720(BX)
	MOVO X8, X14
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 736(BX)
	PSRLQ $36, X14
	PADDQ X14, X0
	MOVO X0, 752(BX)
	MOVO 336(AX), X13
	MOVO X13, X11
	MOVO X13, X3
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 768(BX)
	PSRLQ $28, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 784(BX)
	PSRLQ $56, X3
	MOVO 352(AX), X2
	MOVO X2, X6
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 800(BX)
	MOVO X6, X15
	PSRLQ $20, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 816(BX)
	PSRLQ $48, X15
	MOVO 368(AX), X5
	MOVO X5, X7
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X15
	PADDQ X15, X0
	MOVO X0, 832(BX)
	MOVO X7, X4
	PSRLQ $12, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 848(BX)
	PSRLQ $40, X4
	MOVO 384(AX), X9
	MOVO X9, X12
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 864(BX)
	MOVO X12, X10
	MOVO X12, X8
	PSRLQ $4, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 896(BX)
	PSRLQ $60, X8
	MOVO 400(AX), X14
	MOVO X14, X13
	PSLLQ $4, X14
	PAND X1, X14
	POR X14, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	MOVO X13, X11
	PSRLQ $24, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	PSRLQ $52, X11
	MOVO 416(AX), X2
	MOVO X2, X3
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X11
	PADDQ X11, X0
	MOVO X0, 944(BX)
	MOVO X3, X6
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 960(BX)
	PSRLQ $44, X6
	MOVO 432(AX), X5
	MOVO X5, X15
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 976(BX)
	MOVO X15, X7
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $36, X7
	PADDQ X7, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_29(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_29(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $536870911, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $29, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $58, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $6, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLQ $23, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $52, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $12, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	PSRLQ $17, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $46, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $18, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	MOVO X13, X14
	PSRLQ $11, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X14
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLQ $24, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	MOVO X2, X3
	MOVO X2, X4
	PSRLQ $5, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	PSRLQ $34, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 160(BX)
	PSRLQ $63, X4
	MOVO 80(AX), X6
	MOVO X6, X5
	PSLLQ $1, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	MOVO X5, X7
	PSRLQ $28, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 192(BX)
	PSRLQ $57, X7
	MOVO 96(AX), X9
	MOVO X9, X8
	PSLLQ $7, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	MOVO X8, X10
	PSRLQ $22, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 224(BX)
	PSRLQ $51, X10
	MOVO 112(AX), X12
	MOVO X12, X11
	PSLLQ $13, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	MOVO X11, X13
	PSRLQ $16, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	PSRLQ $45, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLQ $19, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 272(BX)
	MOVO X14, X2
	PSRLQ $10, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	PSRLQ $39, X2
	MOVO 144(AX), X3
	MOVO X3, X6
	PSLLQ $25, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 304(BX)
	MOVO X6, X4
	MOVO X6, X5
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	PSRLQ $33, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 336(BX)
	PSRLQ $62, X5
	MOVO 160(AX), X9
	MOVO X9, X7
	PSLLQ $2, X9
	PAND X1, X9
	POR X9, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	MOVO X7, X8
	PSRLQ $27, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X8
	MOVO 176(AX), X12
	MOVO X12, X10
	PSLLQ $8, X12
	PAND X1, X12
	POR X12, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	MOVO X10, X11
	PSRLQ $21, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 400(BX)
	PSRLQ $50, X11
	MOVO 192(AX), X15
	MOVO X15, X13
	PSLLQ $14, X15
	PAND X1, X15
	POR X15, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	MOVO X13, X14
	PSRLQ $15, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 432(BX)
	PSRLQ $44, X14
	MOVO 208(AX), X3
	MOVO X3, X2
	PSLLQ $20, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 448(BX)
	MOVO X2, X6
	PSRLQ $9, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 464(BX)
	PSRLQ $38, X6
	MOVO 224(AX), X4
	MOVO X4, X9
	PSLLQ $26, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	MOVO X9, X5
	MOVO X9, X7
	PSRLQ $3, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $61, X7
	MOVO 240(AX), X12
	MOVO X12, X8
	PSLLQ $3, X12
	PAND X1, X12
	POR X12, X7
	PADDQ X7, X0
	MOVO X0, 528(BX)
	MOVO X8, X10
	PSRLQ $26, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 544(BX)
	PSRLQ $55, X10
	MOVO 256(AX), X15
	MOVO X15, X11
	PSLLQ $9, X15
	PAND X1, X15
	POR X15, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO X11, X13
	PSRLQ $20, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $49, X13
	MOVO 272(AX), X3
	MOVO X3, X14
	PSLLQ $15, X3
	PAND X1, X3
	POR X3, X13
	PADDQ X13, X0
	MOVO X0, 592(BX)
	MOVO X14, X2
	PSRLQ $14, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $43, X2
	MOVO 288(AX), X4
	MOVO X4, X6
	PSLLQ $21, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 624(BX)
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 640(BX)
	PSRLQ $37, X9
	MOVO 304(AX), X5
	MOVO X5, X12
	PSLLQ $27, X5
	PAND X1, X5
	POR X5, X9
	PADDQ X9, X0
	MOVO X0, 656(BX)
	MOVO X12, X7
	MOVO X12, X8
	PSRLQ $2, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	PSRLQ $31, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 688(BX)
	PSRLQ $60, X8
	MOVO 320(AX), X15
	MOVO X15, X10
	PSLLQ $4, X15
	PAND X1, X15
	POR X15, X8
	PADDQ X8, X0
	MOVO X0, 704(BX)
	MOVO X10, X11
	PSRLQ $25, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 720(BX)
	PSRLQ $54, X11
	MOVO 336(AX), X3
	MOVO X3, X13
	PSLLQ $10, X3
	PAND X1, X3
	POR X3, X11
	PADDQ X11, X0
	MOVO X0, 736(BX)
	MOVO X13, X14
	PSRLQ $19, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X14
	MOVO 352(AX), X4
	MOVO X4, X2
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 768(BX)
	MOVO X2, X6
	PSRLQ $13, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	PSRLQ $42, X6
	MOVO 368(AX), X5
	MOVO X5, X9
	PSLLQ $22, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 800(BX)
	MOVO X9, X12
	PSRLQ $7, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 816(BX)
	PSRLQ $36, X12
	MOVO 384(AX), X7
	MOVO X7, X15
	PSLLQ $28, X7
	PAND X1, X7
	POR X7, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	MOVO X15, X8
	MOVO X15, X10
	PSRLQ $1, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 848(BX)
	PSRLQ $30, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 864(BX)
	PSRLQ $59, X10
	MOVO 400(AX), X3
	MOVO X3, X11
	PSLLQ $5, X3
	PAND X1, X3
	POR X3, X10
	PADDQ X10, X0
	MOVO X0, 880(BX)
	MOVO X11, X13
	PSRLQ $24, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 896(BX)
	PSRLQ $53, X13
	MOVO 416(AX), X4
	MOVO X4, X14
	PSLLQ $11, X4
	PAND X1, X4
	POR X4, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	MOVO X14, X2
	PSRLQ $18, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 928(BX)
	PSRLQ $47, X2
	MOVO 432(AX), X5
	MOVO X5, X6
	PSLLQ $17, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 944(BX)
	MOVO X6, X9
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 960(BX)
	PSRLQ $41, X9
	MOVO 448(AX), X7
	MOVO X7, X12
	PSLLQ $23, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 976(BX)
	MOVO X12, X15
	PSRLQ $6, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $35, X15
	PADDQ X15, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_30(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_30(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1073741823, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $30, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $60, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLQ $26, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $56, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	PSRLQ $22, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $52, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $12, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	MOVO X13, X14
	PSRLQ $18, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X14
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	MOVO X2, X3
	PSRLQ $14, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	PSRLQ $44, X3
	MOVO 80(AX), X4
	MOVO X4, X6
	PSLLQ $20, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 160(BX)
	MOVO X6, X5
	PSRLQ $10, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $40, X5
	MOVO 96(AX), X7
	MOVO X7, X9
	PSLLQ $24, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 192(BX)
	MOVO X9, X8
	PSRLQ $6, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $36, X8
	MOVO 112(AX), X10
	MOVO X10, X12
	PSLLQ $28, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 224(BX)
	MOVO X12, X11
	MOVO X12, X13
	PSRLQ $2, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	PSRLQ $62, X13
	MOVO 128(AX), X15
	MOVO X15, X14
	PSLLQ $2, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 272(BX)
	MOVO X14, X2
	PSRLQ $28, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	PSRLQ $58, X2
	MOVO 144(AX), X4
	MOVO X4, X3
	PSLLQ $6, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 304(BX)
	MOVO X3, X6
	PSRLQ $24, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 320(BX)
	PSRLQ $54, X6
	MOVO 160(AX), X7
	MOVO X7, X5
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 336(BX)
	MOVO X5, X9
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	PSRLQ $50, X9
	MOVO 176(AX), X10
	MOVO X10, X8
	PSLLQ $14, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 368(BX)
	MOVO X8, X12
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	PSRLQ $46, X12
	MOVO 192(AX), X11
	MOVO X11, X15
	PSLLQ $18, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 400(BX)
	MOVO X15, X13
	PSRLQ $12, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $42, X13
	MOVO 208(AX), X14
	MOVO X14, X4
	PSLLQ $22, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 432(BX)
	MOVO X4, X2
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $38, X2
	MOVO 224(AX), X3
	MOVO X3, X7
	PSLLQ $26, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 464(BX)
	MOVO X7, X6
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $34, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 240(AX), X5
	MOVO X5, X10
	MOVO X5, X9
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $30, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	PSRLQ $60, X9
	MOVO 256(AX), X8
	MOVO X8, X11
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	MOVO X11, X12
	PSRLQ $26, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 560(BX)
	PSRLQ $56, X12
	MOVO 272(AX), X15
	MOVO X15, X14
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 576(BX)
	MOVO X14, X13
	PSRLQ $22, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 592(BX)
	PSRLQ $52, X13
	MOVO 288(AX), X4
	MOVO X4, X3
	PSLLQ $12, X4
	PAND X1, X4
	POR X4, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	MOVO X3, X2
	PSRLQ $18, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X2
	MOVO 304(AX), X7
	MOVO X7, X6
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 640(BX)
	MOVO X6, X5
	PSRLQ $14, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 656(BX)
	PSRLQ $44, X5
	MOVO 320(AX), X10
	MOVO X10, X8
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X5
	PADDQ X5, X0
	MOVO X0, 672(BX)
	MOVO X8, X9
	PSRLQ $10, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 688(BX)
	PSRLQ $40, X9
	MOVO 336(AX), X11
	MOVO X11, X15
	PSLLQ $24, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 704(BX)
	MOVO X15, X12
	PSRLQ $6, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 720(BX)
	PSRLQ $36, X12
	MOVO 352(AX), X14
	MOVO X14, X4
	PSLLQ $28, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 736(BX)
	MOVO X4, X13
	MOVO X4, X3
	PSRLQ $2, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 768(BX)
	PSRLQ $62, X3
	MOVO 368(AX), X7
	MOVO X7, X2
	PSLLQ $2, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 784(BX)
	MOVO X2, X6
	PSRLQ $28, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	PSRLQ $58, X6
	MOVO 384(AX), X10
	MOVO X10, X5
	PSLLQ $6, X10
	PAND X1, X10
	POR X10, X6
	PADDQ X6, X0
	MOVO X0, 816(BX)
	MOVO X5, X8
	PSRLQ $24, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 832(BX)
	PSRLQ $54, X8
	MOVO 400(AX), X11
	MOVO X11, X9
	PSLLQ $10, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 848(BX)
	MOVO X9, X15
	PSRLQ $20, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 864(BX)
	PSRLQ $50, X15
	MOVO 416(AX), X14
	MOVO X14, X12
	PSLLQ $14, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 880(BX)
	MOVO X12, X4
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 896(BX)
	PSRLQ $46, X4
	MOVO 432(AX), X13
	MOVO X13, X7
	PSLLQ $18, X13
	PAND X1, X13
	POR X13, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	MOVO X7, X3
	PSRLQ $12, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 928(BX)
	PSRLQ $42, X3
	MOVO 448(AX), X2
	MOVO X2, X10
	PSLLQ $22, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 944(BX)
	MOVO X10, X6
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 960(BX)
	PSRLQ $38, X6
	MOVO 464(AX), X5
	MOVO X5, X11
	PSLLQ $26, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 976(BX)
	MOVO X11, X8
	PSRLQ $4, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 992(BX)
	PSRLQ $34, X8
	PADDQ X8, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_31(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_31(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2147483647, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $31, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $62, X5
	MOVO 16(AX), X6
	MOVO X6, X7
	PSLLQ $2, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO X7, X8
	PSRLQ $29, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $60, X8
	MOVO 32(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 64(BX)
	MOVO X10, X11
	PSRLQ $27, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $58, X11
	MOVO 48(AX), X12
	MOVO X12, X13
	PSLLQ $6, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 96(BX)
	MOVO X13, X14
	PSRLQ $25, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X14
	MOVO 64(AX), X15
	MOVO X15, X2
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 128(BX)
	MOVO X2, X3
	PSRLQ $23, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	PSRLQ $54, X3
	MOVO 80(AX), X4
	MOVO X4, X6
	PSLLQ $10, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 160(BX)
	MOVO X6, X5
	PSRLQ $21, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $52, X5
	MOVO 96(AX), X7
	MOVO X7, X9
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 192(BX)
	MOVO X9, X8
	PSRLQ $19, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $50, X8
	MOVO 112(AX), X10
	MOVO X10, X12
	PSLLQ $14, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 224(BX)
	MOVO X12, X11
	PSRLQ $17, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X11
	MOVO 128(AX), X13
	MOVO X13, X15
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 256(BX)
	MOVO X15, X14
	PSRLQ $15, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 272(BX)
	PSRLQ $46, X14
	MOVO 144(AX), X2
	MOVO X2, X4
	PSLLQ $18, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 288(BX)
	MOVO X4, X3
	PSRLQ $13, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	PSRLQ $44, X3
	MOVO 160(AX), X6
	MOVO X6, X7
	PSLLQ $20, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 320(BX)
	MOVO X7, X5
	PSRLQ $11, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	PSRLQ $42, X5
	MOVO 176(AX), X9
	MOVO X9, X10
	PSLLQ $22, X9
	PAND X1, X9
	POR X9, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	MOVO X10, X8
	PSRLQ $9, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X8
	MOVO 192(AX), X12
	MOVO X12, X13
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	MOVO X13, X11
	PSRLQ $7, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 400(BX)
	PSRLQ $38, X11
	MOVO 208(AX), X15
	MOVO X15, X2
	PSLLQ $26, X15
	PAND X1, X15
	POR X15, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	MOVO X2, X14
	PSRLQ $5, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	PSRLQ $36, X14
	MOVO 224(AX), X4
	MOVO X4, X6
	PSLLQ $28, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 448(BX)
	MOVO X6, X3
	PSRLQ $3, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 464(BX)
	PSRLQ $34, X3
	MOVO 240(AX), X7
	MOVO X7, X9
	PSLLQ $30, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 480(BX)
	MOVO X9, X5
	MOVO X9, X10
	PSRLQ $1, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $63, X10
	MOVO 256(AX), X12
	MOVO X12, X8
	PSLLQ $1, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	MOVO X8, X13
	PSRLQ $30, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 544(BX)
	PSRLQ $61, X13
	MOVO 272(AX), X15
	MOVO X15, X11
	PSLLQ $3, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 560(BX)
	MOVO X11, X2
	PSRLQ $28, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $59, X2
	MOVO 288(AX), X4
	MOVO X4, X14
	PSLLQ $5, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	MOVO X14, X6
	PSRLQ $26, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $57, X6
	MOVO 304(AX), X7
	MOVO X7, X3
	PSLLQ $7, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 624(BX)
	MOVO X3, X9
	PSRLQ $24, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 640(BX)
	PSRLQ $55, X9
	MOVO 320(AX), X5
	MOVO X5, X12
	PSLLQ $9, X5
	PAND X1, X5
	POR X5, X9
	PADDQ X9, X0
	MOVO X0, 656(BX)
	MOVO X12, X10
	PSRLQ $22, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	PSRLQ $53, X10
	MOVO 336(AX), X8
	MOVO X8, X15
	PSLLQ $11, X8
	PAND X1, X8
	POR X8, X10
	PADDQ X10, X0
	MOVO X0, 688(BX)
	MOVO X15, X13
	PSRLQ $20, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 704(BX)
	PSRLQ $51, X13
	MOVO 352(AX), X11
	MOVO X11, X4
	PSLLQ $13, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	MOVO X4, X2
	PSRLQ $18, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 736(BX)
	PSRLQ $49, X2
	MOVO 368(AX), X14
	MOVO X14, X7
	PSLLQ $15, X14
	PAND X1, X14
	POR X14, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	MOVO X7, X6
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $47, X6
	MOVO 384(AX), X3
	MOVO X3, X5
	PSLLQ $17, X3
	PAND X1, X3
	POR X3, X6
	PADDQ X6, X0
	MOVO X0, 784(BX)
	MOVO X5, X9
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	PSRLQ $45, X9
	MOVO 400(AX), X12
	MOVO X12, X8
	PSLLQ $19, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 816(BX)
	MOVO X8, X10
	PSRLQ $12, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 832(BX)
	PSRLQ $43, X10
	MOVO 416(AX), X15
	MOVO X15, X11
	PSLLQ $21, X15
	PAND X1, X15
	POR X15, X10
	PADDQ X10, X0
	MOVO X0, 848(BX)
	MOVO X11, X13
	PSRLQ $10, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 864(BX)
	PSRLQ $41, X13
	MOVO 432(AX), X4
	MOVO X4, X14
	PSLLQ $23, X4
	PAND X1, X4
	POR X4, X13
	PADDQ X13, X0
	MOVO X0, 880(BX)
	MOVO X14, X2
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 896(BX)
	PSRLQ $39, X2
	MOVO 448(AX), X7
	MOVO X7, X3
	PSLLQ $25, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 912(BX)
	MOVO X3, X6
	PSRLQ $6, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 928(BX)
	PSRLQ $37, X6
	MOVO 464(AX), X5
	MOVO X5, X12
	PSLLQ $27, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO X12, X9
	PSRLQ $4, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	PSRLQ $35, X9
	MOVO 480(AX), X8
	MOVO X8, X15
	PSLLQ $29, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 976(BX)
	MOVO X15, X10
	PSRLQ $2, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $33, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_32(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_32(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4294967295, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $32, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO 16(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	PSRLQ $32, X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO 32(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	PSRLQ $32, X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	MOVO 48(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	PSRLQ $32, X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO 64(AX), X11
	MOVO X11, X12
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	PSRLQ $32, X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	MOVO 80(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	PSRLQ $32, X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO 96(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	PSRLQ $32, X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	MOVO 112(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $32, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO 128(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $32, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	MOVO 144(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $32, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO 160(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $32, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	MOVO 176(AX), X11
	MOVO X11, X12
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	PSRLQ $32, X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO 192(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $32, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	MOVO 208(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $32, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO 224(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $32, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	MOVO 240(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $32, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 256(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $32, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	MOVO 272(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $32, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO 288(AX), X11
	MOVO X11, X12
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $32, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	MOVO 304(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $32, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO 320(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $32, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	MOVO 336(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $32, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO 352(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $32, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	MOVO 368(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $32, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO 384(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $32, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	MOVO 400(AX), X11
	MOVO X11, X12
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	PSRLQ $32, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO 416(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	PSRLQ $32, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	MOVO 432(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $32, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 448(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $32, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	MOVO 464(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $32, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO 480(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $32, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	MOVO 496(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $32, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_33(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_33(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $8589934591, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $33, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $31, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $2, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $35, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $29, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $37, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $27, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	MOVO X12, X13
	PSRLQ $6, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $39, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $25, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	MOVO X15, X2
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	PSRLQ $41, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLQ $23, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	MOVO X5, X4
	PSRLQ $10, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	PSRLQ $43, X4
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLQ $21, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	MOVO X8, X7
	PSRLQ $12, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 192(BX)
	PSRLQ $45, X7
	MOVO 112(AX), X9
	MOVO X9, X11
	PSLLQ $19, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	MOVO X11, X10
	PSRLQ $14, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $47, X10
	MOVO 128(AX), X12
	MOVO X12, X14
	PSLLQ $17, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	MOVO X14, X13
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	PSRLQ $49, X13
	MOVO 144(AX), X15
	MOVO X15, X3
	PSLLQ $15, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 272(BX)
	MOVO X3, X2
	PSRLQ $18, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	PSRLQ $51, X2
	MOVO 160(AX), X5
	MOVO X5, X6
	PSLLQ $13, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 304(BX)
	MOVO X6, X4
	PSRLQ $20, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	PSRLQ $53, X4
	MOVO 176(AX), X8
	MOVO X8, X9
	PSLLQ $11, X8
	PAND X1, X8
	POR X8, X4
	PADDQ X4, X0
	MOVO X0, 336(BX)
	MOVO X9, X7
	PSRLQ $22, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	PSRLQ $55, X7
	MOVO 192(AX), X11
	MOVO X11, X12
	PSLLQ $9, X11
	PAND X1, X11
	POR X11, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	MOVO X12, X10
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	PSRLQ $57, X10
	MOVO 208(AX), X14
	MOVO X14, X15
	PSLLQ $7, X14
	PAND X1, X14
	POR X14, X10
	PADDQ X10, X0
	MOVO X0, 400(BX)
	MOVO X15, X13
	PSRLQ $26, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $59, X13
	MOVO 224(AX), X3
	MOVO X3, X5
	PSLLQ $5, X3
	PAND X1, X3
	POR X3, X13
	PADDQ X13, X0
	MOVO X0, 432(BX)
	MOVO X5, X2
	PSRLQ $28, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 448(BX)
	PSRLQ $61, X2
	MOVO 240(AX), X6
	MOVO X6, X8
	PSLLQ $3, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 464(BX)
	MOVO X8, X4
	PSRLQ $30, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 480(BX)
	PSRLQ $63, X4
	MOVO 256(AX), X9
	MOVO X9, X11
	PSLLQ $1, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X11
	MOVO 272(AX), X7
	MOVO X7, X12
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	MOVO X12, X14
	PSRLQ $1, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $34, X14
	MOVO 288(AX), X10
	MOVO X10, X15
	PSLLQ $30, X10
	PAND X1, X10
	POR X10, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	MOVO X15, X3
	PSRLQ $3, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 560(BX)
	PSRLQ $36, X3
	MOVO 304(AX), X13
	MOVO X13, X5
	PSLLQ $28, X13
	PAND X1, X13
	POR X13, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	MOVO X5, X6
	PSRLQ $5, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 592(BX)
	PSRLQ $38, X6
	MOVO 320(AX), X2
	MOVO X2, X8
	PSLLQ $26, X2
	PAND X1, X2
	POR X2, X6
	PADDQ X6, X0
	MOVO X0, 608(BX)
	MOVO X8, X9
	PSRLQ $7, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 624(BX)
	PSRLQ $40, X9
	MOVO 336(AX), X4
	MOVO X4, X7
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	MOVO X7, X11
	PSRLQ $9, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 656(BX)
	PSRLQ $42, X11
	MOVO 352(AX), X12
	MOVO X12, X10
	PSLLQ $22, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 672(BX)
	MOVO X10, X14
	PSRLQ $11, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 688(BX)
	PSRLQ $44, X14
	MOVO 368(AX), X15
	MOVO X15, X13
	PSLLQ $20, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 704(BX)
	MOVO X13, X3
	PSRLQ $13, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $46, X3
	MOVO 384(AX), X5
	MOVO X5, X2
	PSLLQ $18, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 736(BX)
	MOVO X2, X6
	PSRLQ $15, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X6
	MOVO 400(AX), X8
	MOVO X8, X4
	PSLLQ $16, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 768(BX)
	MOVO X4, X9
	PSRLQ $17, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 784(BX)
	PSRLQ $50, X9
	MOVO 416(AX), X7
	MOVO X7, X12
	PSLLQ $14, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	MOVO X12, X11
	PSRLQ $19, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	PSRLQ $52, X11
	MOVO 432(AX), X10
	MOVO X10, X15
	PSLLQ $12, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 832(BX)
	MOVO X15, X14
	PSRLQ $21, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 848(BX)
	PSRLQ $54, X14
	MOVO 448(AX), X13
	MOVO X13, X5
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 864(BX)
	MOVO X5, X3
	PSRLQ $23, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X3
	MOVO 464(AX), X2
	MOVO X2, X8
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	MOVO X8, X6
	PSRLQ $25, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	PSRLQ $58, X6
	MOVO 480(AX), X4
	MOVO X4, X7
	PSLLQ $6, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	MOVO X7, X9
	PSRLQ $27, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $60, X9
	MOVO 496(AX), X12
	MOVO X12, X10
	PSLLQ $4, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	MOVO X10, X11
	PSRLQ $29, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 976(BX)
	PSRLQ $62, X11
	MOVO 512(AX), X15
	MOVO X15, X13
	PSLLQ $2, X15
	PAND X1, X15
	POR X15, X11
	PADDQ X11, X0
	MOVO X0, 992(BX)
	PSRLQ $31, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_34(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_34(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $17179869183, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $34, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $30, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $38, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $26, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLQ $8, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $42, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $22, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	MOVO X12, X13
	PSRLQ $12, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $46, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $18, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	MOVO X15, X2
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	PSRLQ $50, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLQ $14, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	MOVO X5, X4
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	PSRLQ $54, X4
	MOVO 96(AX), X6
	MOVO X6, X8
	PSLLQ $10, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	MOVO X8, X7
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 192(BX)
	PSRLQ $58, X7
	MOVO 112(AX), X9
	MOVO X9, X11
	PSLLQ $6, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 208(BX)
	MOVO X11, X10
	PSRLQ $28, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $62, X10
	MOVO 128(AX), X12
	MOVO X12, X14
	PSLLQ $2, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X14
	MOVO 144(AX), X13
	MOVO X13, X15
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	MOVO X15, X3
	PSRLQ $2, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 272(BX)
	PSRLQ $36, X3
	MOVO 160(AX), X2
	MOVO X2, X5
	PSLLQ $28, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	MOVO X5, X6
	PSRLQ $6, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 304(BX)
	PSRLQ $40, X6
	MOVO 176(AX), X4
	MOVO X4, X8
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	MOVO X8, X9
	PSRLQ $10, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 336(BX)
	PSRLQ $44, X9
	MOVO 192(AX), X7
	MOVO X7, X11
	PSLLQ $20, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	MOVO X11, X12
	PSRLQ $14, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 368(BX)
	PSRLQ $48, X12
	MOVO 208(AX), X10
	MOVO X10, X13
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	MOVO X13, X14
	PSRLQ $18, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 400(BX)
	PSRLQ $52, X14
	MOVO 224(AX), X15
	MOVO X15, X2
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 416(BX)
	MOVO X2, X3
	PSRLQ $22, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	PSRLQ $56, X3
	MOVO 240(AX), X5
	MOVO X5, X4
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	MOVO X4, X6
	PSRLQ $26, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $60, X6
	MOVO 256(AX), X8
	MOVO X8, X7
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $30, X7
	PADDQ X7, X0
	MOVO X0, 496(BX)
	MOVO 272(AX), X9
	MOVO X9, X11
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $34, X11
	MOVO 288(AX), X10
	MOVO X10, X12
	PSLLQ $30, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 528(BX)
	MOVO X12, X13
	PSRLQ $4, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $38, X13
	MOVO 304(AX), X15
	MOVO X15, X14
	PSLLQ $26, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 560(BX)
	MOVO X14, X2
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 576(BX)
	PSRLQ $42, X2
	MOVO 320(AX), X5
	MOVO X5, X3
	PSLLQ $22, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	MOVO X3, X4
	PSRLQ $12, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 608(BX)
	PSRLQ $46, X4
	MOVO 336(AX), X8
	MOVO X8, X6
	PSLLQ $18, X8
	PAND X1, X8
	POR X8, X4
	PADDQ X4, X0
	MOVO X0, 624(BX)
	MOVO X6, X7
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 640(BX)
	PSRLQ $50, X7
	MOVO 352(AX), X9
	MOVO X9, X10
	PSLLQ $14, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 656(BX)
	MOVO X10, X11
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 672(BX)
	PSRLQ $54, X11
	MOVO 368(AX), X12
	MOVO X12, X15
	PSLLQ $10, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 688(BX)
	MOVO X15, X13
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 704(BX)
	PSRLQ $58, X13
	MOVO 384(AX), X14
	MOVO X14, X5
	PSLLQ $6, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	MOVO X5, X2
	PSRLQ $28, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 736(BX)
	PSRLQ $62, X2
	MOVO 400(AX), X3
	MOVO X3, X8
	PSLLQ $2, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X8
	MOVO 416(AX), X4
	MOVO X4, X6
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X8
	PADDQ X8, X0
	MOVO X0, 768(BX)
	MOVO X6, X9
	PSRLQ $2, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 784(BX)
	PSRLQ $36, X9
	MOVO 432(AX), X7
	MOVO X7, X10
	PSLLQ $28, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	MOVO X10, X12
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 816(BX)
	PSRLQ $40, X12
	MOVO 448(AX), X11
	MOVO X11, X15
	PSLLQ $24, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	MOVO X15, X14
	PSRLQ $10, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 848(BX)
	PSRLQ $44, X14
	MOVO 464(AX), X13
	MOVO X13, X5
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 864(BX)
	MOVO X5, X3
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 880(BX)
	PSRLQ $48, X3
	MOVO 480(AX), X2
	MOVO X2, X4
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	MOVO X4, X8
	PSRLQ $18, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $52, X8
	MOVO 496(AX), X6
	MOVO X6, X7
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 928(BX)
	MOVO X7, X9
	PSRLQ $22, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $56, X9
	MOVO 512(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	MOVO X11, X12
	PSRLQ $26, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	PSRLQ $60, X12
	MOVO 528(AX), X15
	MOVO X15, X13
	PSLLQ $4, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $30, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_35(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_35(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $34359738367, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $35, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $29, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $6, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $41, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $23, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLQ $12, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $47, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $17, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	MOVO X12, X13
	PSRLQ $18, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $53, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $11, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	MOVO X15, X2
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	PSRLQ $59, X2
	MOVO 80(AX), X3
	MOVO X3, X5
	PSLLQ $5, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	PSRLQ $30, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLQ $34, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	MOVO X6, X8
	PSRLQ $1, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $36, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLQ $28, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 192(BX)
	MOVO X9, X11
	PSRLQ $7, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $42, X11
	MOVO 128(AX), X10
	MOVO X10, X12
	PSLLQ $22, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	MOVO X12, X14
	PSRLQ $13, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X14
	MOVO 144(AX), X13
	MOVO X13, X15
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	MOVO X15, X3
	PSRLQ $19, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 272(BX)
	PSRLQ $54, X3
	MOVO 160(AX), X2
	MOVO X2, X4
	PSLLQ $10, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	MOVO X4, X5
	PSRLQ $25, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	PSRLQ $60, X5
	MOVO 176(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 320(BX)
	PSRLQ $31, X7
	MOVO 192(AX), X8
	MOVO X8, X9
	PSLLQ $33, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	MOVO X9, X10
	PSRLQ $2, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	PSRLQ $37, X10
	MOVO 208(AX), X11
	MOVO X11, X12
	PSLLQ $27, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 368(BX)
	MOVO X12, X13
	PSRLQ $8, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	PSRLQ $43, X13
	MOVO 224(AX), X14
	MOVO X14, X15
	PSLLQ $21, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 400(BX)
	MOVO X15, X2
	PSRLQ $14, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $49, X2
	MOVO 240(AX), X3
	MOVO X3, X4
	PSLLQ $15, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO X4, X6
	PSRLQ $20, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $55, X6
	MOVO 256(AX), X5
	MOVO X5, X8
	PSLLQ $9, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 464(BX)
	MOVO X8, X7
	PSRLQ $26, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 480(BX)
	PSRLQ $61, X7
	MOVO 272(AX), X9
	MOVO X9, X11
	PSLLQ $3, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X11
	MOVO 288(AX), X10
	MOVO X10, X12
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	MOVO X12, X14
	PSRLQ $3, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $38, X14
	MOVO 304(AX), X13
	MOVO X13, X15
	PSLLQ $26, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	MOVO X15, X3
	PSRLQ $9, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 560(BX)
	PSRLQ $44, X3
	MOVO 320(AX), X2
	MOVO X2, X4
	PSLLQ $20, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	MOVO X4, X5
	PSRLQ $15, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	PSRLQ $50, X5
	MOVO 336(AX), X6
	MOVO X6, X8
	PSLLQ $14, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	MOVO X8, X9
	PSRLQ $21, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X9
	MOVO 352(AX), X7
	MOVO X7, X10
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	MOVO X10, X11
	PSRLQ $27, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 656(BX)
	PSRLQ $62, X11
	MOVO 368(AX), X12
	MOVO X12, X13
	PSLLQ $2, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 672(BX)
	PSRLQ $33, X13
	MOVO 384(AX), X14
	MOVO X14, X15
	PSLLQ $31, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 688(BX)
	MOVO X15, X2
	PSRLQ $4, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 704(BX)
	PSRLQ $39, X2
	MOVO 400(AX), X3
	MOVO X3, X4
	PSLLQ $25, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 720(BX)
	MOVO X4, X6
	PSRLQ $10, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 736(BX)
	PSRLQ $45, X6
	MOVO 416(AX), X5
	MOVO X5, X8
	PSLLQ $19, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	MOVO X8, X7
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 768(BX)
	PSRLQ $51, X7
	MOVO 432(AX), X9
	MOVO X9, X10
	PSLLQ $13, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 784(BX)
	MOVO X10, X12
	PSRLQ $22, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 800(BX)
	PSRLQ $57, X12
	MOVO 448(AX), X11
	MOVO X11, X14
	PSLLQ $7, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X14, X13
	PSRLQ $28, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 832(BX)
	PSRLQ $63, X13
	MOVO 464(AX), X15
	MOVO X15, X3
	PSLLQ $1, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 848(BX)
	PSRLQ $34, X3
	MOVO 480(AX), X2
	MOVO X2, X4
	PSLLQ $30, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 864(BX)
	MOVO X4, X5
	PSRLQ $5, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X5
	MOVO 496(AX), X6
	MOVO X6, X8
	PSLLQ $24, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 896(BX)
	MOVO X8, X9
	PSRLQ $11, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	PSRLQ $46, X9
	MOVO 512(AX), X7
	MOVO X7, X10
	PSLLQ $18, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	MOVO X10, X11
	PSRLQ $17, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 944(BX)
	PSRLQ $52, X11
	MOVO 528(AX), X12
	MOVO X12, X14
	PSLLQ $12, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 960(BX)
	MOVO X14, X15
	PSRLQ $23, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 976(BX)
	PSRLQ $58, X15
	MOVO 544(AX), X13
	MOVO X13, X2
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $29, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_36(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_36(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $68719476735, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $36, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $28, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $44, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $20, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $52, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	MOVO X12, X13
	PSRLQ $24, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $60, X13
	MOVO 64(AX), X14
	MOVO X14, X15
	PSLLQ $4, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	MOVO X3, X5
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 144(BX)
	PSRLQ $40, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	MOVO X6, X8
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $48, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 192(BX)
	MOVO X9, X11
	PSRLQ $20, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $56, X11
	MOVO 128(AX), X10
	MOVO X10, X12
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $28, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	MOVO 144(AX), X14
	MOVO X14, X13
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	PSRLQ $36, X13
	MOVO 160(AX), X2
	MOVO X2, X15
	PSLLQ $28, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 272(BX)
	MOVO X15, X3
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 288(BX)
	PSRLQ $44, X3
	MOVO 176(AX), X4
	MOVO X4, X5
	PSLLQ $20, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 304(BX)
	MOVO X5, X6
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 320(BX)
	PSRLQ $52, X6
	MOVO 192(AX), X7
	MOVO X7, X8
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 336(BX)
	MOVO X8, X9
	PSRLQ $24, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 352(BX)
	PSRLQ $60, X9
	MOVO 208(AX), X10
	MOVO X10, X11
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X11
	MOVO 224(AX), X12
	MOVO X12, X14
	PSLLQ $32, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 384(BX)
	MOVO X14, X2
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $40, X2
	MOVO 240(AX), X13
	MOVO X13, X15
	PSLLQ $24, X13
	PAND X1, X13
	POR X13, X2
	PADDQ X2, X0
	MOVO X0, 416(BX)
	MOVO X15, X4
	PSRLQ $12, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 432(BX)
	PSRLQ $48, X4
	MOVO 256(AX), X3
	MOVO X3, X5
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	MOVO X5, X7
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 464(BX)
	PSRLQ $56, X7
	MOVO 272(AX), X6
	MOVO X6, X8
	PSLLQ $8, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $28, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	MOVO 288(AX), X10
	MOVO X10, X9
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 512(BX)
	PSRLQ $36, X9
	MOVO 304(AX), X12
	MOVO X12, X11
	PSLLQ $28, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 528(BX)
	MOVO X11, X14
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 544(BX)
	PSRLQ $44, X14
	MOVO 320(AX), X13
	MOVO X13, X2
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	MOVO X2, X15
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 576(BX)
	PSRLQ $52, X15
	MOVO 336(AX), X3
	MOVO X3, X4
	PSLLQ $12, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 592(BX)
	MOVO X4, X5
	PSRLQ $24, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 608(BX)
	PSRLQ $60, X5
	MOVO 352(AX), X6
	MOVO X6, X7
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X7
	MOVO 368(AX), X8
	MOVO X8, X10
	PSLLQ $32, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 640(BX)
	MOVO X10, X12
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 656(BX)
	PSRLQ $40, X12
	MOVO 384(AX), X9
	MOVO X9, X11
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	MOVO X11, X13
	PSRLQ $12, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 688(BX)
	PSRLQ $48, X13
	MOVO 400(AX), X14
	MOVO X14, X2
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 704(BX)
	MOVO X2, X3
	PSRLQ $20, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 720(BX)
	PSRLQ $56, X3
	MOVO 416(AX), X15
	MOVO X15, X4
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X3
	PADDQ X3, X0
	MOVO X0, 736(BX)
	PSRLQ $28, X4
	PADDQ X4, X0
	MOVO X0, 752(BX)
	MOVO 432(AX), X6
	MOVO X6, X5
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 768(BX)
	PSRLQ $36, X5
	MOVO 448(AX), X8
	MOVO X8, X7
	PSLLQ $28, X8
	PAND X1, X8
	POR X8, X5
	PADDQ X5, X0
	MOVO X0, 784(BX)
	MOVO X7, X10
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 800(BX)
	PSRLQ $44, X10
	MOVO 464(AX), X9
	MOVO X9, X12
	PSLLQ $20, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 816(BX)
	MOVO X12, X11
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	PSRLQ $52, X11
	MOVO 480(AX), X14
	MOVO X14, X13
	PSLLQ $12, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 848(BX)
	MOVO X13, X2
	PSRLQ $24, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 864(BX)
	PSRLQ $60, X2
	MOVO 496(AX), X15
	MOVO X15, X3
	PSLLQ $4, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X3
	MOVO 512(AX), X4
	MOVO X4, X6
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	MOVO X6, X8
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 912(BX)
	PSRLQ $40, X8
	MOVO 528(AX), X5
	MOVO X5, X7
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X8
	PADDQ X8, X0
	MOVO X0, 928(BX)
	MOVO X7, X9
	PSRLQ $12, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $48, X9
	MOVO 544(AX), X10
	MOVO X10, X12
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	MOVO X12, X14
	PSRLQ $20, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 976(BX)
	PSRLQ $56, X14
	MOVO 560(AX), X11
	MOVO X11, X13
	PSLLQ $8, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $28, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_37(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_37(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $137438953471, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $37, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $27, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $10, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $47, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $17, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLQ $20, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $57, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $7, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $30, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $34, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	MOVO X14, X15
	PSRLQ $3, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $24, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	MOVO X3, X5
	PSRLQ $13, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 144(BX)
	PSRLQ $50, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLQ $14, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	MOVO X6, X8
	PSRLQ $23, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $60, X8
	MOVO 112(AX), X7
	MOVO X7, X9
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 192(BX)
	PSRLQ $33, X9
	MOVO 128(AX), X11
	MOVO X11, X10
	PSLLQ $31, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	MOVO X10, X13
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 224(BX)
	PSRLQ $43, X13
	MOVO 144(AX), X12
	MOVO X12, X14
	PSLLQ $21, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 240(BX)
	MOVO X14, X2
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	PSRLQ $53, X2
	MOVO 160(AX), X15
	MOVO X15, X3
	PSLLQ $11, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 272(BX)
	MOVO X3, X4
	PSRLQ $26, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	PSRLQ $63, X4
	MOVO 176(AX), X5
	MOVO X5, X6
	PSLLQ $1, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	PSRLQ $36, X6
	MOVO 192(AX), X7
	MOVO X7, X8
	PSLLQ $28, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	MOVO X8, X11
	PSRLQ $9, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 336(BX)
	PSRLQ $46, X11
	MOVO 208(AX), X9
	MOVO X9, X10
	PSLLQ $18, X9
	PAND X1, X9
	POR X9, X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	MOVO X10, X12
	PSRLQ $19, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X12
	MOVO 224(AX), X13
	MOVO X13, X14
	PSLLQ $8, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	PSRLQ $29, X14
	MOVO 240(AX), X15
	MOVO X15, X2
	PSLLQ $35, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	MOVO X2, X3
	PSRLQ $2, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 416(BX)
	PSRLQ $39, X3
	MOVO 256(AX), X5
	MOVO X5, X4
	PSLLQ $25, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 432(BX)
	MOVO X4, X7
	PSRLQ $12, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $49, X7
	MOVO 272(AX), X6
	MOVO X6, X8
	PSLLQ $15, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 464(BX)
	MOVO X8, X9
	PSRLQ $22, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 480(BX)
	PSRLQ $59, X9
	MOVO 288(AX), X11
	MOVO X11, X10
	PSLLQ $5, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X10
	MOVO 304(AX), X13
	MOVO X13, X12
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 512(BX)
	MOVO X12, X15
	PSRLQ $5, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $42, X15
	MOVO 320(AX), X14
	MOVO X14, X2
	PSLLQ $22, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 544(BX)
	MOVO X2, X5
	PSRLQ $15, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	PSRLQ $52, X5
	MOVO 336(AX), X3
	MOVO X3, X4
	PSLLQ $12, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 576(BX)
	MOVO X4, X6
	PSRLQ $25, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	PSRLQ $62, X6
	MOVO 352(AX), X7
	MOVO X7, X8
	PSLLQ $2, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 608(BX)
	PSRLQ $35, X8
	MOVO 368(AX), X11
	MOVO X11, X9
	PSLLQ $29, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 624(BX)
	MOVO X9, X13
	PSRLQ $8, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	PSRLQ $45, X13
	MOVO 384(AX), X10
	MOVO X10, X12
	PSLLQ $19, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	MOVO X12, X14
	PSRLQ $18, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	PSRLQ $55, X14
	MOVO 400(AX), X15
	MOVO X15, X2
	PSLLQ $9, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	PSRLQ $28, X2
	MOVO 416(AX), X3
	MOVO X3, X5
	PSLLQ $36, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	MOVO X5, X4
	PSRLQ $1, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 720(BX)
	PSRLQ $38, X4
	MOVO 432(AX), X7
	MOVO X7, X6
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 736(BX)
	MOVO X6, X11
	PSRLQ $11, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X11
	MOVO 448(AX), X8
	MOVO X8, X9
	PSLLQ $16, X8
	PAND X1, X8
	POR X8, X11
	PADDQ X11, X0
	MOVO X0, 768(BX)
	MOVO X9, X10
	PSRLQ $21, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $58, X10
	MOVO 464(AX), X13
	MOVO X13, X12
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 800(BX)
	PSRLQ $31, X12
	MOVO 480(AX), X15
	MOVO X15, X14
	PSLLQ $33, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X14, X3
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 832(BX)
	PSRLQ $41, X3
	MOVO 496(AX), X2
	MOVO X2, X5
	PSLLQ $23, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 848(BX)
	MOVO X5, X7
	PSRLQ $14, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 864(BX)
	PSRLQ $51, X7
	MOVO 512(AX), X4
	MOVO X4, X6
	PSLLQ $13, X4
	PAND X1, X4
	POR X4, X7
	PADDQ X7, X0
	MOVO X0, 880(BX)
	MOVO X6, X8
	PSRLQ $24, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 896(BX)
	PSRLQ $61, X8
	MOVO 528(AX), X11
	MOVO X11, X9
	PSLLQ $3, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 912(BX)
	PSRLQ $34, X9
	MOVO 544(AX), X13
	MOVO X13, X10
	PSLLQ $30, X13
	PAND X1, X13
	POR X13, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	MOVO X10, X15
	PSRLQ $7, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 944(BX)
	PSRLQ $44, X15
	MOVO 560(AX), X12
	MOVO X12, X14
	PSLLQ $20, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 960(BX)
	MOVO X14, X2
	PSRLQ $17, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 976(BX)
	PSRLQ $54, X2
	MOVO 576(AX), X3
	MOVO X3, X5
	PSLLQ $10, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $27, X5
	PADDQ X5, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_38(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_38(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $274877906943, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $38, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $26, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $50, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $14, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	MOVO X9, X10
	PSRLQ $24, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $62, X10
	MOVO 48(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $36, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $28, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	MOVO X14, X15
	PSRLQ $10, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	MOVO X3, X5
	PSRLQ $22, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 144(BX)
	PSRLQ $60, X5
	MOVO 96(AX), X4
	MOVO X4, X6
	PSLLQ $4, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	PSRLQ $34, X6
	MOVO 112(AX), X8
	MOVO X8, X7
	PSLLQ $30, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	MOVO X7, X9
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 192(BX)
	PSRLQ $46, X9
	MOVO 128(AX), X11
	MOVO X11, X10
	PSLLQ $18, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	MOVO X10, X13
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 224(BX)
	PSRLQ $58, X13
	MOVO 144(AX), X12
	MOVO X12, X14
	PSLLQ $6, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X14
	MOVO 160(AX), X2
	MOVO X2, X15
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	MOVO X15, X3
	PSRLQ $6, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 272(BX)
	PSRLQ $44, X3
	MOVO 176(AX), X4
	MOVO X4, X5
	PSLLQ $20, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	MOVO X5, X8
	PSRLQ $18, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 304(BX)
	PSRLQ $56, X8
	MOVO 192(AX), X6
	MOVO X6, X7
	PSLLQ $8, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 320(BX)
	PSRLQ $30, X7
	MOVO 208(AX), X11
	MOVO X11, X9
	PSLLQ $34, X11
	PAND X1, X11
	POR X11, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	MOVO X9, X10
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	PSRLQ $42, X10
	MOVO 224(AX), X12
	MOVO X12, X13
	PSLLQ $22, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 368(BX)
	MOVO X13, X2
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	PSRLQ $54, X2
	MOVO 240(AX), X14
	MOVO X14, X15
	PSLLQ $10, X14
	PAND X1, X14
	POR X14, X2
	PADDQ X2, X0
	MOVO X0, 400(BX)
	PSRLQ $28, X15
	MOVO 256(AX), X4
	MOVO X4, X3
	PSLLQ $36, X4
	PAND X1, X4
	POR X4, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	MOVO X3, X5
	PSRLQ $2, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 432(BX)
	PSRLQ $40, X5
	MOVO 272(AX), X6
	MOVO X6, X8
	PSLLQ $24, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 448(BX)
	MOVO X8, X11
	PSRLQ $14, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 464(BX)
	PSRLQ $52, X11
	MOVO 288(AX), X7
	MOVO X7, X9
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X11
	PADDQ X11, X0
	MOVO X0, 480(BX)
	PSRLQ $26, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	MOVO 304(AX), X12
	MOVO X12, X10
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 512(BX)
	PSRLQ $38, X10
	MOVO 320(AX), X13
	MOVO X13, X14
	PSLLQ $26, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	MOVO X14, X2
	PSRLQ $12, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	PSRLQ $50, X2
	MOVO 336(AX), X4
	MOVO X4, X15
	PSLLQ $14, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	MOVO X15, X3
	PSRLQ $24, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 576(BX)
	PSRLQ $62, X3
	MOVO 352(AX), X6
	MOVO X6, X5
	PSLLQ $2, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 592(BX)
	PSRLQ $36, X5
	MOVO 368(AX), X8
	MOVO X8, X7
	PSLLQ $28, X8
	PAND X1, X8
	POR X8, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	MOVO X7, X11
	PSRLQ $10, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X11
	MOVO 384(AX), X9
	MOVO X9, X12
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	MOVO X12, X13
	PSRLQ $22, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 656(BX)
	PSRLQ $60, X13
	MOVO 400(AX), X10
	MOVO X10, X14
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	PSRLQ $34, X14
	MOVO 416(AX), X4
	MOVO X4, X2
	PSLLQ $30, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	MOVO X2, X15
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $46, X15
	MOVO 432(AX), X6
	MOVO X6, X3
	PSLLQ $18, X6
	PAND X1, X6
	POR X6, X15
	PADDQ X15, X0
	MOVO X0, 720(BX)
	MOVO X3, X8
	PSRLQ $20, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 736(BX)
	PSRLQ $58, X8
	MOVO 448(AX), X5
	MOVO X5, X7
	PSLLQ $6, X5
	PAND X1, X5
	POR X5, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X7
	MOVO 464(AX), X9
	MOVO X9, X11
	PSLLQ $32, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	MOVO X11, X12
	PSRLQ $6, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 784(BX)
	PSRLQ $44, X12
	MOVO 480(AX), X10
	MOVO X10, X13
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 800(BX)
	MOVO X13, X4
	PSRLQ $18, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 816(BX)
	PSRLQ $56, X4
	MOVO 496(AX), X14
	MOVO X14, X2
	PSLLQ $8, X14
	PAND X1, X14
	POR X14, X4
	PADDQ X4, X0
	MOVO X0, 832(BX)
	PSRLQ $30, X2
	MOVO 512(AX), X6
	MOVO X6, X15
	PSLLQ $34, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 848(BX)
	MOVO X15, X3
	PSRLQ $4, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $42, X3
	MOVO 528(AX), X5
	MOVO X5, X8
	PSLLQ $22, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 880(BX)
	MOVO X8, X9
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 896(BX)
	PSRLQ $54, X9
	MOVO 544(AX), X7
	MOVO X7, X11
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 912(BX)
	PSRLQ $28, X11
	MOVO 560(AX), X10
	MOVO X10, X12
	PSLLQ $36, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 928(BX)
	MOVO X12, X13
	PSRLQ $2, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 944(BX)
	PSRLQ $40, X13
	MOVO 576(AX), X14
	MOVO X14, X4
	PSLLQ $24, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 960(BX)
	MOVO X4, X6
	PSRLQ $14, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 976(BX)
	PSRLQ $52, X6
	MOVO 592(AX), X2
	MOVO X2, X15
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X6
	PADDQ X6, X0
	MOVO X0, 992(BX)
	PSRLQ $26, X15
	PADDQ X15, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_39(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_39(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $549755813887, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $39, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $25, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $14, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $53, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $11, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $28, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $36, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	MOVO X11, X12
	PSRLQ $3, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $42, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $22, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	MOVO X14, X15
	PSRLQ $17, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X15
	MOVO 80(AX), X2
	MOVO X2, X3
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	PSRLQ $31, X3
	MOVO 96(AX), X5
	MOVO X5, X4
	PSLLQ $33, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 144(BX)
	MOVO X4, X6
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 160(BX)
	PSRLQ $45, X6
	MOVO 112(AX), X8
	MOVO X8, X7
	PSLLQ $19, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	MOVO X7, X10
	PSRLQ $20, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 192(BX)
	PSRLQ $59, X10
	MOVO 128(AX), X9
	MOVO X9, X11
	PSLLQ $5, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 208(BX)
	PSRLQ $34, X11
	MOVO 144(AX), X13
	MOVO X13, X12
	PSLLQ $30, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	MOVO X12, X14
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X14
	MOVO 160(AX), X2
	MOVO X2, X15
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	MOVO X15, X5
	PSRLQ $23, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 272(BX)
	PSRLQ $62, X5
	MOVO 176(AX), X3
	MOVO X3, X4
	PSLLQ $2, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 288(BX)
	PSRLQ $37, X4
	MOVO 192(AX), X8
	MOVO X8, X6
	PSLLQ $27, X8
	PAND X1, X8
	POR X8, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	MOVO X6, X7
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	PSRLQ $51, X7
	MOVO 208(AX), X9
	MOVO X9, X10
	PSLLQ $13, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	PSRLQ $26, X10
	MOVO 224(AX), X13
	MOVO X13, X11
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 352(BX)
	MOVO X11, X12
	PSRLQ $1, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X12
	MOVO 240(AX), X2
	MOVO X2, X14
	PSLLQ $24, X2
	PAND X1, X2
	POR X2, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	MOVO X14, X15
	PSRLQ $15, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $54, X15
	MOVO 256(AX), X3
	MOVO X3, X5
	PSLLQ $10, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $29, X5
	MOVO 272(AX), X8
	MOVO X8, X4
	PSLLQ $35, X8
	PAND X1, X8
	POR X8, X5
	PADDQ X5, X0
	MOVO X0, 432(BX)
	MOVO X4, X6
	PSRLQ $4, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $43, X6
	MOVO 288(AX), X9
	MOVO X9, X7
	PSLLQ $21, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 464(BX)
	MOVO X7, X13
	PSRLQ $18, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $57, X13
	MOVO 304(AX), X10
	MOVO X10, X11
	PSLLQ $7, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X11
	MOVO 320(AX), X2
	MOVO X2, X12
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	MOVO X12, X14
	PSRLQ $7, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $46, X14
	MOVO 336(AX), X3
	MOVO X3, X15
	PSLLQ $18, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	MOVO X15, X8
	PSRLQ $21, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 560(BX)
	PSRLQ $60, X8
	MOVO 352(AX), X5
	MOVO X5, X4
	PSLLQ $4, X5
	PAND X1, X5
	POR X5, X8
	PADDQ X8, X0
	MOVO X0, 576(BX)
	PSRLQ $35, X4
	MOVO 368(AX), X9
	MOVO X9, X6
	PSLLQ $29, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	MOVO X6, X7
	PSRLQ $10, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 608(BX)
	PSRLQ $49, X7
	MOVO 384(AX), X10
	MOVO X10, X13
	PSLLQ $15, X10
	PAND X1, X10
	POR X10, X7
	PADDQ X7, X0
	MOVO X0, 624(BX)
	MOVO X13, X2
	PSRLQ $24, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 640(BX)
	PSRLQ $63, X2
	MOVO 400(AX), X11
	MOVO X11, X12
	PSLLQ $1, X11
	PAND X1, X11
	POR X11, X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	PSRLQ $38, X12
	MOVO 416(AX), X3
	MOVO X3, X14
	PSLLQ $26, X3
	PAND X1, X3
	POR X3, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	MOVO X14, X15
	PSRLQ $13, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	PSRLQ $52, X15
	MOVO 432(AX), X5
	MOVO X5, X8
	PSLLQ $12, X5
	PAND X1, X5
	POR X5, X15
	PADDQ X15, X0
	MOVO X0, 704(BX)
	PSRLQ $27, X8
	MOVO 448(AX), X9
	MOVO X9, X4
	PSLLQ $37, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 720(BX)
	MOVO X4, X6
	PSRLQ $2, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 736(BX)
	PSRLQ $41, X6
	MOVO 464(AX), X10
	MOVO X10, X7
	PSLLQ $23, X10
	PAND X1, X10
	POR X10, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	MOVO X7, X13
	PSRLQ $16, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $55, X13
	MOVO 480(AX), X11
	MOVO X11, X2
	PSLLQ $9, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 784(BX)
	PSRLQ $30, X2
	MOVO 496(AX), X3
	MOVO X3, X12
	PSLLQ $34, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	MOVO X12, X14
	PSRLQ $5, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	PSRLQ $44, X14
	MOVO 512(AX), X5
	MOVO X5, X15
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X14
	PADDQ X14, X0
	MOVO X0, 832(BX)
	MOVO X15, X9
	PSRLQ $19, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 848(BX)
	PSRLQ $58, X9
	MOVO 528(AX), X8
	MOVO X8, X4
	PSLLQ $6, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 864(BX)
	PSRLQ $33, X4
	MOVO 544(AX), X10
	MOVO X10, X6
	PSLLQ $31, X10
	PAND X1, X10
	POR X10, X4
	PADDQ X4, X0
	MOVO X0, 880(BX)
	MOVO X6, X7
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 896(BX)
	PSRLQ $47, X7
	MOVO 560(AX), X11
	MOVO X11, X13
	PSLLQ $17, X11
	PAND X1, X11
	POR X11, X7
	PADDQ X7, X0
	MOVO X0, 912(BX)
	MOVO X13, X3
	PSRLQ $22, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	PSRLQ $61, X3
	MOVO 576(AX), X2
	MOVO X2, X12
	PSLLQ $3, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 944(BX)
	PSRLQ $36, X12
	MOVO 592(AX), X5
	MOVO X5, X14
	PSLLQ $28, X5
	PAND X1, X5
	POR X5, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	MOVO X14, X15
	PSRLQ $11, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 976(BX)
	PSRLQ $50, X15
	MOVO 608(AX), X8
	MOVO X8, X9
	PSLLQ $14, X8
	PAND X1, X8
	POR X8, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $25, X9
	PADDQ X9, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_40(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_40(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1099511627775, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $40, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $56, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $32, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	MOVO X11, X12
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $48, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $24, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	MOVO 80(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	PSRLQ $40, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	MOVO X5, X4
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	PSRLQ $56, X4
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLQ $8, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 176(BX)
	PSRLQ $32, X8
	MOVO 128(AX), X7
	MOVO X7, X10
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 192(BX)
	MOVO X10, X9
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 208(BX)
	PSRLQ $48, X9
	MOVO 144(AX), X11
	MOVO X11, X13
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 224(BX)
	PSRLQ $24, X13
	PADDQ X13, X0
	MOVO X0, 240(BX)
	MOVO 160(AX), X12
	MOVO X12, X14
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 256(BX)
	PSRLQ $40, X14
	MOVO 176(AX), X15
	MOVO X15, X3
	PSLLQ $24, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 272(BX)
	MOVO X3, X2
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	PSRLQ $56, X2
	MOVO 192(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 304(BX)
	PSRLQ $32, X6
	MOVO 208(AX), X4
	MOVO X4, X7
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	MOVO X7, X8
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	PSRLQ $48, X8
	MOVO 224(AX), X10
	MOVO X10, X11
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 352(BX)
	PSRLQ $24, X11
	PADDQ X11, X0
	MOVO X0, 368(BX)
	MOVO 240(AX), X9
	MOVO X9, X13
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 384(BX)
	PSRLQ $40, X13
	MOVO 256(AX), X12
	MOVO X12, X15
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 400(BX)
	MOVO X15, X14
	PSRLQ $16, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $56, X14
	MOVO 272(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 432(BX)
	PSRLQ $32, X5
	MOVO 288(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X5
	PADDQ X5, X0
	MOVO X0, 448(BX)
	MOVO X4, X6
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $48, X6
	MOVO 304(AX), X7
	MOVO X7, X10
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $24, X10
	PADDQ X10, X0
	MOVO X0, 496(BX)
	MOVO 320(AX), X8
	MOVO X8, X11
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 512(BX)
	PSRLQ $40, X11
	MOVO 336(AX), X9
	MOVO X9, X12
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X11
	PADDQ X11, X0
	MOVO X0, 528(BX)
	MOVO X12, X13
	PSRLQ $16, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $56, X13
	MOVO 352(AX), X15
	MOVO X15, X3
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 560(BX)
	PSRLQ $32, X3
	MOVO 368(AX), X14
	MOVO X14, X2
	PSLLQ $32, X14
	PAND X1, X14
	POR X14, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	MOVO X2, X5
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	PSRLQ $48, X5
	MOVO 384(AX), X4
	MOVO X4, X7
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	PSRLQ $24, X7
	PADDQ X7, X0
	MOVO X0, 624(BX)
	MOVO 400(AX), X6
	MOVO X6, X10
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 640(BX)
	PSRLQ $40, X10
	MOVO 416(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X10
	PADDQ X10, X0
	MOVO X0, 656(BX)
	MOVO X9, X11
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 672(BX)
	PSRLQ $56, X11
	MOVO 432(AX), X12
	MOVO X12, X15
	PSLLQ $8, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 688(BX)
	PSRLQ $32, X15
	MOVO 448(AX), X13
	MOVO X13, X14
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 704(BX)
	MOVO X14, X3
	PSRLQ $8, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 720(BX)
	PSRLQ $48, X3
	MOVO 464(AX), X2
	MOVO X2, X4
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 736(BX)
	PSRLQ $24, X4
	PADDQ X4, X0
	MOVO X0, 752(BX)
	MOVO 480(AX), X5
	MOVO X5, X7
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 768(BX)
	PSRLQ $40, X7
	MOVO 496(AX), X6
	MOVO X6, X8
	PSLLQ $24, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 784(BX)
	MOVO X8, X10
	PSRLQ $16, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 800(BX)
	PSRLQ $56, X10
	MOVO 512(AX), X9
	MOVO X9, X12
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 816(BX)
	PSRLQ $32, X12
	MOVO 528(AX), X11
	MOVO X11, X13
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 832(BX)
	MOVO X13, X15
	PSRLQ $8, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 848(BX)
	PSRLQ $48, X15
	MOVO 544(AX), X14
	MOVO X14, X2
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $24, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 560(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $40, X4
	MOVO 576(AX), X5
	MOVO X5, X6
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	MOVO X6, X7
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $56, X7
	MOVO 592(AX), X8
	MOVO X8, X9
	PSLLQ $8, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $32, X9
	MOVO 608(AX), X10
	MOVO X10, X11
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	MOVO X11, X12
	PSRLQ $8, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	PSRLQ $48, X12
	MOVO 624(AX), X13
	MOVO X13, X14
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $24, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_41(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_41(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2199023255551, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $41, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $23, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $18, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $59, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $5, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $36, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $28, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	MOVO X11, X12
	PSRLQ $13, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $54, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $31, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $33, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	MOVO X2, X3
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	PSRLQ $49, X3
	MOVO 96(AX), X5
	MOVO X5, X4
	PSLLQ $15, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 144(BX)
	PSRLQ $26, X4
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLQ $38, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 160(BX)
	MOVO X8, X7
	PSRLQ $3, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $44, X7
	MOVO 128(AX), X10
	MOVO X10, X9
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X7
	PADDQ X7, X0
	MOVO X0, 192(BX)
	MOVO X9, X11
	PSRLQ $21, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $62, X11
	MOVO 144(AX), X13
	MOVO X13, X12
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $39, X12
	MOVO 160(AX), X15
	MOVO X15, X14
	PSLLQ $25, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	MOVO X14, X2
	PSRLQ $16, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	PSRLQ $57, X2
	MOVO 176(AX), X5
	MOVO X5, X3
	PSLLQ $7, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 272(BX)
	PSRLQ $34, X3
	MOVO 192(AX), X6
	MOVO X6, X4
	PSLLQ $30, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	MOVO X4, X8
	PSRLQ $11, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	PSRLQ $52, X8
	MOVO 208(AX), X10
	MOVO X10, X7
	PSLLQ $12, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 320(BX)
	PSRLQ $29, X7
	MOVO 224(AX), X9
	MOVO X9, X13
	PSLLQ $35, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	MOVO X13, X11
	PSRLQ $6, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 352(BX)
	PSRLQ $47, X11
	MOVO 240(AX), X15
	MOVO X15, X12
	PSLLQ $17, X15
	PAND X1, X15
	POR X15, X11
	PADDQ X11, X0
	MOVO X0, 368(BX)
	PSRLQ $24, X12
	MOVO 256(AX), X14
	MOVO X14, X5
	PSLLQ $40, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	MOVO X5, X2
	PSRLQ $1, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 400(BX)
	PSRLQ $42, X2
	MOVO 272(AX), X6
	MOVO X6, X3
	PSLLQ $22, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 416(BX)
	MOVO X3, X4
	PSRLQ $19, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 432(BX)
	PSRLQ $60, X4
	MOVO 288(AX), X10
	MOVO X10, X8
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $37, X8
	MOVO 304(AX), X9
	MOVO X9, X7
	PSLLQ $27, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 464(BX)
	MOVO X7, X13
	PSRLQ $14, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $55, X13
	MOVO 320(AX), X15
	MOVO X15, X11
	PSLLQ $9, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X11
	MOVO 336(AX), X14
	MOVO X14, X12
	PSLLQ $32, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	MOVO X12, X5
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $50, X5
	MOVO 352(AX), X6
	MOVO X6, X2
	PSLLQ $14, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 544(BX)
	PSRLQ $27, X2
	MOVO 368(AX), X3
	MOVO X3, X10
	PSLLQ $37, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	MOVO X10, X4
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	PSRLQ $45, X4
	MOVO 384(AX), X9
	MOVO X9, X8
	PSLLQ $19, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	MOVO X8, X7
	PSRLQ $22, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 608(BX)
	PSRLQ $63, X7
	MOVO 400(AX), X15
	MOVO X15, X13
	PSLLQ $1, X15
	PAND X1, X15
	POR X15, X7
	PADDQ X7, X0
	MOVO X0, 624(BX)
	PSRLQ $40, X13
	MOVO 416(AX), X14
	MOVO X14, X11
	PSLLQ $24, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 640(BX)
	MOVO X11, X12
	PSRLQ $17, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 656(BX)
	PSRLQ $58, X12
	MOVO 432(AX), X6
	MOVO X6, X5
	PSLLQ $6, X6
	PAND X1, X6
	POR X6, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	PSRLQ $35, X5
	MOVO 448(AX), X3
	MOVO X3, X2
	PSLLQ $29, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 688(BX)
	MOVO X2, X10
	PSRLQ $12, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $53, X10
	MOVO 464(AX), X9
	MOVO X9, X4
	PSLLQ $11, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 720(BX)
	PSRLQ $30, X4
	MOVO 480(AX), X8
	MOVO X8, X15
	PSLLQ $34, X8
	PAND X1, X8
	POR X8, X4
	PADDQ X4, X0
	MOVO X0, 736(BX)
	MOVO X15, X7
	PSRLQ $7, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X7
	MOVO 496(AX), X14
	MOVO X14, X13
	PSLLQ $16, X14
	PAND X1, X14
	POR X14, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $25, X13
	MOVO 512(AX), X11
	MOVO X11, X6
	PSLLQ $39, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 784(BX)
	MOVO X6, X12
	PSRLQ $2, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 800(BX)
	PSRLQ $43, X12
	MOVO 528(AX), X3
	MOVO X3, X5
	PSLLQ $21, X3
	PAND X1, X3
	POR X3, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO X5, X2
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 832(BX)
	PSRLQ $61, X2
	MOVO 544(AX), X9
	MOVO X9, X10
	PSLLQ $3, X9
	PAND X1, X9
	POR X9, X2
	PADDQ X2, X0
	MOVO X0, 848(BX)
	PSRLQ $38, X10
	MOVO 560(AX), X8
	MOVO X8, X4
	PSLLQ $26, X8
	PAND X1, X8
	POR X8, X10
	PADDQ X10, X0
	MOVO X0, 864(BX)
	MOVO X4, X15
	PSRLQ $15, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X15
	MOVO 576(AX), X14
	MOVO X14, X7
	PSLLQ $8, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 896(BX)
	PSRLQ $33, X7
	MOVO 592(AX), X11
	MOVO X11, X13
	PSLLQ $31, X11
	PAND X1, X11
	POR X11, X7
	PADDQ X7, X0
	MOVO X0, 912(BX)
	MOVO X13, X6
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	PSRLQ $51, X6
	MOVO 608(AX), X3
	MOVO X3, X12
	PSLLQ $13, X3
	PAND X1, X3
	POR X3, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	PSRLQ $28, X12
	MOVO 624(AX), X5
	MOVO X5, X9
	PSLLQ $36, X5
	PAND X1, X5
	POR X5, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	MOVO X9, X2
	PSRLQ $5, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 976(BX)
	PSRLQ $46, X2
	MOVO 640(AX), X8
	MOVO X8, X10
	PSLLQ $18, X8
	PAND X1, X8
	POR X8, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $23, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_42(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_42(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4398046511103, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $42, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $22, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO X6, X7
	PSRLQ $20, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $62, X7
	MOVO 32(AX), X8
	MOVO X8, X9
	PSLLQ $2, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 48(BX)
	PSRLQ $40, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $24, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	MOVO X11, X12
	PSRLQ $18, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $60, X12
	MOVO 64(AX), X13
	MOVO X13, X14
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $38, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $26, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	MOVO X2, X3
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	PSRLQ $58, X3
	MOVO 96(AX), X5
	MOVO X5, X4
	PSLLQ $6, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 144(BX)
	PSRLQ $36, X4
	MOVO 112(AX), X6
	MOVO X6, X8
	PSLLQ $28, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 160(BX)
	MOVO X8, X7
	PSRLQ $14, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $56, X7
	MOVO 128(AX), X10
	MOVO X10, X9
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X7
	PADDQ X7, X0
	MOVO X0, 192(BX)
	PSRLQ $34, X9
	MOVO 144(AX), X11
	MOVO X11, X13
	PSLLQ $30, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	MOVO X13, X12
	PSRLQ $12, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 224(BX)
	PSRLQ $54, X12
	MOVO 160(AX), X15
	MOVO X15, X14
	PSLLQ $10, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X14
	MOVO 176(AX), X2
	MOVO X2, X5
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	MOVO X5, X3
	PSRLQ $10, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 272(BX)
	PSRLQ $52, X3
	MOVO 192(AX), X6
	MOVO X6, X4
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	PSRLQ $30, X4
	MOVO 208(AX), X8
	MOVO X8, X10
	PSLLQ $34, X8
	PAND X1, X8
	POR X8, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	MOVO X10, X7
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	PSRLQ $50, X7
	MOVO 224(AX), X11
	MOVO X11, X9
	PSLLQ $14, X11
	PAND X1, X11
	POR X11, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	PSRLQ $28, X9
	MOVO 240(AX), X13
	MOVO X13, X15
	PSLLQ $36, X13
	PAND X1, X13
	POR X13, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	MOVO X15, X12
	PSRLQ $6, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	PSRLQ $48, X12
	MOVO 256(AX), X2
	MOVO X2, X14
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X12
	PADDQ X12, X0
	MOVO X0, 384(BX)
	PSRLQ $26, X14
	MOVO 272(AX), X5
	MOVO X5, X6
	PSLLQ $38, X5
	PAND X1, X5
	POR X5, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	MOVO X6, X3
	PSRLQ $4, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 416(BX)
	PSRLQ $46, X3
	MOVO 288(AX), X8
	MOVO X8, X4
	PSLLQ $18, X8
	PAND X1, X8
	POR X8, X3
	PADDQ X3, X0
	MOVO X0, 432(BX)
	PSRLQ $24, X4
	MOVO 304(AX), X10
	MOVO X10, X11
	PSLLQ $40, X10
	PAND X1, X10
	POR X10, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	MOVO X11, X7
	PSRLQ $2, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 464(BX)
	PSRLQ $44, X7
	MOVO 320(AX), X13
	MOVO X13, X9
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $22, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	MOVO 336(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $42, X2
	MOVO 352(AX), X12
	MOVO X12, X5
	PSLLQ $22, X12
	PAND X1, X12
	POR X12, X2
	PADDQ X2, X0
	MOVO X0, 528(BX)
	MOVO X5, X14
	PSRLQ $20, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 544(BX)
	PSRLQ $62, X14
	MOVO 368(AX), X6
	MOVO X6, X8
	PSLLQ $2, X6
	PAND X1, X6
	POR X6, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	PSRLQ $40, X8
	MOVO 384(AX), X3
	MOVO X3, X10
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X8
	PADDQ X8, X0
	MOVO X0, 576(BX)
	MOVO X10, X4
	PSRLQ $18, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 592(BX)
	PSRLQ $60, X4
	MOVO 400(AX), X11
	MOVO X11, X13
	PSLLQ $4, X11
	PAND X1, X11
	POR X11, X4
	PADDQ X4, X0
	MOVO X0, 608(BX)
	PSRLQ $38, X13
	MOVO 416(AX), X7
	MOVO X7, X9
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X13
	PADDQ X13, X0
	MOVO X0, 624(BX)
	MOVO X9, X15
	PSRLQ $16, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	PSRLQ $58, X15
	MOVO 432(AX), X12
	MOVO X12, X2
	PSLLQ $6, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 656(BX)
	PSRLQ $36, X2
	MOVO 448(AX), X5
	MOVO X5, X6
	PSLLQ $28, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 672(BX)
	MOVO X6, X14
	PSRLQ $14, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 688(BX)
	PSRLQ $56, X14
	MOVO 464(AX), X3
	MOVO X3, X8
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 704(BX)
	PSRLQ $34, X8
	MOVO 480(AX), X10
	MOVO X10, X11
	PSLLQ $30, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 720(BX)
	MOVO X11, X4
	PSRLQ $12, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 736(BX)
	PSRLQ $54, X4
	MOVO 496(AX), X7
	MOVO X7, X13
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X13
	MOVO 512(AX), X9
	MOVO X9, X12
	PSLLQ $32, X9
	PAND X1, X9
	POR X9, X13
	PADDQ X13, X0
	MOVO X0, 768(BX)
	MOVO X12, X15
	PSRLQ $10, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 784(BX)
	PSRLQ $52, X15
	MOVO 528(AX), X5
	MOVO X5, X2
	PSLLQ $12, X5
	PAND X1, X5
	POR X5, X15
	PADDQ X15, X0
	MOVO X0, 800(BX)
	PSRLQ $30, X2
	MOVO 544(AX), X6
	MOVO X6, X3
	PSLLQ $34, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 816(BX)
	MOVO X3, X14
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 832(BX)
	PSRLQ $50, X14
	MOVO 560(AX), X10
	MOVO X10, X8
	PSLLQ $14, X10
	PAND X1, X10
	POR X10, X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	PSRLQ $28, X8
	MOVO 576(AX), X11
	MOVO X11, X7
	PSLLQ $36, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 864(BX)
	MOVO X7, X4
	PSRLQ $6, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 880(BX)
	PSRLQ $48, X4
	MOVO 592(AX), X9
	MOVO X9, X13
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 896(BX)
	PSRLQ $26, X13
	MOVO 608(AX), X12
	MOVO X12, X5
	PSLLQ $38, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	MOVO X5, X15
	PSRLQ $4, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $46, X15
	MOVO 624(AX), X6
	MOVO X6, X2
	PSLLQ $18, X6
	PAND X1, X6
	POR X6, X15
	PADDQ X15, X0
	MOVO X0, 944(BX)
	PSRLQ $24, X2
	MOVO 640(AX), X3
	MOVO X3, X10
	PSLLQ $40, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 960(BX)
	MOVO X10, X14
	PSRLQ $2, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 976(BX)
	PSRLQ $44, X14
	MOVO 656(AX), X11
	MOVO X11, X8
	PSLLQ $20, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $22, X8
	PADDQ X8, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_43(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_43(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $8796093022207, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $43, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $21, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $22, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $42, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLQ $1, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $44, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $23, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $41, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	MOVO X13, X14
	PSRLQ $2, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $45, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $19, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	PSRLQ $24, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $40, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	MOVO X5, X4
	PSRLQ $3, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	PSRLQ $46, X4
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLQ $18, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 160(BX)
	PSRLQ $25, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $39, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	MOVO X10, X9
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $47, X9
	MOVO 144(AX), X12
	MOVO X12, X11
	PSLLQ $17, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $26, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	MOVO X15, X14
	PSRLQ $5, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X14
	MOVO 176(AX), X3
	MOVO X3, X2
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	PSRLQ $27, X2
	MOVO 192(AX), X5
	MOVO X5, X7
	PSLLQ $37, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 272(BX)
	MOVO X7, X4
	PSRLQ $6, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $49, X4
	MOVO 208(AX), X8
	MOVO X8, X6
	PSLLQ $15, X8
	PAND X1, X8
	POR X8, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	PSRLQ $28, X6
	MOVO 224(AX), X10
	MOVO X10, X12
	PSLLQ $36, X10
	PAND X1, X10
	POR X10, X6
	PADDQ X6, X0
	MOVO X0, 320(BX)
	MOVO X12, X9
	PSRLQ $7, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	PSRLQ $50, X9
	MOVO 240(AX), X13
	MOVO X13, X11
	PSLLQ $14, X13
	PAND X1, X13
	POR X13, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	PSRLQ $29, X11
	MOVO 256(AX), X15
	MOVO X15, X3
	PSLLQ $35, X15
	PAND X1, X15
	POR X15, X11
	PADDQ X11, X0
	MOVO X0, 368(BX)
	MOVO X3, X14
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $51, X14
	MOVO 272(AX), X5
	MOVO X5, X2
	PSLLQ $13, X5
	PAND X1, X5
	POR X5, X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	PSRLQ $30, X2
	MOVO 288(AX), X7
	MOVO X7, X8
	PSLLQ $34, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 416(BX)
	MOVO X8, X4
	PSRLQ $9, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	PSRLQ $52, X4
	MOVO 304(AX), X10
	MOVO X10, X6
	PSLLQ $12, X10
	PAND X1, X10
	POR X10, X4
	PADDQ X4, X0
	MOVO X0, 448(BX)
	PSRLQ $31, X6
	MOVO 320(AX), X12
	MOVO X12, X13
	PSLLQ $33, X12
	PAND X1, X12
	POR X12, X6
	PADDQ X6, X0
	MOVO X0, 464(BX)
	MOVO X13, X9
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	PSRLQ $53, X9
	MOVO 336(AX), X15
	MOVO X15, X11
	PSLLQ $11, X15
	PAND X1, X15
	POR X15, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X11
	MOVO 352(AX), X3
	MOVO X3, X5
	PSLLQ $32, X3
	PAND X1, X3
	POR X3, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	MOVO X5, X14
	PSRLQ $11, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 528(BX)
	PSRLQ $54, X14
	MOVO 368(AX), X7
	MOVO X7, X2
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	PSRLQ $33, X2
	MOVO 384(AX), X8
	MOVO X8, X10
	PSLLQ $31, X8
	PAND X1, X8
	POR X8, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	MOVO X10, X4
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	PSRLQ $55, X4
	MOVO 400(AX), X12
	MOVO X12, X6
	PSLLQ $9, X12
	PAND X1, X12
	POR X12, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	PSRLQ $34, X6
	MOVO 416(AX), X13
	MOVO X13, X15
	PSLLQ $30, X13
	PAND X1, X13
	POR X13, X6
	PADDQ X6, X0
	MOVO X0, 608(BX)
	MOVO X15, X9
	PSRLQ $13, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X9
	MOVO 432(AX), X3
	MOVO X3, X11
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	PSRLQ $35, X11
	MOVO 448(AX), X5
	MOVO X5, X7
	PSLLQ $29, X5
	PAND X1, X5
	POR X5, X11
	PADDQ X11, X0
	MOVO X0, 656(BX)
	MOVO X7, X14
	PSRLQ $14, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 672(BX)
	PSRLQ $57, X14
	MOVO 464(AX), X8
	MOVO X8, X2
	PSLLQ $7, X8
	PAND X1, X8
	POR X8, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	PSRLQ $36, X2
	MOVO 480(AX), X10
	MOVO X10, X12
	PSLLQ $28, X10
	PAND X1, X10
	POR X10, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	MOVO X12, X4
	PSRLQ $15, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 720(BX)
	PSRLQ $58, X4
	MOVO 496(AX), X13
	MOVO X13, X6
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X4
	PADDQ X4, X0
	MOVO X0, 736(BX)
	PSRLQ $37, X6
	MOVO 512(AX), X15
	MOVO X15, X3
	PSLLQ $27, X15
	PAND X1, X15
	POR X15, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	MOVO X3, X9
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $59, X9
	MOVO 528(AX), X5
	MOVO X5, X11
	PSLLQ $5, X5
	PAND X1, X5
	POR X5, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $38, X11
	MOVO 544(AX), X7
	MOVO X7, X8
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	MOVO X8, X14
	PSRLQ $17, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 816(BX)
	PSRLQ $60, X14
	MOVO 560(AX), X10
	MOVO X10, X2
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X14
	PADDQ X14, X0
	MOVO X0, 832(BX)
	PSRLQ $39, X2
	MOVO 576(AX), X12
	MOVO X12, X13
	PSLLQ $25, X12
	PAND X1, X12
	POR X12, X2
	PADDQ X2, X0
	MOVO X0, 848(BX)
	MOVO X13, X4
	PSRLQ $18, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 864(BX)
	PSRLQ $61, X4
	MOVO 592(AX), X15
	MOVO X15, X6
	PSLLQ $3, X15
	PAND X1, X15
	POR X15, X4
	PADDQ X4, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X6
	MOVO 608(AX), X3
	MOVO X3, X5
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X6
	PADDQ X6, X0
	MOVO X0, 896(BX)
	MOVO X5, X9
	PSRLQ $19, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 912(BX)
	PSRLQ $62, X9
	MOVO 624(AX), X7
	MOVO X7, X11
	PSLLQ $2, X7
	PAND X1, X7
	POR X7, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	PSRLQ $41, X11
	MOVO 640(AX), X8
	MOVO X8, X10
	PSLLQ $23, X8
	PAND X1, X8
	POR X8, X11
	PADDQ X11, X0
	MOVO X0, 944(BX)
	MOVO X10, X14
	PSRLQ $20, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 960(BX)
	PSRLQ $63, X14
	MOVO 656(AX), X12
	MOVO X12, X2
	PSLLQ $1, X12
	PAND X1, X12
	POR X12, X14
	PADDQ X14, X0
	MOVO X0, 976(BX)
	PSRLQ $42, X2
	MOVO 672(AX), X13
	MOVO X13, X15
	PSLLQ $22, X13
	PAND X1, X13
	POR X13, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $21, X15
	PADDQ X15, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_44(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_44(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $17592186044415, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $44, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $24, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $40, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLQ $4, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $48, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $28, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	MOVO X13, X14
	PSRLQ $8, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $52, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $32, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	MOVO X5, X4
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	PSRLQ $56, X4
	MOVO 112(AX), X7
	MOVO X7, X6
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 160(BX)
	PSRLQ $36, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $28, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	MOVO X10, X9
	PSRLQ $16, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $60, X9
	MOVO 144(AX), X12
	MOVO X12, X11
	PSLLQ $4, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 208(BX)
	PSRLQ $40, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLQ $24, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $20, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	MOVO 176(AX), X14
	MOVO X14, X3
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 256(BX)
	PSRLQ $44, X3
	MOVO 192(AX), X2
	MOVO X2, X5
	PSLLQ $20, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 272(BX)
	PSRLQ $24, X5
	MOVO 208(AX), X7
	MOVO X7, X4
	PSLLQ $40, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 288(BX)
	MOVO X4, X8
	PSRLQ $4, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	PSRLQ $48, X8
	MOVO 224(AX), X6
	MOVO X6, X10
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 320(BX)
	PSRLQ $28, X10
	MOVO 240(AX), X12
	MOVO X12, X9
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	MOVO X9, X13
	PSRLQ $8, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	PSRLQ $52, X13
	MOVO 256(AX), X11
	MOVO X11, X15
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X15
	MOVO 272(AX), X14
	MOVO X14, X2
	PSLLQ $32, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 384(BX)
	MOVO X2, X3
	PSRLQ $12, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 400(BX)
	PSRLQ $56, X3
	MOVO 288(AX), X7
	MOVO X7, X5
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 416(BX)
	PSRLQ $36, X5
	MOVO 304(AX), X4
	MOVO X4, X6
	PSLLQ $28, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 432(BX)
	MOVO X6, X8
	PSRLQ $16, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 448(BX)
	PSRLQ $60, X8
	MOVO 320(AX), X12
	MOVO X12, X10
	PSLLQ $4, X12
	PAND X1, X12
	POR X12, X8
	PADDQ X8, X0
	MOVO X0, 464(BX)
	PSRLQ $40, X10
	MOVO 336(AX), X9
	MOVO X9, X11
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 480(BX)
	PSRLQ $20, X11
	PADDQ X11, X0
	MOVO X0, 496(BX)
	MOVO 352(AX), X13
	MOVO X13, X14
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 512(BX)
	PSRLQ $44, X14
	MOVO 368(AX), X15
	MOVO X15, X2
	PSLLQ $20, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 528(BX)
	PSRLQ $24, X2
	MOVO 384(AX), X7
	MOVO X7, X3
	PSLLQ $40, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 544(BX)
	MOVO X3, X4
	PSRLQ $4, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 560(BX)
	PSRLQ $48, X4
	MOVO 400(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 576(BX)
	PSRLQ $28, X6
	MOVO 416(AX), X12
	MOVO X12, X8
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X6
	PADDQ X6, X0
	MOVO X0, 592(BX)
	MOVO X8, X9
	PSRLQ $8, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 608(BX)
	PSRLQ $52, X9
	MOVO 432(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X11
	MOVO 448(AX), X13
	MOVO X13, X15
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	MOVO X15, X14
	PSRLQ $12, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 656(BX)
	PSRLQ $56, X14
	MOVO 464(AX), X7
	MOVO X7, X2
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X14
	PADDQ X14, X0
	MOVO X0, 672(BX)
	PSRLQ $36, X2
	MOVO 480(AX), X3
	MOVO X3, X5
	PSLLQ $28, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 688(BX)
	MOVO X5, X4
	PSRLQ $16, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	PSRLQ $60, X4
	MOVO 496(AX), X12
	MOVO X12, X6
	PSLLQ $4, X12
	PAND X1, X12
	POR X12, X4
	PADDQ X4, X0
	MOVO X0, 720(BX)
	PSRLQ $40, X6
	MOVO 512(AX), X8
	MOVO X8, X10
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 736(BX)
	PSRLQ $20, X10
	PADDQ X10, X0
	MOVO X0, 752(BX)
	MOVO 528(AX), X9
	MOVO X9, X13
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $44, X13
	MOVO 544(AX), X11
	MOVO X11, X15
	PSLLQ $20, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 784(BX)
	PSRLQ $24, X15
	MOVO 560(AX), X7
	MOVO X7, X14
	PSLLQ $40, X7
	PAND X1, X7
	POR X7, X15
	PADDQ X15, X0
	MOVO X0, 800(BX)
	MOVO X14, X3
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 816(BX)
	PSRLQ $48, X3
	MOVO 576(AX), X2
	MOVO X2, X5
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 832(BX)
	PSRLQ $28, X5
	MOVO 592(AX), X12
	MOVO X12, X4
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X5
	PADDQ X5, X0
	MOVO X0, 848(BX)
	MOVO X4, X8
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 864(BX)
	PSRLQ $52, X8
	MOVO 608(AX), X6
	MOVO X6, X10
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X10
	MOVO 624(AX), X9
	MOVO X9, X11
	PSLLQ $32, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 896(BX)
	MOVO X11, X13
	PSRLQ $12, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 912(BX)
	PSRLQ $56, X13
	MOVO 640(AX), X7
	MOVO X7, X15
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	PSRLQ $36, X15
	MOVO 656(AX), X14
	MOVO X14, X2
	PSLLQ $28, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 944(BX)
	MOVO X2, X3
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 960(BX)
	PSRLQ $60, X3
	MOVO 672(AX), X12
	MOVO X12, X5
	PSLLQ $4, X12
	PAND X1, X12
	POR X12, X3
	PADDQ X3, X0
	MOVO X0, 976(BX)
	PSRLQ $40, X5
	MOVO 688(AX), X4
	MOVO X4, X6
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 992(BX)
	PSRLQ $20, X6
	PADDQ X6, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_45(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_45(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $35184372088831, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $45, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $19, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $26, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $38, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLQ $7, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $52, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $12, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $33, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $31, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	MOVO X13, X14
	PSRLQ $14, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $59, X14
	MOVO 80(AX), X15
	MOVO X15, X2
	PSLLQ $5, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	PSRLQ $21, X5
	MOVO 112(AX), X4
	MOVO X4, X7
	PSLLQ $43, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	MOVO X7, X6
	PSRLQ $2, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	PSRLQ $47, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $17, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $28, X10
	MOVO 144(AX), X9
	MOVO X9, X12
	PSLLQ $36, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	MOVO X12, X11
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $54, X11
	MOVO 160(AX), X13
	MOVO X13, X15
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $35, X15
	MOVO 176(AX), X14
	MOVO X14, X3
	PSLLQ $29, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	MOVO X3, X2
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	PSRLQ $61, X2
	MOVO 192(AX), X4
	MOVO X4, X5
	PSLLQ $3, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 272(BX)
	PSRLQ $42, X5
	MOVO 208(AX), X7
	MOVO X7, X8
	PSLLQ $22, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 288(BX)
	PSRLQ $23, X8
	MOVO 224(AX), X6
	MOVO X6, X9
	PSLLQ $41, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO X9, X10
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $49, X10
	MOVO 240(AX), X12
	MOVO X12, X13
	PSLLQ $15, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	PSRLQ $30, X13
	MOVO 256(AX), X11
	MOVO X11, X14
	PSLLQ $34, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 352(BX)
	MOVO X14, X15
	PSRLQ $11, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X15
	MOVO 272(AX), X3
	MOVO X3, X4
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 384(BX)
	PSRLQ $37, X4
	MOVO 288(AX), X2
	MOVO X2, X7
	PSLLQ $27, X2
	PAND X1, X2
	POR X2, X4
	PADDQ X4, X0
	MOVO X0, 400(BX)
	MOVO X7, X5
	PSRLQ $18, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 416(BX)
	PSRLQ $63, X5
	MOVO 304(AX), X6
	MOVO X6, X8
	PSLLQ $1, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 432(BX)
	PSRLQ $44, X8
	MOVO 320(AX), X9
	MOVO X9, X12
	PSLLQ $20, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 448(BX)
	PSRLQ $25, X12
	MOVO 336(AX), X10
	MOVO X10, X11
	PSLLQ $39, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	MOVO X11, X13
	PSRLQ $6, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 480(BX)
	PSRLQ $51, X13
	MOVO 352(AX), X14
	MOVO X14, X3
	PSLLQ $13, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X3
	MOVO 368(AX), X15
	MOVO X15, X2
	PSLLQ $32, X15
	PAND X1, X15
	POR X15, X3
	PADDQ X3, X0
	MOVO X0, 512(BX)
	MOVO X2, X4
	PSRLQ $13, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 528(BX)
	PSRLQ $58, X4
	MOVO 384(AX), X7
	MOVO X7, X6
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 544(BX)
	PSRLQ $39, X6
	MOVO 400(AX), X5
	MOVO X5, X9
	PSLLQ $25, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 560(BX)
	PSRLQ $20, X9
	MOVO 416(AX), X8
	MOVO X8, X10
	PSLLQ $44, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 576(BX)
	MOVO X10, X12
	PSRLQ $1, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 592(BX)
	PSRLQ $46, X12
	MOVO 432(AX), X11
	MOVO X11, X14
	PSLLQ $18, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 608(BX)
	PSRLQ $27, X14
	MOVO 448(AX), X13
	MOVO X13, X15
	PSLLQ $37, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO X15, X3
	PSRLQ $8, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	PSRLQ $53, X3
	MOVO 464(AX), X2
	MOVO X2, X7
	PSLLQ $11, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 656(BX)
	PSRLQ $34, X7
	MOVO 480(AX), X4
	MOVO X4, X5
	PSLLQ $30, X4
	PAND X1, X4
	POR X4, X7
	PADDQ X7, X0
	MOVO X0, 672(BX)
	MOVO X5, X6
	PSRLQ $15, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 688(BX)
	PSRLQ $60, X6
	MOVO 496(AX), X8
	MOVO X8, X9
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 704(BX)
	PSRLQ $41, X9
	MOVO 512(AX), X10
	MOVO X10, X11
	PSLLQ $23, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 720(BX)
	PSRLQ $22, X11
	MOVO 528(AX), X12
	MOVO X12, X13
	PSLLQ $42, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 736(BX)
	MOVO X13, X14
	PSRLQ $3, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X14
	MOVO 544(AX), X15
	MOVO X15, X2
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 768(BX)
	PSRLQ $29, X2
	MOVO 560(AX), X3
	MOVO X3, X4
	PSLLQ $35, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	MOVO X4, X7
	PSRLQ $10, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 800(BX)
	PSRLQ $55, X7
	MOVO 576(AX), X5
	MOVO X5, X8
	PSLLQ $9, X5
	PAND X1, X5
	POR X5, X7
	PADDQ X7, X0
	MOVO X0, 816(BX)
	PSRLQ $36, X8
	MOVO 592(AX), X6
	MOVO X6, X10
	PSLLQ $28, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 832(BX)
	MOVO X10, X9
	PSRLQ $17, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 848(BX)
	PSRLQ $62, X9
	MOVO 608(AX), X12
	MOVO X12, X11
	PSLLQ $2, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 864(BX)
	PSRLQ $43, X11
	MOVO 624(AX), X13
	MOVO X13, X15
	PSLLQ $21, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 880(BX)
	PSRLQ $24, X15
	MOVO 640(AX), X14
	MOVO X14, X3
	PSLLQ $40, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 896(BX)
	MOVO X3, X2
	PSRLQ $5, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 912(BX)
	PSRLQ $50, X2
	MOVO 656(AX), X4
	MOVO X4, X5
	PSLLQ $14, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 928(BX)
	PSRLQ $31, X5
	MOVO 672(AX), X7
	MOVO X7, X6
	PSLLQ $33, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 944(BX)
	MOVO X6, X8
	PSRLQ $12, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 960(BX)
	PSRLQ $57, X8
	MOVO 688(AX), X10
	MOVO X10, X12
	PSLLQ $7, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $38, X12
	MOVO 704(AX), X9
	MOVO X9, X13
	PSLLQ $26, X9
	PAND X1, X9
	POR X9, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $19, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_46(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_46(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $70368744177663, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $46, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $18, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $28, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $36, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLQ $10, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $56, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $38, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $26, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $20, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $44, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	MOVO X15, X2
	PSRLQ $2, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	PSRLQ $30, X5
	MOVO 112(AX), X4
	MOVO X4, X7
	PSLLQ $34, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	MOVO X7, X6
	PSRLQ $12, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	PSRLQ $58, X6
	MOVO 128(AX), X8
	MOVO X8, X10
	PSLLQ $6, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 176(BX)
	PSRLQ $40, X10
	MOVO 144(AX), X9
	MOVO X9, X12
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $22, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLQ $42, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	MOVO X14, X13
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $50, X13
	MOVO 176(AX), X15
	MOVO X15, X3
	PSLLQ $14, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X3
	MOVO 192(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	MOVO X4, X5
	PSRLQ $14, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	PSRLQ $60, X5
	MOVO 208(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 288(BX)
	PSRLQ $42, X8
	MOVO 224(AX), X6
	MOVO X6, X9
	PSLLQ $22, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $24, X9
	MOVO 240(AX), X10
	MOVO X10, X11
	PSLLQ $40, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	MOVO X11, X12
	PSRLQ $6, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 336(BX)
	PSRLQ $52, X12
	MOVO 256(AX), X14
	MOVO X14, X15
	PSLLQ $12, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 352(BX)
	PSRLQ $34, X15
	MOVO 272(AX), X13
	MOVO X13, X2
	PSLLQ $30, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	MOVO X2, X3
	PSRLQ $16, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 384(BX)
	PSRLQ $62, X3
	MOVO 288(AX), X4
	MOVO X4, X7
	PSLLQ $2, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 400(BX)
	PSRLQ $44, X7
	MOVO 304(AX), X5
	MOVO X5, X6
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X7
	PADDQ X7, X0
	MOVO X0, 416(BX)
	PSRLQ $26, X6
	MOVO 320(AX), X8
	MOVO X8, X10
	PSLLQ $38, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 432(BX)
	MOVO X10, X9
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $54, X9
	MOVO 336(AX), X11
	MOVO X11, X14
	PSLLQ $10, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 464(BX)
	PSRLQ $36, X14
	MOVO 352(AX), X12
	MOVO X12, X13
	PSLLQ $28, X12
	PAND X1, X12
	POR X12, X14
	PADDQ X14, X0
	MOVO X0, 480(BX)
	PSRLQ $18, X13
	PADDQ X13, X0
	MOVO X0, 496(BX)
	MOVO 368(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 512(BX)
	PSRLQ $46, X2
	MOVO 384(AX), X4
	MOVO X4, X3
	PSLLQ $18, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 528(BX)
	PSRLQ $28, X3
	MOVO 400(AX), X5
	MOVO X5, X7
	PSLLQ $36, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 544(BX)
	MOVO X7, X8
	PSRLQ $10, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 560(BX)
	PSRLQ $56, X8
	MOVO 416(AX), X6
	MOVO X6, X10
	PSLLQ $8, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 576(BX)
	PSRLQ $38, X10
	MOVO 432(AX), X11
	MOVO X11, X9
	PSLLQ $26, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 592(BX)
	PSRLQ $20, X9
	MOVO 448(AX), X12
	MOVO X12, X14
	PSLLQ $44, X12
	PAND X1, X12
	POR X12, X9
	PADDQ X9, X0
	MOVO X0, 608(BX)
	MOVO X14, X13
	PSRLQ $2, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X13
	MOVO 464(AX), X15
	MOVO X15, X4
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 640(BX)
	PSRLQ $30, X4
	MOVO 480(AX), X2
	MOVO X2, X5
	PSLLQ $34, X2
	PAND X1, X2
	POR X2, X4
	PADDQ X4, X0
	MOVO X0, 656(BX)
	MOVO X5, X3
	PSRLQ $12, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 672(BX)
	PSRLQ $58, X3
	MOVO 496(AX), X7
	MOVO X7, X6
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 688(BX)
	PSRLQ $40, X6
	MOVO 512(AX), X8
	MOVO X8, X11
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 704(BX)
	PSRLQ $22, X11
	MOVO 528(AX), X10
	MOVO X10, X12
	PSLLQ $42, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 720(BX)
	MOVO X12, X9
	PSRLQ $4, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 736(BX)
	PSRLQ $50, X9
	MOVO 544(AX), X14
	MOVO X14, X15
	PSLLQ $14, X14
	PAND X1, X14
	POR X14, X9
	PADDQ X9, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X15
	MOVO 560(AX), X13
	MOVO X13, X2
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 768(BX)
	MOVO X2, X4
	PSRLQ $14, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	PSRLQ $60, X4
	MOVO 576(AX), X5
	MOVO X5, X7
	PSLLQ $4, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 800(BX)
	PSRLQ $42, X7
	MOVO 592(AX), X3
	MOVO X3, X8
	PSLLQ $22, X3
	PAND X1, X3
	POR X3, X7
	PADDQ X7, X0
	MOVO X0, 816(BX)
	PSRLQ $24, X8
	MOVO 608(AX), X6
	MOVO X6, X10
	PSLLQ $40, X6
	PAND X1, X6
	POR X6, X8
	PADDQ X8, X0
	MOVO X0, 832(BX)
	MOVO X10, X11
	PSRLQ $6, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 848(BX)
	PSRLQ $52, X11
	MOVO 624(AX), X12
	MOVO X12, X14
	PSLLQ $12, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 864(BX)
	PSRLQ $34, X14
	MOVO 640(AX), X9
	MOVO X9, X13
	PSLLQ $30, X9
	PAND X1, X9
	POR X9, X14
	PADDQ X14, X0
	MOVO X0, 880(BX)
	MOVO X13, X15
	PSRLQ $16, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 896(BX)
	PSRLQ $62, X15
	MOVO 656(AX), X2
	MOVO X2, X5
	PSLLQ $2, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 912(BX)
	PSRLQ $44, X5
	MOVO 672(AX), X4
	MOVO X4, X3
	PSLLQ $20, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $26, X3
	MOVO 688(AX), X7
	MOVO X7, X6
	PSLLQ $38, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 944(BX)
	MOVO X6, X8
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 960(BX)
	PSRLQ $54, X8
	MOVO 704(AX), X10
	MOVO X10, X12
	PSLLQ $10, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $36, X12
	MOVO 720(AX), X11
	MOVO X11, X9
	PSLLQ $28, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $18, X9
	PADDQ X9, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_47(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_47(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $140737488355327, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $47, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $17, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $30, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $34, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	MOVO X8, X9
	PSRLQ $13, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $60, X9
	MOVO 48(AX), X10
	MOVO X10, X11
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $43, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $21, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $26, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $38, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	MOVO X15, X2
	PSRLQ $9, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X2
	MOVO 96(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 128(BX)
	PSRLQ $39, X5
	MOVO 112(AX), X4
	MOVO X4, X7
	PSLLQ $25, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	PSRLQ $22, X7
	MOVO 128(AX), X6
	MOVO X6, X8
	PSLLQ $42, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	MOVO X8, X10
	PSRLQ $5, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $52, X10
	MOVO 144(AX), X9
	MOVO X9, X12
	PSLLQ $12, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $35, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLQ $29, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $18, X14
	MOVO 176(AX), X13
	MOVO X13, X15
	PSLLQ $46, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	MOVO X15, X3
	PSRLQ $1, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X3
	MOVO 192(AX), X2
	MOVO X2, X4
	PSLLQ $16, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	PSRLQ $31, X4
	MOVO 208(AX), X5
	MOVO X5, X6
	PSLLQ $33, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	MOVO X6, X7
	PSRLQ $14, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 288(BX)
	PSRLQ $61, X7
	MOVO 224(AX), X8
	MOVO X8, X9
	PSLLQ $3, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 304(BX)
	PSRLQ $44, X9
	MOVO 240(AX), X10
	MOVO X10, X11
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	PSRLQ $27, X11
	MOVO 256(AX), X12
	MOVO X12, X13
	PSLLQ $37, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 336(BX)
	MOVO X13, X14
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 352(BX)
	PSRLQ $57, X14
	MOVO 272(AX), X15
	MOVO X15, X2
	PSLLQ $7, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X2
	MOVO 288(AX), X3
	MOVO X3, X5
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 384(BX)
	PSRLQ $23, X5
	MOVO 304(AX), X4
	MOVO X4, X6
	PSLLQ $41, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 400(BX)
	MOVO X6, X8
	PSRLQ $6, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 416(BX)
	PSRLQ $53, X8
	MOVO 320(AX), X7
	MOVO X7, X10
	PSLLQ $11, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	PSRLQ $36, X10
	MOVO 336(AX), X9
	MOVO X9, X12
	PSLLQ $28, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $19, X12
	MOVO 352(AX), X11
	MOVO X11, X13
	PSLLQ $45, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	MOVO X13, X15
	PSRLQ $2, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 480(BX)
	PSRLQ $49, X15
	MOVO 368(AX), X14
	MOVO X14, X3
	PSLLQ $15, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X3
	MOVO 384(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 512(BX)
	MOVO X4, X5
	PSRLQ $15, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 528(BX)
	PSRLQ $62, X5
	MOVO 400(AX), X6
	MOVO X6, X7
	PSLLQ $2, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 544(BX)
	PSRLQ $45, X7
	MOVO 416(AX), X8
	MOVO X8, X9
	PSLLQ $19, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 560(BX)
	PSRLQ $28, X9
	MOVO 432(AX), X10
	MOVO X10, X11
	PSLLQ $36, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 576(BX)
	MOVO X11, X12
	PSRLQ $11, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 592(BX)
	PSRLQ $58, X12
	MOVO 448(AX), X13
	MOVO X13, X14
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 608(BX)
	PSRLQ $41, X14
	MOVO 464(AX), X15
	MOVO X15, X2
	PSLLQ $23, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	PSRLQ $24, X2
	MOVO 480(AX), X3
	MOVO X3, X4
	PSLLQ $40, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 640(BX)
	MOVO X4, X6
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 656(BX)
	PSRLQ $54, X6
	MOVO 496(AX), X5
	MOVO X5, X8
	PSLLQ $10, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 672(BX)
	PSRLQ $37, X8
	MOVO 512(AX), X7
	MOVO X7, X10
	PSLLQ $27, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 688(BX)
	PSRLQ $20, X10
	MOVO 528(AX), X9
	MOVO X9, X11
	PSLLQ $44, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 704(BX)
	MOVO X11, X13
	PSRLQ $3, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 720(BX)
	PSRLQ $50, X13
	MOVO 544(AX), X12
	MOVO X12, X15
	PSLLQ $14, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 736(BX)
	PSRLQ $33, X15
	MOVO 560(AX), X14
	MOVO X14, X3
	PSLLQ $31, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 752(BX)
	MOVO X3, X2
	PSRLQ $16, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $63, X2
	MOVO 576(AX), X4
	MOVO X4, X5
	PSLLQ $1, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	PSRLQ $46, X5
	MOVO 592(AX), X6
	MOVO X6, X7
	PSLLQ $18, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	PSRLQ $29, X7
	MOVO 608(AX), X8
	MOVO X8, X9
	PSLLQ $35, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 816(BX)
	MOVO X9, X10
	PSRLQ $12, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 832(BX)
	PSRLQ $59, X10
	MOVO 624(AX), X11
	MOVO X11, X12
	PSLLQ $5, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 848(BX)
	PSRLQ $42, X12
	MOVO 640(AX), X13
	MOVO X13, X14
	PSLLQ $22, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 864(BX)
	PSRLQ $25, X14
	MOVO 656(AX), X15
	MOVO X15, X3
	PSLLQ $39, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 880(BX)
	MOVO X3, X4
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $55, X4
	MOVO 672(AX), X2
	MOVO X2, X6
	PSLLQ $9, X2
	PAND X1, X2
	POR X2, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $38, X6
	MOVO 688(AX), X5
	MOVO X5, X8
	PSLLQ $26, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $21, X8
	MOVO 704(AX), X7
	MOVO X7, X9
	PSLLQ $43, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 944(BX)
	MOVO X9, X11
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	PSRLQ $51, X11
	MOVO 720(AX), X10
	MOVO X10, X13
	PSLLQ $13, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	PSRLQ $34, X13
	MOVO 736(AX), X12
	MOVO X12, X15
	PSLLQ $30, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 992(BX)
	PSRLQ $17, X15
	PADDQ X15, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_48(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_48(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $281474976710655, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $48, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $32, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $16, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	MOVO 48(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 64(BX)
	PSRLQ $48, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 80(BX)
	PSRLQ $32, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 96(BX)
	PSRLQ $16, X14
	PADDQ X14, X0
	MOVO X0, 112(BX)
	MOVO 96(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 128(BX)
	PSRLQ $48, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 144(BX)
	PSRLQ $32, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 160(BX)
	PSRLQ $16, X7
	PADDQ X7, X0
	MOVO X0, 176(BX)
	MOVO 144(AX), X6
	MOVO X6, X8
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 192(BX)
	PSRLQ $48, X8
	MOVO 160(AX), X9
	MOVO X9, X11
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 208(BX)
	PSRLQ $32, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 224(BX)
	PSRLQ $16, X13
	PADDQ X13, X0
	MOVO X0, 240(BX)
	MOVO 192(AX), X12
	MOVO X12, X14
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 256(BX)
	PSRLQ $48, X14
	MOVO 208(AX), X15
	MOVO X15, X3
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 272(BX)
	PSRLQ $32, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 288(BX)
	PSRLQ $16, X4
	PADDQ X4, X0
	MOVO X0, 304(BX)
	MOVO 240(AX), X5
	MOVO X5, X7
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 320(BX)
	PSRLQ $48, X7
	MOVO 256(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 336(BX)
	PSRLQ $32, X9
	MOVO 272(AX), X8
	MOVO X8, X10
	PSLLQ $32, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 352(BX)
	PSRLQ $16, X10
	PADDQ X10, X0
	MOVO X0, 368(BX)
	MOVO 288(AX), X11
	MOVO X11, X13
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 384(BX)
	PSRLQ $48, X13
	MOVO 304(AX), X12
	MOVO X12, X15
	PSLLQ $16, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 400(BX)
	PSRLQ $32, X15
	MOVO 320(AX), X14
	MOVO X14, X2
	PSLLQ $32, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	PSRLQ $16, X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO 336(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $48, X4
	MOVO 352(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $32, X6
	MOVO 368(AX), X7
	MOVO X7, X8
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $16, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	MOVO 384(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $48, X10
	MOVO 400(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	PSRLQ $32, X12
	MOVO 416(AX), X13
	MOVO X13, X14
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $16, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	MOVO 432(AX), X15
	MOVO X15, X2
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 576(BX)
	PSRLQ $48, X2
	MOVO 448(AX), X3
	MOVO X3, X5
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	PSRLQ $32, X5
	MOVO 464(AX), X4
	MOVO X4, X7
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	PSRLQ $16, X7
	PADDQ X7, X0
	MOVO X0, 624(BX)
	MOVO 480(AX), X6
	MOVO X6, X8
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 640(BX)
	PSRLQ $48, X8
	MOVO 496(AX), X9
	MOVO X9, X11
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 656(BX)
	PSRLQ $32, X11
	MOVO 512(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 672(BX)
	PSRLQ $16, X13
	PADDQ X13, X0
	MOVO X0, 688(BX)
	MOVO 528(AX), X12
	MOVO X12, X14
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 704(BX)
	PSRLQ $48, X14
	MOVO 544(AX), X15
	MOVO X15, X3
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 720(BX)
	PSRLQ $32, X3
	MOVO 560(AX), X2
	MOVO X2, X4
	PSLLQ $32, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 736(BX)
	PSRLQ $16, X4
	PADDQ X4, X0
	MOVO X0, 752(BX)
	MOVO 576(AX), X5
	MOVO X5, X7
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 768(BX)
	PSRLQ $48, X7
	MOVO 592(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 784(BX)
	PSRLQ $32, X9
	MOVO 608(AX), X8
	MOVO X8, X10
	PSLLQ $32, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	PSRLQ $16, X10
	PADDQ X10, X0
	MOVO X0, 816(BX)
	MOVO 624(AX), X11
	MOVO X11, X13
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 832(BX)
	PSRLQ $48, X13
	MOVO 640(AX), X12
	MOVO X12, X15
	PSLLQ $16, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 848(BX)
	PSRLQ $32, X15
	MOVO 656(AX), X14
	MOVO X14, X2
	PSLLQ $32, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	PSRLQ $16, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 672(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $48, X4
	MOVO 688(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $32, X6
	MOVO 704(AX), X7
	MOVO X7, X8
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $16, X8
	PADDQ X8, X0
	MOVO X0, 944(BX)
	MOVO 720(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	PSRLQ $48, X10
	MOVO 736(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 976(BX)
	PSRLQ $32, X12
	MOVO 752(AX), X13
	MOVO X13, X14
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $16, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_49(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_49(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $562949953421311, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $49, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $15, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $34, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $30, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $19, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $45, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	MOVO X10, X11
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $53, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $11, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $38, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $26, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $23, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLQ $41, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	MOVO X3, X5
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	PSRLQ $57, X5
	MOVO 112(AX), X4
	MOVO X4, X7
	PSLLQ $7, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	PSRLQ $42, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLQ $22, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	PSRLQ $27, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $37, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 176(BX)
	MOVO X10, X12
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $61, X12
	MOVO 160(AX), X11
	MOVO X11, X14
	PSLLQ $3, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $46, X14
	MOVO 176(AX), X13
	MOVO X13, X2
	PSLLQ $18, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $31, X2
	MOVO 192(AX), X15
	MOVO X15, X3
	PSLLQ $33, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X3
	MOVO 208(AX), X4
	MOVO X4, X5
	PSLLQ $48, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	MOVO X5, X6
	PSRLQ $1, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 272(BX)
	PSRLQ $50, X6
	MOVO 224(AX), X7
	MOVO X7, X8
	PSLLQ $14, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 288(BX)
	PSRLQ $35, X8
	MOVO 240(AX), X9
	MOVO X9, X10
	PSLLQ $29, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $20, X10
	MOVO 256(AX), X11
	MOVO X11, X12
	PSLLQ $44, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	MOVO X12, X13
	PSRLQ $5, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	PSRLQ $54, X13
	MOVO 272(AX), X14
	MOVO X14, X15
	PSLLQ $10, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 352(BX)
	PSRLQ $39, X15
	MOVO 288(AX), X2
	MOVO X2, X4
	PSLLQ $25, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	PSRLQ $24, X4
	MOVO 304(AX), X3
	MOVO X3, X5
	PSLLQ $40, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 384(BX)
	MOVO X5, X7
	PSRLQ $9, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 400(BX)
	PSRLQ $58, X7
	MOVO 320(AX), X6
	MOVO X6, X9
	PSLLQ $6, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 416(BX)
	PSRLQ $43, X9
	MOVO 336(AX), X8
	MOVO X8, X11
	PSLLQ $21, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $28, X11
	MOVO 352(AX), X10
	MOVO X10, X12
	PSLLQ $36, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 448(BX)
	MOVO X12, X14
	PSRLQ $13, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	PSRLQ $62, X14
	MOVO 368(AX), X13
	MOVO X13, X2
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 480(BX)
	PSRLQ $47, X2
	MOVO 384(AX), X15
	MOVO X15, X3
	PSLLQ $17, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X3
	MOVO 400(AX), X4
	MOVO X4, X5
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 512(BX)
	PSRLQ $17, X5
	MOVO 416(AX), X6
	MOVO X6, X7
	PSLLQ $47, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 528(BX)
	MOVO X7, X8
	PSRLQ $2, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 544(BX)
	PSRLQ $51, X8
	MOVO 432(AX), X9
	MOVO X9, X10
	PSLLQ $13, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 560(BX)
	PSRLQ $36, X10
	MOVO 448(AX), X11
	MOVO X11, X12
	PSLLQ $28, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	PSRLQ $21, X12
	MOVO 464(AX), X13
	MOVO X13, X14
	PSLLQ $43, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	MOVO X14, X15
	PSRLQ $6, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $55, X15
	MOVO 480(AX), X2
	MOVO X2, X4
	PSLLQ $9, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	PSRLQ $40, X4
	MOVO 496(AX), X3
	MOVO X3, X6
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 640(BX)
	PSRLQ $25, X6
	MOVO 512(AX), X5
	MOVO X5, X7
	PSLLQ $39, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 656(BX)
	MOVO X7, X9
	PSRLQ $10, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 672(BX)
	PSRLQ $59, X9
	MOVO 528(AX), X8
	MOVO X8, X11
	PSLLQ $5, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 688(BX)
	PSRLQ $44, X11
	MOVO 544(AX), X10
	MOVO X10, X13
	PSLLQ $20, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 704(BX)
	PSRLQ $29, X13
	MOVO 560(AX), X12
	MOVO X12, X14
	PSLLQ $35, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	MOVO X14, X2
	PSRLQ $14, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 736(BX)
	PSRLQ $63, X2
	MOVO 576(AX), X15
	MOVO X15, X3
	PSLLQ $1, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X3
	MOVO 592(AX), X4
	MOVO X4, X5
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $33, X5
	MOVO 608(AX), X6
	MOVO X6, X7
	PSLLQ $31, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 784(BX)
	PSRLQ $18, X7
	MOVO 624(AX), X8
	MOVO X8, X9
	PSLLQ $46, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 800(BX)
	MOVO X9, X10
	PSRLQ $3, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 816(BX)
	PSRLQ $52, X10
	MOVO 640(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 832(BX)
	PSRLQ $37, X12
	MOVO 656(AX), X13
	MOVO X13, X14
	PSLLQ $27, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 848(BX)
	PSRLQ $22, X14
	MOVO 672(AX), X15
	MOVO X15, X2
	PSLLQ $42, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 864(BX)
	MOVO X2, X4
	PSRLQ $7, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X4
	MOVO 688(AX), X3
	MOVO X3, X6
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 896(BX)
	PSRLQ $41, X6
	MOVO 704(AX), X5
	MOVO X5, X8
	PSLLQ $23, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 912(BX)
	PSRLQ $26, X8
	MOVO 720(AX), X7
	MOVO X7, X9
	PSLLQ $38, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 928(BX)
	MOVO X9, X11
	PSRLQ $11, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 944(BX)
	PSRLQ $60, X11
	MOVO 736(AX), X10
	MOVO X10, X13
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 960(BX)
	PSRLQ $45, X13
	MOVO 752(AX), X12
	MOVO X12, X15
	PSLLQ $19, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 976(BX)
	PSRLQ $30, X15
	MOVO 768(AX), X14
	MOVO X14, X2
	PSLLQ $34, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $15, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_50(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_50(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1125899906842623, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $50, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $14, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $36, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $28, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $22, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $42, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	MOVO X10, X11
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $58, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $6, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $44, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $20, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $30, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLQ $34, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $16, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLQ $48, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	MOVO X4, X7
	PSRLQ $2, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 144(BX)
	PSRLQ $52, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	PSRLQ $38, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $26, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 176(BX)
	PSRLQ $24, X10
	MOVO 160(AX), X12
	MOVO X12, X11
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	MOVO X11, X14
	PSRLQ $10, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 208(BX)
	PSRLQ $60, X14
	MOVO 176(AX), X13
	MOVO X13, X2
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $46, X2
	MOVO 192(AX), X15
	MOVO X15, X5
	PSLLQ $18, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X5
	MOVO 208(AX), X3
	MOVO X3, X4
	PSLLQ $32, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $18, X4
	MOVO 224(AX), X6
	MOVO X6, X7
	PSLLQ $46, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	MOVO X7, X8
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	PSRLQ $54, X8
	MOVO 240(AX), X9
	MOVO X9, X12
	PSLLQ $10, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $40, X12
	MOVO 256(AX), X10
	MOVO X10, X11
	PSLLQ $24, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 320(BX)
	PSRLQ $26, X11
	MOVO 272(AX), X13
	MOVO X13, X14
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 336(BX)
	MOVO X14, X15
	PSRLQ $12, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $62, X15
	MOVO 288(AX), X2
	MOVO X2, X3
	PSLLQ $2, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	PSRLQ $48, X3
	MOVO 304(AX), X5
	MOVO X5, X6
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $34, X6
	MOVO 320(AX), X4
	MOVO X4, X7
	PSLLQ $30, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 400(BX)
	PSRLQ $20, X7
	MOVO 336(AX), X9
	MOVO X9, X8
	PSLLQ $44, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 416(BX)
	MOVO X8, X10
	PSRLQ $6, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	PSRLQ $56, X10
	MOVO 352(AX), X12
	MOVO X12, X13
	PSLLQ $8, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $42, X13
	MOVO 368(AX), X11
	MOVO X11, X14
	PSLLQ $22, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 464(BX)
	PSRLQ $28, X14
	MOVO 384(AX), X2
	MOVO X2, X15
	PSLLQ $36, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 480(BX)
	PSRLQ $14, X15
	PADDQ X15, X0
	MOVO X0, 496(BX)
	MOVO 400(AX), X5
	MOVO X5, X3
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $50, X3
	MOVO 416(AX), X4
	MOVO X4, X6
	PSLLQ $14, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 528(BX)
	PSRLQ $36, X6
	MOVO 432(AX), X9
	MOVO X9, X7
	PSLLQ $28, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 544(BX)
	PSRLQ $22, X7
	MOVO 448(AX), X8
	MOVO X8, X12
	PSLLQ $42, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 560(BX)
	MOVO X12, X10
	PSRLQ $8, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 576(BX)
	PSRLQ $58, X10
	MOVO 464(AX), X11
	MOVO X11, X13
	PSLLQ $6, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 592(BX)
	PSRLQ $44, X13
	MOVO 480(AX), X2
	MOVO X2, X14
	PSLLQ $20, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	PSRLQ $30, X14
	MOVO 496(AX), X15
	MOVO X15, X5
	PSLLQ $34, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	PSRLQ $16, X5
	MOVO 512(AX), X4
	MOVO X4, X3
	PSLLQ $48, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 640(BX)
	MOVO X3, X9
	PSRLQ $2, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 656(BX)
	PSRLQ $52, X9
	MOVO 528(AX), X6
	MOVO X6, X8
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X9
	PADDQ X9, X0
	MOVO X0, 672(BX)
	PSRLQ $38, X8
	MOVO 544(AX), X7
	MOVO X7, X12
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 688(BX)
	PSRLQ $24, X12
	MOVO 560(AX), X11
	MOVO X11, X10
	PSLLQ $40, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 704(BX)
	MOVO X10, X2
	PSRLQ $10, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 720(BX)
	PSRLQ $60, X2
	MOVO 576(AX), X13
	MOVO X13, X15
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X2
	PADDQ X2, X0
	MOVO X0, 736(BX)
	PSRLQ $46, X15
	MOVO 592(AX), X14
	MOVO X14, X4
	PSLLQ $18, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X4
	MOVO 608(AX), X5
	MOVO X5, X3
	PSLLQ $32, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 768(BX)
	PSRLQ $18, X3
	MOVO 624(AX), X6
	MOVO X6, X9
	PSLLQ $46, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 784(BX)
	MOVO X9, X7
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	PSRLQ $54, X7
	MOVO 640(AX), X8
	MOVO X8, X11
	PSLLQ $10, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 816(BX)
	PSRLQ $40, X11
	MOVO 656(AX), X12
	MOVO X12, X10
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 832(BX)
	PSRLQ $26, X10
	MOVO 672(AX), X13
	MOVO X13, X2
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 848(BX)
	MOVO X2, X14
	PSRLQ $12, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 864(BX)
	PSRLQ $62, X14
	MOVO 688(AX), X15
	MOVO X15, X5
	PSLLQ $2, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 880(BX)
	PSRLQ $48, X5
	MOVO 704(AX), X4
	MOVO X4, X6
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 896(BX)
	PSRLQ $34, X6
	MOVO 720(AX), X3
	MOVO X3, X9
	PSLLQ $30, X3
	PAND X1, X3
	POR X3, X6
	PADDQ X6, X0
	MOVO X0, 912(BX)
	PSRLQ $20, X9
	MOVO 736(AX), X8
	MOVO X8, X7
	PSLLQ $44, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	MOVO X7, X12
	PSRLQ $6, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $56, X12
	MOVO 752(AX), X11
	MOVO X11, X13
	PSLLQ $8, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 960(BX)
	PSRLQ $42, X13
	MOVO 768(AX), X10
	MOVO X10, X2
	PSLLQ $22, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 976(BX)
	PSRLQ $28, X2
	MOVO 784(AX), X15
	MOVO X15, X14
	PSLLQ $36, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $14, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_51(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_51(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2251799813685247, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $51, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $13, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $38, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $25, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $39, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	MOVO X10, X11
	PSRLQ $12, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $63, X11
	MOVO 64(AX), X12
	MOVO X12, X13
	PSLLQ $1, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 80(BX)
	PSRLQ $50, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $14, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $37, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLQ $27, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $24, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLQ $40, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	MOVO X4, X7
	PSRLQ $11, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 144(BX)
	PSRLQ $62, X7
	MOVO 128(AX), X6
	MOVO X6, X9
	PSLLQ $2, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	PSRLQ $49, X9
	MOVO 144(AX), X8
	MOVO X8, X10
	PSLLQ $15, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 176(BX)
	PSRLQ $36, X10
	MOVO 160(AX), X12
	MOVO X12, X11
	PSLLQ $28, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $23, X11
	MOVO 176(AX), X14
	MOVO X14, X13
	PSLLQ $41, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 208(BX)
	MOVO X13, X2
	PSRLQ $10, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 224(BX)
	PSRLQ $61, X2
	MOVO 192(AX), X15
	MOVO X15, X5
	PSLLQ $3, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X5
	MOVO 208(AX), X3
	MOVO X3, X4
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $35, X4
	MOVO 224(AX), X6
	MOVO X6, X7
	PSLLQ $29, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	PSRLQ $22, X7
	MOVO 240(AX), X8
	MOVO X8, X9
	PSLLQ $42, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	MOVO X9, X12
	PSRLQ $9, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 304(BX)
	PSRLQ $60, X12
	MOVO 256(AX), X10
	MOVO X10, X14
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 320(BX)
	PSRLQ $47, X14
	MOVO 272(AX), X11
	MOVO X11, X13
	PSLLQ $17, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 336(BX)
	PSRLQ $34, X13
	MOVO 288(AX), X15
	MOVO X15, X2
	PSLLQ $30, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 352(BX)
	PSRLQ $21, X2
	MOVO 304(AX), X3
	MOVO X3, X5
	PSLLQ $43, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	MOVO X5, X6
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $59, X6
	MOVO 320(AX), X4
	MOVO X4, X8
	PSLLQ $5, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 400(BX)
	PSRLQ $46, X8
	MOVO 336(AX), X7
	MOVO X7, X9
	PSLLQ $18, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 416(BX)
	PSRLQ $33, X9
	MOVO 352(AX), X10
	MOVO X10, X12
	PSLLQ $31, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $20, X12
	MOVO 368(AX), X11
	MOVO X11, X14
	PSLLQ $44, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 448(BX)
	MOVO X14, X15
	PSRLQ $7, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 464(BX)
	PSRLQ $58, X15
	MOVO 384(AX), X13
	MOVO X13, X3
	PSLLQ $6, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 480(BX)
	PSRLQ $45, X3
	MOVO 400(AX), X2
	MOVO X2, X5
	PSLLQ $19, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X5
	MOVO 416(AX), X4
	MOVO X4, X6
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $19, X6
	MOVO 432(AX), X7
	MOVO X7, X8
	PSLLQ $45, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 528(BX)
	MOVO X8, X10
	PSRLQ $6, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 544(BX)
	PSRLQ $57, X10
	MOVO 448(AX), X9
	MOVO X9, X11
	PSLLQ $7, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	PSRLQ $44, X11
	MOVO 464(AX), X12
	MOVO X12, X14
	PSLLQ $20, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	PSRLQ $31, X14
	MOVO 480(AX), X13
	MOVO X13, X15
	PSLLQ $33, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 592(BX)
	PSRLQ $18, X15
	MOVO 496(AX), X2
	MOVO X2, X3
	PSLLQ $46, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 608(BX)
	MOVO X3, X4
	PSRLQ $5, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X4
	MOVO 512(AX), X5
	MOVO X5, X7
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 640(BX)
	PSRLQ $43, X7
	MOVO 528(AX), X6
	MOVO X6, X8
	PSLLQ $21, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 656(BX)
	PSRLQ $30, X8
	MOVO 544(AX), X9
	MOVO X9, X10
	PSLLQ $34, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 672(BX)
	PSRLQ $17, X10
	MOVO 560(AX), X12
	MOVO X12, X11
	PSLLQ $47, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 688(BX)
	MOVO X11, X13
	PSRLQ $4, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 704(BX)
	PSRLQ $55, X13
	MOVO 576(AX), X14
	MOVO X14, X2
	PSLLQ $9, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $42, X2
	MOVO 592(AX), X15
	MOVO X15, X3
	PSLLQ $22, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 736(BX)
	PSRLQ $29, X3
	MOVO 608(AX), X5
	MOVO X5, X4
	PSLLQ $35, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X4
	MOVO 624(AX), X6
	MOVO X6, X7
	PSLLQ $48, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 768(BX)
	MOVO X7, X9
	PSRLQ $3, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 784(BX)
	PSRLQ $54, X9
	MOVO 640(AX), X8
	MOVO X8, X12
	PSLLQ $10, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	PSRLQ $41, X12
	MOVO 656(AX), X10
	MOVO X10, X11
	PSLLQ $23, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	PSRLQ $28, X11
	MOVO 672(AX), X14
	MOVO X14, X13
	PSLLQ $36, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 832(BX)
	PSRLQ $15, X13
	MOVO 688(AX), X15
	MOVO X15, X2
	PSLLQ $49, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 848(BX)
	MOVO X2, X5
	PSRLQ $2, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 864(BX)
	PSRLQ $53, X5
	MOVO 704(AX), X3
	MOVO X3, X6
	PSLLQ $11, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X6
	MOVO 720(AX), X4
	MOVO X4, X7
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 896(BX)
	PSRLQ $27, X7
	MOVO 736(AX), X8
	MOVO X8, X9
	PSLLQ $37, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 912(BX)
	PSRLQ $14, X9
	MOVO 752(AX), X10
	MOVO X10, X12
	PSLLQ $50, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	MOVO X12, X14
	PSRLQ $1, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 944(BX)
	PSRLQ $52, X14
	MOVO 768(AX), X11
	MOVO X11, X15
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 960(BX)
	PSRLQ $39, X15
	MOVO 784(AX), X13
	MOVO X13, X2
	PSLLQ $25, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 976(BX)
	PSRLQ $26, X2
	MOVO 800(AX), X3
	MOVO X3, X5
	PSLLQ $38, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $13, X5
	PADDQ X5, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_52(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_52(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4503599627370495, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $52, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $12, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $40, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $24, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $28, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $36, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $16, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $48, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	MOVO X12, X13
	PSRLQ $4, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $56, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $8, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $44, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLQ $20, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLQ $32, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	PSRLQ $20, X4
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLQ $44, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 144(BX)
	MOVO X6, X9
	PSRLQ $8, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 160(BX)
	PSRLQ $60, X9
	MOVO 144(AX), X8
	MOVO X8, X11
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 176(BX)
	PSRLQ $48, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 192(BX)
	PSRLQ $36, X12
	MOVO 176(AX), X14
	MOVO X14, X13
	PSLLQ $28, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $24, X13
	MOVO 192(AX), X2
	MOVO X2, X15
	PSLLQ $40, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 224(BX)
	PSRLQ $12, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	MOVO 208(AX), X5
	MOVO X5, X3
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $52, X3
	MOVO 224(AX), X7
	MOVO X7, X4
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 272(BX)
	PSRLQ $40, X4
	MOVO 240(AX), X6
	MOVO X6, X8
	PSLLQ $24, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 288(BX)
	PSRLQ $28, X8
	MOVO 256(AX), X9
	MOVO X9, X10
	PSLLQ $36, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $16, X10
	MOVO 272(AX), X11
	MOVO X11, X14
	PSLLQ $48, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	MOVO X14, X12
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 336(BX)
	PSRLQ $56, X12
	MOVO 288(AX), X2
	MOVO X2, X13
	PSLLQ $8, X2
	PAND X1, X2
	POR X2, X12
	PADDQ X12, X0
	MOVO X0, 352(BX)
	PSRLQ $44, X13
	MOVO 304(AX), X15
	MOVO X15, X5
	PSLLQ $20, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X5
	MOVO 320(AX), X7
	MOVO X7, X3
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $20, X3
	MOVO 336(AX), X6
	MOVO X6, X4
	PSLLQ $44, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 400(BX)
	MOVO X4, X9
	PSRLQ $8, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 416(BX)
	PSRLQ $60, X9
	MOVO 352(AX), X8
	MOVO X8, X11
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $48, X11
	MOVO 368(AX), X10
	MOVO X10, X14
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 448(BX)
	PSRLQ $36, X14
	MOVO 384(AX), X2
	MOVO X2, X12
	PSLLQ $28, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 464(BX)
	PSRLQ $24, X12
	MOVO 400(AX), X15
	MOVO X15, X13
	PSLLQ $40, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 480(BX)
	PSRLQ $12, X13
	PADDQ X13, X0
	MOVO X0, 496(BX)
	MOVO 416(AX), X7
	MOVO X7, X5
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $52, X5
	MOVO 432(AX), X6
	MOVO X6, X3
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 528(BX)
	PSRLQ $40, X3
	MOVO 448(AX), X4
	MOVO X4, X8
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 544(BX)
	PSRLQ $28, X8
	MOVO 464(AX), X9
	MOVO X9, X10
	PSLLQ $36, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 560(BX)
	PSRLQ $16, X10
	MOVO 480(AX), X11
	MOVO X11, X2
	PSLLQ $48, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	MOVO X2, X14
	PSRLQ $4, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	PSRLQ $56, X14
	MOVO 496(AX), X15
	MOVO X15, X12
	PSLLQ $8, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $44, X12
	MOVO 512(AX), X13
	MOVO X13, X7
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X7
	MOVO 528(AX), X6
	MOVO X6, X5
	PSLLQ $32, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 640(BX)
	PSRLQ $20, X5
	MOVO 544(AX), X4
	MOVO X4, X3
	PSLLQ $44, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 656(BX)
	MOVO X3, X9
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $60, X9
	MOVO 560(AX), X8
	MOVO X8, X11
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 688(BX)
	PSRLQ $48, X11
	MOVO 576(AX), X10
	MOVO X10, X2
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 704(BX)
	PSRLQ $36, X2
	MOVO 592(AX), X15
	MOVO X15, X14
	PSLLQ $28, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 720(BX)
	PSRLQ $24, X14
	MOVO 608(AX), X13
	MOVO X13, X12
	PSLLQ $40, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 736(BX)
	PSRLQ $12, X12
	PADDQ X12, X0
	MOVO X0, 752(BX)
	MOVO 624(AX), X6
	MOVO X6, X7
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 768(BX)
	PSRLQ $52, X7
	MOVO 640(AX), X4
	MOVO X4, X5
	PSLLQ $12, X4
	PAND X1, X4
	POR X4, X7
	PADDQ X7, X0
	MOVO X0, 784(BX)
	PSRLQ $40, X5
	MOVO 656(AX), X3
	MOVO X3, X8
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	PSRLQ $28, X8
	MOVO 672(AX), X9
	MOVO X9, X10
	PSLLQ $36, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 816(BX)
	PSRLQ $16, X10
	MOVO 688(AX), X11
	MOVO X11, X15
	PSLLQ $48, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 832(BX)
	MOVO X15, X2
	PSRLQ $4, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 848(BX)
	PSRLQ $56, X2
	MOVO 704(AX), X13
	MOVO X13, X14
	PSLLQ $8, X13
	PAND X1, X13
	POR X13, X2
	PADDQ X2, X0
	MOVO X0, 864(BX)
	PSRLQ $44, X14
	MOVO 720(AX), X12
	MOVO X12, X6
	PSLLQ $20, X12
	PAND X1, X12
	POR X12, X14
	PADDQ X14, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X6
	MOVO 736(AX), X4
	MOVO X4, X7
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 896(BX)
	PSRLQ $20, X7
	MOVO 752(AX), X3
	MOVO X3, X5
	PSLLQ $44, X3
	PAND X1, X3
	POR X3, X7
	PADDQ X7, X0
	MOVO X0, 912(BX)
	MOVO X5, X9
	PSRLQ $8, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	PSRLQ $60, X9
	MOVO 768(AX), X8
	MOVO X8, X11
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 944(BX)
	PSRLQ $48, X11
	MOVO 784(AX), X10
	MOVO X10, X15
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 960(BX)
	PSRLQ $36, X15
	MOVO 800(AX), X13
	MOVO X13, X2
	PSLLQ $28, X13
	PAND X1, X13
	POR X13, X15
	PADDQ X15, X0
	MOVO X0, 976(BX)
	PSRLQ $24, X2
	MOVO 816(AX), X12
	MOVO X12, X14
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X2
	PADDQ X2, X0
	MOVO X0, 992(BX)
	PSRLQ $12, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_53(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_53(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $9007199254740991, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $53, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $11, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $42, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $22, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $31, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $33, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $20, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $44, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	MOVO X12, X13
	PSRLQ $9, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $62, X13
	MOVO 80(AX), X14
	MOVO X14, X15
	PSLLQ $2, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 96(BX)
	PSRLQ $51, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLQ $13, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	PSRLQ $29, X4
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLQ $35, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 144(BX)
	PSRLQ $18, X6
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $46, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 160(BX)
	MOVO X8, X11
	PSRLQ $7, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $60, X11
	MOVO 160(AX), X10
	MOVO X10, X12
	PSLLQ $4, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 192(BX)
	PSRLQ $49, X12
	MOVO 176(AX), X14
	MOVO X14, X13
	PSLLQ $15, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $38, X13
	MOVO 192(AX), X2
	MOVO X2, X15
	PSLLQ $26, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 224(BX)
	PSRLQ $27, X15
	MOVO 208(AX), X5
	MOVO X5, X3
	PSLLQ $37, X5
	PAND X1, X5
	POR X5, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X3
	MOVO 224(AX), X7
	MOVO X7, X4
	PSLLQ $48, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	MOVO X4, X9
	PSRLQ $5, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	PSRLQ $58, X9
	MOVO 240(AX), X6
	MOVO X6, X8
	PSLLQ $6, X6
	PAND X1, X6
	POR X6, X9
	PADDQ X9, X0
	MOVO X0, 288(BX)
	PSRLQ $47, X8
	MOVO 256(AX), X10
	MOVO X10, X11
	PSLLQ $17, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $36, X11
	MOVO 272(AX), X14
	MOVO X14, X12
	PSLLQ $28, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 320(BX)
	PSRLQ $25, X12
	MOVO 288(AX), X2
	MOVO X2, X13
	PSLLQ $39, X2
	PAND X1, X2
	POR X2, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	PSRLQ $14, X13
	MOVO 304(AX), X5
	MOVO X5, X15
	PSLLQ $50, X5
	PAND X1, X5
	POR X5, X13
	PADDQ X13, X0
	MOVO X0, 352(BX)
	MOVO X15, X7
	PSRLQ $3, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X7
	MOVO 320(AX), X3
	MOVO X3, X4
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X7
	PADDQ X7, X0
	MOVO X0, 384(BX)
	PSRLQ $45, X4
	MOVO 336(AX), X6
	MOVO X6, X9
	PSLLQ $19, X6
	PAND X1, X6
	POR X6, X4
	PADDQ X4, X0
	MOVO X0, 400(BX)
	PSRLQ $34, X9
	MOVO 352(AX), X10
	MOVO X10, X8
	PSLLQ $30, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 416(BX)
	PSRLQ $23, X8
	MOVO 368(AX), X14
	MOVO X14, X11
	PSLLQ $41, X14
	PAND X1, X14
	POR X14, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	PSRLQ $12, X11
	MOVO 384(AX), X2
	MOVO X2, X12
	PSLLQ $52, X2
	PAND X1, X2
	POR X2, X11
	PADDQ X11, X0
	MOVO X0, 448(BX)
	MOVO X12, X5
	PSRLQ $1, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	PSRLQ $54, X5
	MOVO 400(AX), X13
	MOVO X13, X15
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $43, X15
	MOVO 416(AX), X3
	MOVO X3, X7
	PSLLQ $21, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X7
	MOVO 432(AX), X6
	MOVO X6, X4
	PSLLQ $32, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $21, X4
	MOVO 448(AX), X10
	MOVO X10, X9
	PSLLQ $43, X10
	PAND X1, X10
	POR X10, X4
	PADDQ X4, X0
	MOVO X0, 528(BX)
	MOVO X9, X14
	PSRLQ $10, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	PSRLQ $63, X14
	MOVO 464(AX), X8
	MOVO X8, X2
	PSLLQ $1, X8
	PAND X1, X8
	POR X8, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	PSRLQ $52, X2
	MOVO 480(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X2
	PADDQ X2, X0
	MOVO X0, 576(BX)
	PSRLQ $41, X12
	MOVO 496(AX), X13
	MOVO X13, X5
	PSLLQ $23, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $30, X5
	MOVO 512(AX), X3
	MOVO X3, X15
	PSLLQ $34, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 608(BX)
	PSRLQ $19, X15
	MOVO 528(AX), X6
	MOVO X6, X7
	PSLLQ $45, X6
	PAND X1, X6
	POR X6, X15
	PADDQ X15, X0
	MOVO X0, 624(BX)
	MOVO X7, X10
	PSRLQ $8, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 640(BX)
	PSRLQ $61, X10
	MOVO 544(AX), X4
	MOVO X4, X9
	PSLLQ $3, X4
	PAND X1, X4
	POR X4, X10
	PADDQ X10, X0
	MOVO X0, 656(BX)
	PSRLQ $50, X9
	MOVO 560(AX), X8
	MOVO X8, X14
	PSLLQ $14, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 672(BX)
	PSRLQ $39, X14
	MOVO 576(AX), X11
	MOVO X11, X2
	PSLLQ $25, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	PSRLQ $28, X2
	MOVO 592(AX), X13
	MOVO X13, X12
	PSLLQ $36, X13
	PAND X1, X13
	POR X13, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $17, X12
	MOVO 608(AX), X3
	MOVO X3, X5
	PSLLQ $47, X3
	PAND X1, X3
	POR X3, X12
	PADDQ X12, X0
	MOVO X0, 720(BX)
	MOVO X5, X6
	PSRLQ $6, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 736(BX)
	PSRLQ $59, X6
	MOVO 624(AX), X15
	MOVO X15, X7
	PSLLQ $5, X15
	PAND X1, X15
	POR X15, X6
	PADDQ X6, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X7
	MOVO 640(AX), X4
	MOVO X4, X10
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $37, X10
	MOVO 656(AX), X8
	MOVO X8, X9
	PSLLQ $27, X8
	PAND X1, X8
	POR X8, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $26, X9
	MOVO 672(AX), X11
	MOVO X11, X14
	PSLLQ $38, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 800(BX)
	PSRLQ $15, X14
	MOVO 688(AX), X13
	MOVO X13, X2
	PSLLQ $49, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 816(BX)
	MOVO X2, X3
	PSRLQ $4, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	PSRLQ $57, X3
	MOVO 704(AX), X12
	MOVO X12, X5
	PSLLQ $7, X12
	PAND X1, X12
	POR X12, X3
	PADDQ X3, X0
	MOVO X0, 848(BX)
	PSRLQ $46, X5
	MOVO 720(AX), X15
	MOVO X15, X6
	PSLLQ $18, X15
	PAND X1, X15
	POR X15, X5
	PADDQ X5, X0
	MOVO X0, 864(BX)
	PSRLQ $35, X6
	MOVO 736(AX), X4
	MOVO X4, X7
	PSLLQ $29, X4
	PAND X1, X4
	POR X4, X6
	PADDQ X6, X0
	MOVO X0, 880(BX)
	PSRLQ $24, X7
	MOVO 752(AX), X8
	MOVO X8, X10
	PSLLQ $40, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 896(BX)
	PSRLQ $13, X10
	MOVO 768(AX), X11
	MOVO X11, X9
	PSLLQ $51, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 912(BX)
	MOVO X9, X13
	PSRLQ $2, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 928(BX)
	PSRLQ $55, X13
	MOVO 784(AX), X14
	MOVO X14, X2
	PSLLQ $9, X14
	PAND X1, X14
	POR X14, X13
	PADDQ X13, X0
	MOVO X0, 944(BX)
	PSRLQ $44, X2
	MOVO 800(AX), X12
	MOVO X12, X3
	PSLLQ $20, X12
	PAND X1, X12
	POR X12, X2
	PADDQ X2, X0
	MOVO X0, 960(BX)
	PSRLQ $33, X3
	MOVO 816(AX), X15
	MOVO X15, X5
	PSLLQ $31, X15
	PAND X1, X15
	POR X15, X3
	PADDQ X3, X0
	MOVO X0, 976(BX)
	PSRLQ $22, X5
	MOVO 832(AX), X4
	MOVO X4, X6
	PSLLQ $42, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 992(BX)
	PSRLQ $11, X6
	PADDQ X6, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_54(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_54(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $18014398509481983, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $54, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $10, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $44, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $20, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $34, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $30, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $24, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $40, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $14, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $50, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	MOVO X14, X15
	PSRLQ $4, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $58, X15
	MOVO 96(AX), X2
	MOVO X2, X3
	PSLLQ $6, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLQ $16, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	PSRLQ $38, X4
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 144(BX)
	PSRLQ $28, X6
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $36, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 160(BX)
	PSRLQ $18, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $46, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	MOVO X10, X13
	PSRLQ $8, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $62, X13
	MOVO 176(AX), X12
	MOVO X12, X14
	PSLLQ $2, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 208(BX)
	PSRLQ $52, X14
	MOVO 192(AX), X2
	MOVO X2, X15
	PSLLQ $12, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $42, X15
	MOVO 208(AX), X5
	MOVO X5, X3
	PSLLQ $22, X5
	PAND X1, X5
	POR X5, X15
	PADDQ X15, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X3
	MOVO 224(AX), X7
	MOVO X7, X4
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	PSRLQ $22, X4
	MOVO 240(AX), X9
	MOVO X9, X6
	PSLLQ $42, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	PSRLQ $12, X6
	MOVO 256(AX), X11
	MOVO X11, X8
	PSLLQ $52, X11
	PAND X1, X11
	POR X11, X6
	PADDQ X6, X0
	MOVO X0, 288(BX)
	MOVO X8, X10
	PSRLQ $2, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $56, X10
	MOVO 272(AX), X12
	MOVO X12, X13
	PSLLQ $8, X12
	PAND X1, X12
	POR X12, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	PSRLQ $46, X13
	MOVO 288(AX), X2
	MOVO X2, X14
	PSLLQ $18, X2
	PAND X1, X2
	POR X2, X13
	PADDQ X13, X0
	MOVO X0, 336(BX)
	PSRLQ $36, X14
	MOVO 304(AX), X5
	MOVO X5, X15
	PSLLQ $28, X5
	PAND X1, X5
	POR X5, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $26, X15
	MOVO 320(AX), X7
	MOVO X7, X3
	PSLLQ $38, X7
	PAND X1, X7
	POR X7, X15
	PADDQ X15, X0
	MOVO X0, 368(BX)
	PSRLQ $16, X3
	MOVO 336(AX), X9
	MOVO X9, X4
	PSLLQ $48, X9
	PAND X1, X9
	POR X9, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	MOVO X4, X11
	PSRLQ $6, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 400(BX)
	PSRLQ $60, X11
	MOVO 352(AX), X6
	MOVO X6, X8
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	PSRLQ $50, X8
	MOVO 368(AX), X12
	MOVO X12, X10
	PSLLQ $14, X12
	PAND X1, X12
	POR X12, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	PSRLQ $40, X10
	MOVO 384(AX), X2
	MOVO X2, X13
	PSLLQ $24, X2
	PAND X1, X2
	POR X2, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $30, X13
	MOVO 400(AX), X5
	MOVO X5, X14
	PSLLQ $34, X5
	PAND X1, X5
	POR X5, X13
	PADDQ X13, X0
	MOVO X0, 464(BX)
	PSRLQ $20, X14
	MOVO 416(AX), X7
	MOVO X7, X15
	PSLLQ $44, X7
	PAND X1, X7
	POR X7, X14
	PADDQ X14, X0
	MOVO X0, 480(BX)
	PSRLQ $10, X15
	PADDQ X15, X0
	MOVO X0, 496(BX)
	MOVO 432(AX), X9
	MOVO X9, X3
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $54, X3
	MOVO 448(AX), X4
	MOVO X4, X6
	PSLLQ $10, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 528(BX)
	PSRLQ $44, X6
	MOVO 464(AX), X11
	MOVO X11, X12
	PSLLQ $20, X11
	PAND X1, X11
	POR X11, X6
	PADDQ X6, X0
	MOVO X0, 544(BX)
	PSRLQ $34, X12
	MOVO 480(AX), X8
	MOVO X8, X2
	PSLLQ $30, X8
	PAND X1, X8
	POR X8, X12
	PADDQ X12, X0
	MOVO X0, 560(BX)
	PSRLQ $24, X2
	MOVO 496(AX), X10
	MOVO X10, X5
	PSLLQ $40, X10
	PAND X1, X10
	POR X10, X2
	PADDQ X2, X0
	MOVO X0, 576(BX)
	PSRLQ $14, X5
	MOVO 512(AX), X13
	MOVO X13, X7
	PSLLQ $50, X13
	PAND X1, X13
	POR X13, X5
	PADDQ X5, X0
	MOVO X0, 592(BX)
	MOVO X7, X14
	PSRLQ $4, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 608(BX)
	PSRLQ $58, X14
	MOVO 528(AX), X15
	MOVO X15, X9
	PSLLQ $6, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X9
	MOVO 544(AX), X4
	MOVO X4, X3
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	PSRLQ $38, X3
	MOVO 560(AX), X11
	MOVO X11, X6
	PSLLQ $26, X11
	PAND X1, X11
	POR X11, X3
	PADDQ X3, X0
	MOVO X0, 656(BX)
	PSRLQ $28, X6
	MOVO 576(AX), X8
	MOVO X8, X12
	PSLLQ $36, X8
	PAND X1, X8
	POR X8, X6
	PADDQ X6, X0
	MOVO X0, 672(BX)
	PSRLQ $18, X12
	MOVO 592(AX), X10
	MOVO X10, X2
	PSLLQ $46, X10
	PAND X1, X10
	POR X10, X12
	PADDQ X12, X0
	MOVO X0, 688(BX)
	MOVO X2, X13
	PSRLQ $8, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $62, X13
	MOVO 608(AX), X5
	MOVO X5, X7
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $52, X7
	MOVO 624(AX), X15
	MOVO X15, X14
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $42, X14
	MOVO 640(AX), X4
	MOVO X4, X9
	PSLLQ $22, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X9
	MOVO 656(AX), X11
	MOVO X11, X3
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $22, X3
	MOVO 672(AX), X8
	MOVO X8, X6
	PSLLQ $42, X8
	PAND X1, X8
	POR X8, X3
	PADDQ X3, X0
	MOVO X0, 784(BX)
	PSRLQ $12, X6
	MOVO 688(AX), X10
	MOVO X10, X12
	PSLLQ $52, X10
	PAND X1, X10
	POR X10, X6
	PADDQ X6, X0
	MOVO X0, 800(BX)
	MOVO X12, X2
	PSRLQ $2, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	PSRLQ $56, X2
	MOVO 704(AX), X5
	MOVO X5, X13
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	PSRLQ $46, X13
	MOVO 720(AX), X15
	MOVO X15, X7
	PSLLQ $18, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 848(BX)
	PSRLQ $36, X7
	MOVO 736(AX), X4
	MOVO X4, X14
	PSLLQ $28, X4
	PAND X1, X4
	POR X4, X7
	PADDQ X7, X0
	MOVO X0, 864(BX)
	PSRLQ $26, X14
	MOVO 752(AX), X11
	MOVO X11, X9
	PSLLQ $38, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 880(BX)
	PSRLQ $16, X9
	MOVO 768(AX), X8
	MOVO X8, X3
	PSLLQ $48, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 896(BX)
	MOVO X3, X10
	PSRLQ $6, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 912(BX)
	PSRLQ $60, X10
	MOVO 784(AX), X6
	MOVO X6, X12
	PSLLQ $4, X6
	PAND X1, X6
	POR X6, X10
	PADDQ X10, X0
	MOVO X0, 928(BX)
	PSRLQ $50, X12
	MOVO 800(AX), X5
	MOVO X5, X2
	PSLLQ $14, X5
	PAND X1, X5
	POR X5, X12
	PADDQ X12, X0
	MOVO X0, 944(BX)
	PSRLQ $40, X2
	MOVO 816(AX), X15
	MOVO X15, X13
	PSLLQ $24, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 960(BX)
	PSRLQ $30, X13
	MOVO 832(AX), X4
	MOVO X4, X7
	PSLLQ $34, X4
	PAND X1, X4
	POR X4, X13
	PADDQ X13, X0
	MOVO X0, 976(BX)
	PSRLQ $20, X7
	MOVO 848(AX), X11
	MOVO X11, X14
	PSLLQ $44, X11
	PAND X1, X11
	POR X11, X7
	PADDQ X7, X0
	MOVO X0, 992(BX)
	PSRLQ $10, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_55(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_55(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $36028797018963967, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $55, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $9, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $46, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $18, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $37, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $27, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $28, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $36, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $19, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $45, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $10, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $54, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	MOVO X2, X3
	PSRLQ $1, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X3
	MOVO 112(AX), X5
	MOVO X5, X4
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	PSRLQ $47, X4
	MOVO 128(AX), X7
	MOVO X7, X6
	PSLLQ $17, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 144(BX)
	PSRLQ $38, X6
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $26, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 160(BX)
	PSRLQ $29, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $35, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $20, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLQ $44, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $11, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $53, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	MOVO X14, X2
	PSRLQ $2, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $57, X2
	MOVO 208(AX), X5
	MOVO X5, X3
	PSLLQ $7, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X3
	MOVO 224(AX), X7
	MOVO X7, X4
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	PSRLQ $39, X4
	MOVO 240(AX), X9
	MOVO X9, X6
	PSLLQ $25, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	PSRLQ $30, X6
	MOVO 256(AX), X11
	MOVO X11, X8
	PSLLQ $34, X11
	PAND X1, X11
	POR X11, X6
	PADDQ X6, X0
	MOVO X0, 288(BX)
	PSRLQ $21, X8
	MOVO 272(AX), X13
	MOVO X13, X10
	PSLLQ $43, X13
	PAND X1, X13
	POR X13, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $12, X10
	MOVO 288(AX), X15
	MOVO X15, X12
	PSLLQ $52, X15
	PAND X1, X15
	POR X15, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	MOVO X12, X14
	PSRLQ $3, X12
	PAND X1, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	PSRLQ $58, X14
	MOVO 304(AX), X5
	MOVO X5, X2
	PSLLQ $6, X5
	PAND X1, X5
	POR X5, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $49, X2
	MOVO 320(AX), X7
	MOVO X7, X3
	PSLLQ $15, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X3
	MOVO 336(AX), X9
	MOVO X9, X4
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $31, X4
	MOVO 352(AX), X11
	MOVO X11, X6
	PSLLQ $33, X11
	PAND X1, X11
	POR X11, X4
	PADDQ X4, X0
	MOVO X0, 400(BX)
	PSRLQ $22, X6
	MOVO 368(AX), X13
	MOVO X13, X8
	PSLLQ $42, X13
	PAND X1, X13
	POR X13, X6
	PADDQ X6, X0
	MOVO X0, 416(BX)
	PSRLQ $13, X8
	MOVO 384(AX), X15
	MOVO X15, X10
	PSLLQ $51, X15
	PAND X1, X15
	POR X15, X8
	PADDQ X8, X0
	MOVO X0, 432(BX)
	MOVO X10, X12
	PSRLQ $4, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $59, X12
	MOVO 400(AX), X5
	MOVO X5, X14
	PSLLQ $5, X5
	PAND X1, X5
	POR X5, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	PSRLQ $50, X14
	MOVO 416(AX), X7
	MOVO X7, X2
	PSLLQ $14, X7
	PAND X1, X7
	POR X7, X14
	PADDQ X14, X0
	MOVO X0, 480(BX)
	PSRLQ $41, X2
	MOVO 432(AX), X9
	MOVO X9, X3
	PSLLQ $23, X9
	PAND X1, X9
	POR X9, X2
	PADDQ X2, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X3
	MOVO 448(AX), X11
	MOVO X11, X4
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X3
	PADDQ X3, X0
	MOVO X0, 512(BX)
	PSRLQ $23, X4
	MOVO 464(AX), X13
	MOVO X13, X6
	PSLLQ $41, X13
	PAND X1, X13
	POR X13, X4
	PADDQ X4, X0
	MOVO X0, 528(BX)
	PSRLQ $14, X6
	MOVO 480(AX), X15
	MOVO X15, X8
	PSLLQ $50, X15
	PAND X1, X15
	POR X15, X6
	PADDQ X6, X0
	MOVO X0, 544(BX)
	MOVO X8, X10
	PSRLQ $5, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 560(BX)
	PSRLQ $60, X10
	MOVO 496(AX), X5
	MOVO X5, X12
	PSLLQ $4, X5
	PAND X1, X5
	POR X5, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	PSRLQ $51, X12
	MOVO 512(AX), X7
	MOVO X7, X14
	PSLLQ $13, X7
	PAND X1, X7
	POR X7, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $42, X14
	MOVO 528(AX), X9
	MOVO X9, X2
	PSLLQ $22, X9
	PAND X1, X9
	POR X9, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $33, X2
	MOVO 544(AX), X11
	MOVO X11, X3
	PSLLQ $31, X11
	PAND X1, X11
	POR X11, X2
	PADDQ X2, X0
	MOVO X0, 624(BX)
	PSRLQ $24, X3
	MOVO 560(AX), X13
	MOVO X13, X4
	PSLLQ $40, X13
	PAND X1, X13
	POR X13, X3
	PADDQ X3, X0
	MOVO X0, 640(BX)
	PSRLQ $15, X4
	MOVO 576(AX), X15
	MOVO X15, X6
	PSLLQ $49, X15
	PAND X1, X15
	POR X15, X4
	PADDQ X4, X0
	MOVO X0, 656(BX)
	MOVO X6, X8
	PSRLQ $6, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 672(BX)
	PSRLQ $61, X8
	MOVO 592(AX), X5
	MOVO X5, X10
	PSLLQ $3, X5
	PAND X1, X5
	POR X5, X8
	PADDQ X8, X0
	MOVO X0, 688(BX)
	PSRLQ $52, X10
	MOVO 608(AX), X7
	MOVO X7, X12
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X10
	PADDQ X10, X0
	MOVO X0, 704(BX)
	PSRLQ $43, X12
	MOVO 624(AX), X9
	MOVO X9, X14
	PSLLQ $21, X9
	PAND X1, X9
	POR X9, X12
	PADDQ X12, X0
	MOVO X0, 720(BX)
	PSRLQ $34, X14
	MOVO 640(AX), X11
	MOVO X11, X2
	PSLLQ $30, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 736(BX)
	PSRLQ $25, X2
	MOVO 656(AX), X13
	MOVO X13, X3
	PSLLQ $39, X13
	PAND X1, X13
	POR X13, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X3
	MOVO 672(AX), X15
	MOVO X15, X4
	PSLLQ $48, X15
	PAND X1, X15
	POR X15, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	MOVO X4, X6
	PSRLQ $7, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 784(BX)
	PSRLQ $62, X6
	MOVO 688(AX), X5
	MOVO X5, X8
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 800(BX)
	PSRLQ $53, X8
	MOVO 704(AX), X7
	MOVO X7, X10
	PSLLQ $11, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 816(BX)
	PSRLQ $44, X10
	MOVO 720(AX), X9
	MOVO X9, X12
	PSLLQ $20, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 832(BX)
	PSRLQ $35, X12
	MOVO 736(AX), X11
	MOVO X11, X14
	PSLLQ $29, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 848(BX)
	PSRLQ $26, X14
	MOVO 752(AX), X13
	MOVO X13, X2
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X14
	PADDQ X14, X0
	MOVO X0, 864(BX)
	PSRLQ $17, X2
	MOVO 768(AX), X15
	MOVO X15, X3
	PSLLQ $47, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO X3, X4
	PSRLQ $8, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $63, X4
	MOVO 784(AX), X5
	MOVO X5, X6
	PSLLQ $1, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $54, X6
	MOVO 800(AX), X7
	MOVO X7, X8
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $45, X8
	MOVO 816(AX), X9
	MOVO X9, X10
	PSLLQ $19, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 944(BX)
	PSRLQ $36, X10
	MOVO 832(AX), X11
	MOVO X11, X12
	PSLLQ $28, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 960(BX)
	PSRLQ $27, X12
	MOVO 848(AX), X13
	MOVO X13, X14
	PSLLQ $37, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 976(BX)
	PSRLQ $18, X14
	MOVO 864(AX), X15
	MOVO X15, X2
	PSLLQ $46, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $9, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_56(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_56(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $72057594037927935, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $56, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $48, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $40, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $32, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $24, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $40, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $16, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $48, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	MOVO 112(AX), X3
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 128(BX)
	PSRLQ $56, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 144(BX)
	PSRLQ $48, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 160(BX)
	PSRLQ $40, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 176(BX)
	PSRLQ $32, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 192(BX)
	PSRLQ $24, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 208(BX)
	PSRLQ $16, X15
	MOVO 208(AX), X14
	MOVO X14, X2
	PSLLQ $48, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 224(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	MOVO 224(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 256(BX)
	PSRLQ $56, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 272(BX)
	PSRLQ $48, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 288(BX)
	PSRLQ $40, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $32, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	PSRLQ $24, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $40, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	PSRLQ $16, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLQ $48, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	MOVO 336(AX), X3
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 384(BX)
	PSRLQ $56, X5
	MOVO 352(AX), X4
	MOVO X4, X7
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 400(BX)
	PSRLQ $48, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 416(BX)
	PSRLQ $40, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 432(BX)
	PSRLQ $32, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 448(BX)
	PSRLQ $24, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 464(BX)
	PSRLQ $16, X15
	MOVO 432(AX), X14
	MOVO X14, X2
	PSLLQ $48, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 480(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 496(BX)
	MOVO 448(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 512(BX)
	PSRLQ $56, X4
	MOVO 464(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 528(BX)
	PSRLQ $48, X6
	MOVO 480(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 544(BX)
	PSRLQ $40, X8
	MOVO 496(AX), X9
	MOVO X9, X10
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 560(BX)
	PSRLQ $32, X10
	MOVO 512(AX), X11
	MOVO X11, X12
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 576(BX)
	PSRLQ $24, X12
	MOVO 528(AX), X13
	MOVO X13, X14
	PSLLQ $40, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $16, X14
	MOVO 544(AX), X15
	MOVO X15, X2
	PSLLQ $48, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 624(BX)
	MOVO 560(AX), X3
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 640(BX)
	PSRLQ $56, X5
	MOVO 576(AX), X4
	MOVO X4, X7
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 656(BX)
	PSRLQ $48, X7
	MOVO 592(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 672(BX)
	PSRLQ $40, X9
	MOVO 608(AX), X8
	MOVO X8, X11
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 688(BX)
	PSRLQ $32, X11
	MOVO 624(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 704(BX)
	PSRLQ $24, X13
	MOVO 640(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 720(BX)
	PSRLQ $16, X15
	MOVO 656(AX), X14
	MOVO X14, X2
	PSLLQ $48, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 736(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	MOVO 672(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 768(BX)
	PSRLQ $56, X4
	MOVO 688(AX), X5
	MOVO X5, X6
	PSLLQ $8, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 784(BX)
	PSRLQ $48, X6
	MOVO 704(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 800(BX)
	PSRLQ $40, X8
	MOVO 720(AX), X9
	MOVO X9, X10
	PSLLQ $24, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 816(BX)
	PSRLQ $32, X10
	MOVO 736(AX), X11
	MOVO X11, X12
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 832(BX)
	PSRLQ $24, X12
	MOVO 752(AX), X13
	MOVO X13, X14
	PSLLQ $40, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 848(BX)
	PSRLQ $16, X14
	MOVO 768(AX), X15
	MOVO X15, X2
	PSLLQ $48, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 864(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 784(AX), X3
	MOVO X3, X5
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $56, X5
	MOVO 800(AX), X4
	MOVO X4, X7
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 912(BX)
	PSRLQ $48, X7
	MOVO 816(AX), X6
	MOVO X6, X9
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 928(BX)
	PSRLQ $40, X9
	MOVO 832(AX), X8
	MOVO X8, X11
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 944(BX)
	PSRLQ $32, X11
	MOVO 848(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 960(BX)
	PSRLQ $24, X13
	MOVO 864(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 976(BX)
	PSRLQ $16, X15
	MOVO 880(AX), X14
	MOVO X14, X2
	PSLLQ $48, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $8, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_57(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_57(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $144115188075855871, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $57, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $7, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $50, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $14, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $43, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $21, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $36, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $28, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $29, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $35, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $22, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $42, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $15, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $49, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $8, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $56, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	MOVO X7, X6
	PSRLQ $1, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	PSRLQ $58, X6
	MOVO 144(AX), X9
	MOVO X9, X8
	PSLLQ $6, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 160(BX)
	PSRLQ $51, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $13, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $44, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $37, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $27, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $30, X14
	MOVO 208(AX), X3
	MOVO X3, X2
	PSLLQ $34, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $23, X2
	MOVO 224(AX), X4
	MOVO X4, X5
	PSLLQ $41, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X5
	MOVO 240(AX), X7
	MOVO X7, X9
	PSLLQ $48, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $9, X9
	MOVO 256(AX), X6
	MOVO X6, X11
	PSLLQ $55, X6
	PAND X1, X6
	POR X6, X9
	PADDQ X9, X0
	MOVO X0, 272(BX)
	MOVO X11, X8
	PSRLQ $2, X11
	PAND X1, X11
	PADDQ X11, X0
	MOVO X0, 288(BX)
	PSRLQ $59, X8
	MOVO 272(AX), X13
	MOVO X13, X10
	PSLLQ $5, X13
	PAND X1, X13
	POR X13, X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	PSRLQ $52, X10
	MOVO 288(AX), X15
	MOVO X15, X12
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X10
	PADDQ X10, X0
	MOVO X0, 320(BX)
	PSRLQ $45, X12
	MOVO 304(AX), X3
	MOVO X3, X14
	PSLLQ $19, X3
	PAND X1, X3
	POR X3, X12
	PADDQ X12, X0
	MOVO X0, 336(BX)
	PSRLQ $38, X14
	MOVO 320(AX), X4
	MOVO X4, X2
	PSLLQ $26, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $31, X2
	MOVO 336(AX), X7
	MOVO X7, X5
	PSLLQ $33, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	PSRLQ $24, X5
	MOVO 352(AX), X6
	MOVO X6, X9
	PSLLQ $40, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $17, X9
	MOVO 368(AX), X11
	MOVO X11, X13
	PSLLQ $47, X11
	PAND X1, X11
	POR X11, X9
	PADDQ X9, X0
	MOVO X0, 400(BX)
	PSRLQ $10, X13
	MOVO 384(AX), X8
	MOVO X8, X15
	PSLLQ $54, X8
	PAND X1, X8
	POR X8, X13
	PADDQ X13, X0
	MOVO X0, 416(BX)
	MOVO X15, X10
	PSRLQ $3, X15
	PAND X1, X15
	PADDQ X15, X0
	MOVO X0, 432(BX)
	PSRLQ $60, X10
	MOVO 400(AX), X3
	MOVO X3, X12
	PSLLQ $4, X3
	PAND X1, X3
	POR X3, X10
	PADDQ X10, X0
	MOVO X0, 448(BX)
	PSRLQ $53, X12
	MOVO 416(AX), X4
	MOVO X4, X14
	PSLLQ $11, X4
	PAND X1, X4
	POR X4, X12
	PADDQ X12, X0
	MOVO X0, 464(BX)
	PSRLQ $46, X14
	MOVO 432(AX), X7
	MOVO X7, X2
	PSLLQ $18, X7
	PAND X1, X7
	POR X7, X14
	PADDQ X14, X0
	MOVO X0, 480(BX)
	PSRLQ $39, X2
	MOVO 448(AX), X6
	MOVO X6, X5
	PSLLQ $25, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X5
	MOVO 464(AX), X11
	MOVO X11, X9
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $25, X9
	MOVO 480(AX), X8
	MOVO X8, X13
	PSLLQ $39, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 528(BX)
	PSRLQ $18, X13
	MOVO 496(AX), X15
	MOVO X15, X3
	PSLLQ $46, X15
	PAND X1, X15
	POR X15, X13
	PADDQ X13, X0
	MOVO X0, 544(BX)
	PSRLQ $11, X3
	MOVO 512(AX), X10
	MOVO X10, X4
	PSLLQ $53, X10
	PAND X1, X10
	POR X10, X3
	PADDQ X3, X0
	MOVO X0, 560(BX)
	MOVO X4, X12
	PSRLQ $4, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 576(BX)
	PSRLQ $61, X12
	MOVO 528(AX), X7
	MOVO X7, X14
	PSLLQ $3, X7
	PAND X1, X7
	POR X7, X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	PSRLQ $54, X14
	MOVO 544(AX), X6
	MOVO X6, X2
	PSLLQ $10, X6
	PAND X1, X6
	POR X6, X14
	PADDQ X14, X0
	MOVO X0, 608(BX)
	PSRLQ $47, X2
	MOVO 560(AX), X11
	MOVO X11, X5
	PSLLQ $17, X11
	PAND X1, X11
	POR X11, X2
	PADDQ X2, X0
	MOVO X0, 624(BX)
	PSRLQ $40, X5
	MOVO 576(AX), X8
	MOVO X8, X9
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X5
	PADDQ X5, X0
	MOVO X0, 640(BX)
	PSRLQ $33, X9
	MOVO 592(AX), X15
	MOVO X15, X13
	PSLLQ $31, X15
	PAND X1, X15
	POR X15, X9
	PADDQ X9, X0
	MOVO X0, 656(BX)
	PSRLQ $26, X13
	MOVO 608(AX), X10
	MOVO X10, X3
	PSLLQ $38, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	PSRLQ $19, X3
	MOVO 624(AX), X4
	MOVO X4, X7
	PSLLQ $45, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 688(BX)
	PSRLQ $12, X7
	MOVO 640(AX), X12
	MOVO X12, X6
	PSLLQ $52, X12
	PAND X1, X12
	POR X12, X7
	PADDQ X7, X0
	MOVO X0, 704(BX)
	MOVO X6, X14
	PSRLQ $5, X6
	PAND X1, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $62, X14
	MOVO 656(AX), X11
	MOVO X11, X2
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X14
	PADDQ X14, X0
	MOVO X0, 736(BX)
	PSRLQ $55, X2
	MOVO 672(AX), X8
	MOVO X8, X5
	PSLLQ $9, X8
	PAND X1, X8
	POR X8, X2
	PADDQ X2, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X5
	MOVO 688(AX), X15
	MOVO X15, X9
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X5
	PADDQ X5, X0
	MOVO X0, 768(BX)
	PSRLQ $41, X9
	MOVO 704(AX), X10
	MOVO X10, X13
	PSLLQ $23, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 784(BX)
	PSRLQ $34, X13
	MOVO 720(AX), X4
	MOVO X4, X3
	PSLLQ $30, X4
	PAND X1, X4
	POR X4, X13
	PADDQ X13, X0
	MOVO X0, 800(BX)
	PSRLQ $27, X3
	MOVO 736(AX), X12
	MOVO X12, X7
	PSLLQ $37, X12
	PAND X1, X12
	POR X12, X3
	PADDQ X3, X0
	MOVO X0, 816(BX)
	PSRLQ $20, X7
	MOVO 752(AX), X6
	MOVO X6, X11
	PSLLQ $44, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 832(BX)
	PSRLQ $13, X11
	MOVO 768(AX), X14
	MOVO X14, X8
	PSLLQ $51, X14
	PAND X1, X14
	POR X14, X11
	PADDQ X11, X0
	MOVO X0, 848(BX)
	MOVO X8, X2
	PSRLQ $6, X8
	PAND X1, X8
	PADDQ X8, X0
	MOVO X0, 864(BX)
	PSRLQ $63, X2
	MOVO 784(AX), X15
	MOVO X15, X5
	PSLLQ $1, X15
	PAND X1, X15
	POR X15, X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	PSRLQ $56, X5
	MOVO 800(AX), X10
	MOVO X10, X9
	PSLLQ $8, X10
	PAND X1, X10
	POR X10, X5
	PADDQ X5, X0
	MOVO X0, 896(BX)
	PSRLQ $49, X9
	MOVO 816(AX), X4
	MOVO X4, X13
	PSLLQ $15, X4
	PAND X1, X4
	POR X4, X9
	PADDQ X9, X0
	MOVO X0, 912(BX)
	PSRLQ $42, X13
	MOVO 832(AX), X12
	MOVO X12, X3
	PSLLQ $22, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 928(BX)
	PSRLQ $35, X3
	MOVO 848(AX), X6
	MOVO X6, X7
	PSLLQ $29, X6
	PAND X1, X6
	POR X6, X3
	PADDQ X3, X0
	MOVO X0, 944(BX)
	PSRLQ $28, X7
	MOVO 864(AX), X14
	MOVO X14, X11
	PSLLQ $36, X14
	PAND X1, X14
	POR X14, X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	PSRLQ $21, X11
	MOVO 880(AX), X8
	MOVO X8, X15
	PSLLQ $43, X8
	PAND X1, X8
	POR X8, X11
	PADDQ X11, X0
	MOVO X0, 976(BX)
	PSRLQ $14, X15
	MOVO 896(AX), X2
	MOVO X2, X10
	PSLLQ $50, X2
	PAND X1, X2
	POR X2, X15
	PADDQ X15, X0
	MOVO X0, 992(BX)
	PSRLQ $7, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_58(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_58(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $288230376151711743, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $58, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $6, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $52, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $12, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $46, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $18, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $40, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $24, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $34, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $30, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $28, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $36, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $22, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $42, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $16, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $48, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	PSRLQ $10, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $54, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	MOVO X9, X8
	PSRLQ $4, X9
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 160(BX)
	PSRLQ $62, X8
	MOVO 160(AX), X11
	MOVO X11, X10
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 176(BX)
	PSRLQ $56, X10
	MOVO 176(AX), X13
	MOVO X13, X12
	PSLLQ $8, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 192(BX)
	PSRLQ $50, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $14, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $44, X14
	MOVO 208(AX), X3
	MOVO X3, X2
	PSLLQ $20, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $38, X2
	MOVO 224(AX), X4
	MOVO X4, X5
	PSLLQ $26, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X5
	MOVO 240(AX), X6
	MOVO X6, X7
	PSLLQ $32, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $26, X7
	MOVO 256(AX), X9
	MOVO X9, X11
	PSLLQ $38, X9
	PAND X1, X9
	POR X9, X7
	PADDQ X7, X0
	MOVO X0, 272(BX)
	PSRLQ $20, X11
	MOVO 272(AX), X8
	MOVO X8, X13
	PSLLQ $44, X8
	PAND X1, X8
	POR X8, X11
	PADDQ X11, X0
	MOVO X0, 288(BX)
	PSRLQ $14, X13
	MOVO 288(AX), X10
	MOVO X10, X15
	PSLLQ $50, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 304(BX)
	PSRLQ $8, X15
	MOVO 304(AX), X12
	MOVO X12, X3
	PSLLQ $56, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 320(BX)
	MOVO X3, X14
	PSRLQ $2, X3
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 336(BX)
	PSRLQ $60, X14
	MOVO 320(AX), X4
	MOVO X4, X2
	PSLLQ $4, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 352(BX)
	PSRLQ $54, X2
	MOVO 336(AX), X6
	MOVO X6, X5
	PSLLQ $10, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 368(BX)
	PSRLQ $48, X5
	MOVO 352(AX), X9
	MOVO X9, X7
	PSLLQ $16, X9
	PAND X1, X9
	POR X9, X5
	PADDQ X5, X0
	MOVO X0, 384(BX)
	PSRLQ $42, X7
	MOVO 368(AX), X8
	MOVO X8, X11
	PSLLQ $22, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 400(BX)
	PSRLQ $36, X11
	MOVO 384(AX), X10
	MOVO X10, X13
	PSLLQ $28, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	PSRLQ $30, X13
	MOVO 400(AX), X12
	MOVO X12, X15
	PSLLQ $34, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 432(BX)
	PSRLQ $24, X15
	MOVO 416(AX), X3
	MOVO X3, X4
	PSLLQ $40, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 448(BX)
	PSRLQ $18, X4
	MOVO 432(AX), X14
	MOVO X14, X6
	PSLLQ $46, X14
	PAND X1, X14
	POR X14, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $12, X6
	MOVO 448(AX), X2
	MOVO X2, X9
	PSLLQ $52, X2
	PAND X1, X2
	POR X2, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $6, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	MOVO 464(AX), X5
	MOVO X5, X8
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 512(BX)
	PSRLQ $58, X8
	MOVO 480(AX), X7
	MOVO X7, X10
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $52, X10
	MOVO 496(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 544(BX)
	PSRLQ $46, X12
	MOVO 512(AX), X13
	MOVO X13, X3
	PSLLQ $18, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 560(BX)
	PSRLQ $40, X3
	MOVO 528(AX), X15
	MOVO X15, X14
	PSLLQ $24, X15
	PAND X1, X15
	POR X15, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	PSRLQ $34, X14
	MOVO 544(AX), X4
	MOVO X4, X2
	PSLLQ $30, X4
	PAND X1, X4
	POR X4, X14
	PADDQ X14, X0
	MOVO X0, 592(BX)
	PSRLQ $28, X2
	MOVO 560(AX), X6
	MOVO X6, X9
	PSLLQ $36, X6
	PAND X1, X6
	POR X6, X2
	PADDQ X2, X0
	MOVO X0, 608(BX)
	PSRLQ $22, X9
	MOVO 576(AX), X5
	MOVO X5, X7
	PSLLQ $42, X5
	PAND X1, X5
	POR X5, X9
	PADDQ X9, X0
	MOVO X0, 624(BX)
	PSRLQ $16, X7
	MOVO 592(AX), X8
	MOVO X8, X11
	PSLLQ $48, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 640(BX)
	PSRLQ $10, X11
	MOVO 608(AX), X10
	MOVO X10, X13
	PSLLQ $54, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 656(BX)
	MOVO X13, X12
	PSRLQ $4, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	PSRLQ $62, X12
	MOVO 624(AX), X15
	MOVO X15, X3
	PSLLQ $2, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 688(BX)
	PSRLQ $56, X3
	MOVO 640(AX), X4
	MOVO X4, X14
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	PSRLQ $50, X14
	MOVO 656(AX), X6
	MOVO X6, X2
	PSLLQ $14, X6
	PAND X1, X6
	POR X6, X14
	PADDQ X14, X0
	MOVO X0, 720(BX)
	PSRLQ $44, X2
	MOVO 672(AX), X5
	MOVO X5, X9
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 736(BX)
	PSRLQ $38, X9
	MOVO 688(AX), X8
	MOVO X8, X7
	PSLLQ $26, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X7
	MOVO 704(AX), X10
	MOVO X10, X11
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X7
	PADDQ X7, X0
	MOVO X0, 768(BX)
	PSRLQ $26, X11
	MOVO 720(AX), X13
	MOVO X13, X15
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 784(BX)
	PSRLQ $20, X15
	MOVO 736(AX), X12
	MOVO X12, X4
	PSLLQ $44, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 800(BX)
	PSRLQ $14, X4
	MOVO 752(AX), X3
	MOVO X3, X6
	PSLLQ $50, X3
	PAND X1, X3
	POR X3, X4
	PADDQ X4, X0
	MOVO X0, 816(BX)
	PSRLQ $8, X6
	MOVO 768(AX), X14
	MOVO X14, X5
	PSLLQ $56, X14
	PAND X1, X14
	POR X14, X6
	PADDQ X6, X0
	MOVO X0, 832(BX)
	MOVO X5, X2
	PSRLQ $2, X5
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 848(BX)
	PSRLQ $60, X2
	MOVO 784(AX), X8
	MOVO X8, X9
	PSLLQ $4, X8
	PAND X1, X8
	POR X8, X2
	PADDQ X2, X0
	MOVO X0, 864(BX)
	PSRLQ $54, X9
	MOVO 800(AX), X10
	MOVO X10, X7
	PSLLQ $10, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 880(BX)
	PSRLQ $48, X7
	MOVO 816(AX), X13
	MOVO X13, X11
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X7
	PADDQ X7, X0
	MOVO X0, 896(BX)
	PSRLQ $42, X11
	MOVO 832(AX), X12
	MOVO X12, X15
	PSLLQ $22, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 912(BX)
	PSRLQ $36, X15
	MOVO 848(AX), X3
	MOVO X3, X4
	PSLLQ $28, X3
	PAND X1, X3
	POR X3, X15
	PADDQ X15, X0
	MOVO X0, 928(BX)
	PSRLQ $30, X4
	MOVO 864(AX), X14
	MOVO X14, X6
	PSLLQ $34, X14
	PAND X1, X14
	POR X14, X4
	PADDQ X4, X0
	MOVO X0, 944(BX)
	PSRLQ $24, X6
	MOVO 880(AX), X5
	MOVO X5, X8
	PSLLQ $40, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 960(BX)
	PSRLQ $18, X8
	MOVO 896(AX), X2
	MOVO X2, X10
	PSLLQ $46, X2
	PAND X1, X2
	POR X2, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $12, X10
	MOVO 912(AX), X9
	MOVO X9, X13
	PSLLQ $52, X9
	PAND X1, X9
	POR X9, X10
	PADDQ X10, X0
	MOVO X0, 992(BX)
	PSRLQ $6, X13
	PADDQ X13, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_59(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_59(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $576460752303423487, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $59, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $5, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $54, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $10, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $49, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $15, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $44, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $20, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $39, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $25, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $34, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $30, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $29, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $35, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $24, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $40, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	PSRLQ $19, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $45, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	PSRLQ $14, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLQ $50, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 160(BX)
	PSRLQ $9, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $55, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 176(BX)
	MOVO X13, X12
	PSRLQ $4, X13
	PAND X1, X13
	PADDQ X13, X0
	MOVO X0, 192(BX)
	PSRLQ $63, X12
	MOVO 192(AX), X15
	MOVO X15, X14
	PSLLQ $1, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 208(BX)
	PSRLQ $58, X14
	MOVO 208(AX), X3
	MOVO X3, X2
	PSLLQ $6, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 224(BX)
	PSRLQ $53, X2
	MOVO 224(AX), X4
	MOVO X4, X5
	PSLLQ $11, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X5
	MOVO 240(AX), X6
	MOVO X6, X7
	PSLLQ $16, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $43, X7
	MOVO 256(AX), X8
	MOVO X8, X9
	PSLLQ $21, X8
	PAND X1, X8
	POR X8, X7
	PADDQ X7, X0
	MOVO X0, 272(BX)
	PSRLQ $38, X9
	MOVO 272(AX), X10
	MOVO X10, X11
	PSLLQ $26, X10
	PAND X1, X10
	POR X10, X9
	PADDQ X9, X0
	MOVO X0, 288(BX)
	PSRLQ $33, X11
	MOVO 288(AX), X13
	MOVO X13, X15
	PSLLQ $31, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 304(BX)
	PSRLQ $28, X15
	MOVO 304(AX), X12
	MOVO X12, X3
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 320(BX)
	PSRLQ $23, X3
	MOVO 320(AX), X14
	MOVO X14, X4
	PSLLQ $41, X14
	PAND X1, X14
	POR X14, X3
	PADDQ X3, X0
	MOVO X0, 336(BX)
	PSRLQ $18, X4
	MOVO 336(AX), X2
	MOVO X2, X6
	PSLLQ $46, X2
	PAND X1, X2
	POR X2, X4
	PADDQ X4, X0
	MOVO X0, 352(BX)
	PSRLQ $13, X6
	MOVO 352(AX), X5
	MOVO X5, X8
	PSLLQ $51, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 368(BX)
	PSRLQ $8, X8
	MOVO 368(AX), X7
	MOVO X7, X10
	PSLLQ $56, X7
	PAND X1, X7
	POR X7, X8
	PADDQ X8, X0
	MOVO X0, 384(BX)
	MOVO X10, X9
	PSRLQ $3, X10
	PAND X1, X10
	PADDQ X10, X0
	MOVO X0, 400(BX)
	PSRLQ $62, X9
	MOVO 384(AX), X13
	MOVO X13, X11
	PSLLQ $2, X13
	PAND X1, X13
	POR X13, X9
	PADDQ X9, X0
	MOVO X0, 416(BX)
	PSRLQ $57, X11
	MOVO 400(AX), X12
	MOVO X12, X15
	PSLLQ $7, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 432(BX)
	PSRLQ $52, X15
	MOVO 416(AX), X14
	MOVO X14, X3
	PSLLQ $12, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 448(BX)
	PSRLQ $47, X3
	MOVO 432(AX), X2
	MOVO X2, X4
	PSLLQ $17, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 464(BX)
	PSRLQ $42, X4
	MOVO 448(AX), X5
	MOVO X5, X6
	PSLLQ $22, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 480(BX)
	PSRLQ $37, X6
	MOVO 464(AX), X7
	MOVO X7, X8
	PSLLQ $27, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X8
	MOVO 480(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 512(BX)
	PSRLQ $27, X13
	MOVO 496(AX), X9
	MOVO X9, X12
	PSLLQ $37, X9
	PAND X1, X9
	POR X9, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $22, X12
	MOVO 512(AX), X11
	MOVO X11, X14
	PSLLQ $42, X11
	PAND X1, X11
	POR X11, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $17, X14
	MOVO 528(AX), X15
	MOVO X15, X2
	PSLLQ $47, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	PSRLQ $12, X2
	MOVO 544(AX), X3
	MOVO X3, X5
	PSLLQ $52, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 576(BX)
	PSRLQ $7, X5
	MOVO 560(AX), X4
	MOVO X4, X7
	PSLLQ $57, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 592(BX)
	MOVO X7, X6
	PSRLQ $2, X7
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 608(BX)
	PSRLQ $61, X6
	MOVO 576(AX), X10
	MOVO X10, X8
	PSLLQ $3, X10
	PAND X1, X10
	POR X10, X6
	PADDQ X6, X0
	MOVO X0, 624(BX)
	PSRLQ $56, X8
	MOVO 592(AX), X9
	MOVO X9, X13
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 640(BX)
	PSRLQ $51, X13
	MOVO 608(AX), X11
	MOVO X11, X12
	PSLLQ $13, X11
	PAND X1, X11
	POR X11, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	PSRLQ $46, X12
	MOVO 624(AX), X15
	MOVO X15, X14
	PSLLQ $18, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 672(BX)
	PSRLQ $41, X14
	MOVO 640(AX), X3
	MOVO X3, X2
	PSLLQ $23, X3
	PAND X1, X3
	POR X3, X14
	PADDQ X14, X0
	MOVO X0, 688(BX)
	PSRLQ $36, X2
	MOVO 656(AX), X4
	MOVO X4, X5
	PSLLQ $28, X4
	PAND X1, X4
	POR X4, X2
	PADDQ X2, X0
	MOVO X0, 704(BX)
	PSRLQ $31, X5
	MOVO 672(AX), X7
	MOVO X7, X10
	PSLLQ $33, X7
	PAND X1, X7
	POR X7, X5
	PADDQ X5, X0
	MOVO X0, 720(BX)
	PSRLQ $26, X10
	MOVO 688(AX), X6
	MOVO X6, X9
	PSLLQ $38, X6
	PAND X1, X6
	POR X6, X10
	PADDQ X10, X0
	MOVO X0, 736(BX)
	PSRLQ $21, X9
	MOVO 704(AX), X8
	MOVO X8, X11
	PSLLQ $43, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X11
	MOVO 720(AX), X13
	MOVO X13, X15
	PSLLQ $48, X13
	PAND X1, X13
	POR X13, X11
	PADDQ X11, X0
	MOVO X0, 768(BX)
	PSRLQ $11, X15
	MOVO 736(AX), X12
	MOVO X12, X3
	PSLLQ $53, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 784(BX)
	PSRLQ $6, X3
	MOVO 752(AX), X14
	MOVO X14, X4
	PSLLQ $58, X14
	PAND X1, X14
	POR X14, X3
	PADDQ X3, X0
	MOVO X0, 800(BX)
	MOVO X4, X2
	PSRLQ $1, X4
	PAND X1, X4
	PADDQ X4, X0
	MOVO X0, 816(BX)
	PSRLQ $60, X2
	MOVO 768(AX), X7
	MOVO X7, X5
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	PSRLQ $55, X5
	MOVO 784(AX), X6
	MOVO X6, X10
	PSLLQ $9, X6
	PAND X1, X6
	POR X6, X5
	PADDQ X5, X0
	MOVO X0, 848(BX)
	PSRLQ $50, X10
	MOVO 800(AX), X8
	MOVO X8, X9
	PSLLQ $14, X8
	PAND X1, X8
	POR X8, X10
	PADDQ X10, X0
	MOVO X0, 864(BX)
	PSRLQ $45, X9
	MOVO 816(AX), X13
	MOVO X13, X11
	PSLLQ $19, X13
	PAND X1, X13
	POR X13, X9
	PADDQ X9, X0
	MOVO X0, 880(BX)
	PSRLQ $40, X11
	MOVO 832(AX), X12
	MOVO X12, X15
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X11
	PADDQ X11, X0
	MOVO X0, 896(BX)
	PSRLQ $35, X15
	MOVO 848(AX), X14
	MOVO X14, X3
	PSLLQ $29, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 912(BX)
	PSRLQ $30, X3
	MOVO 864(AX), X4
	MOVO X4, X7
	PSLLQ $34, X4
	PAND X1, X4
	POR X4, X3
	PADDQ X3, X0
	MOVO X0, 928(BX)
	PSRLQ $25, X7
	MOVO 880(AX), X2
	MOVO X2, X6
	PSLLQ $39, X2
	PAND X1, X2
	POR X2, X7
	PADDQ X7, X0
	MOVO X0, 944(BX)
	PSRLQ $20, X6
	MOVO 896(AX), X5
	MOVO X5, X8
	PSLLQ $44, X5
	PAND X1, X5
	POR X5, X6
	PADDQ X6, X0
	MOVO X0, 960(BX)
	PSRLQ $15, X8
	MOVO 912(AX), X10
	MOVO X10, X13
	PSLLQ $49, X10
	PAND X1, X10
	POR X10, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $10, X13
	MOVO 928(AX), X9
	MOVO X9, X12
	PSLLQ $54, X9
	PAND X1, X9
	POR X9, X13
	PADDQ X13, X0
	MOVO X0, 992(BX)
	PSRLQ $5, X12
	PADDQ X12, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_60(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_60(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $1152921504606846975, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $60, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $4, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $56, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $8, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $52, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $12, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $48, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $16, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $44, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $20, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $40, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $24, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $36, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $28, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $32, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $32, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	PSRLQ $28, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $36, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	PSRLQ $24, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLQ $40, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 160(BX)
	PSRLQ $20, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $44, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 176(BX)
	PSRLQ $16, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $48, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 192(BX)
	PSRLQ $12, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLQ $52, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 208(BX)
	PSRLQ $8, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $56, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $4, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO 240(AX), X5
	MOVO X5, X6
	PAND X1, X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	PSRLQ $60, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	PSRLQ $56, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 288(BX)
	PSRLQ $52, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 304(BX)
	PSRLQ $48, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $16, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 320(BX)
	PSRLQ $44, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLQ $20, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 336(BX)
	PSRLQ $40, X2
	MOVO 336(AX), X3
	MOVO X3, X4
	PSLLQ $24, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 352(BX)
	PSRLQ $36, X4
	MOVO 352(AX), X5
	MOVO X5, X7
	PSLLQ $28, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	PSRLQ $32, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLQ $32, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 384(BX)
	PSRLQ $28, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLQ $36, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 400(BX)
	PSRLQ $24, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLQ $40, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 416(BX)
	PSRLQ $20, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLQ $44, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 432(BX)
	PSRLQ $16, X15
	MOVO 432(AX), X14
	MOVO X14, X3
	PSLLQ $48, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 448(BX)
	PSRLQ $12, X3
	MOVO 448(AX), X2
	MOVO X2, X5
	PSLLQ $52, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 464(BX)
	PSRLQ $8, X5
	MOVO 464(AX), X4
	MOVO X4, X6
	PSLLQ $56, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	PSRLQ $4, X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 480(AX), X7
	MOVO X7, X8
	PAND X1, X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	PSRLQ $60, X8
	MOVO 496(AX), X9
	MOVO X9, X10
	PSLLQ $4, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	PSRLQ $56, X10
	MOVO 512(AX), X11
	MOVO X11, X12
	PSLLQ $8, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 544(BX)
	PSRLQ $52, X12
	MOVO 528(AX), X13
	MOVO X13, X14
	PSLLQ $12, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 560(BX)
	PSRLQ $48, X14
	MOVO 544(AX), X15
	MOVO X15, X2
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 576(BX)
	PSRLQ $44, X2
	MOVO 560(AX), X3
	MOVO X3, X4
	PSLLQ $20, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 592(BX)
	PSRLQ $40, X4
	MOVO 576(AX), X5
	MOVO X5, X6
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 608(BX)
	PSRLQ $36, X6
	MOVO 592(AX), X7
	MOVO X7, X9
	PSLLQ $28, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 624(BX)
	PSRLQ $32, X9
	MOVO 608(AX), X8
	MOVO X8, X11
	PSLLQ $32, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 640(BX)
	PSRLQ $28, X11
	MOVO 624(AX), X10
	MOVO X10, X13
	PSLLQ $36, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 656(BX)
	PSRLQ $24, X13
	MOVO 640(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 672(BX)
	PSRLQ $20, X15
	MOVO 656(AX), X14
	MOVO X14, X3
	PSLLQ $44, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 688(BX)
	PSRLQ $16, X3
	MOVO 672(AX), X2
	MOVO X2, X5
	PSLLQ $48, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	PSRLQ $12, X5
	MOVO 688(AX), X4
	MOVO X4, X7
	PSLLQ $52, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 720(BX)
	PSRLQ $8, X7
	MOVO 704(AX), X6
	MOVO X6, X8
	PSLLQ $56, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	PSRLQ $4, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO 720(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	PSRLQ $60, X10
	MOVO 736(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	PSRLQ $56, X12
	MOVO 752(AX), X13
	MOVO X13, X14
	PSLLQ $8, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 800(BX)
	PSRLQ $52, X14
	MOVO 768(AX), X15
	MOVO X15, X2
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 816(BX)
	PSRLQ $48, X2
	MOVO 784(AX), X3
	MOVO X3, X4
	PSLLQ $16, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 832(BX)
	PSRLQ $44, X4
	MOVO 800(AX), X5
	MOVO X5, X6
	PSLLQ $20, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 848(BX)
	PSRLQ $40, X6
	MOVO 816(AX), X7
	MOVO X7, X8
	PSLLQ $24, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 864(BX)
	PSRLQ $36, X8
	MOVO 832(AX), X9
	MOVO X9, X11
	PSLLQ $28, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 880(BX)
	PSRLQ $32, X11
	MOVO 848(AX), X10
	MOVO X10, X13
	PSLLQ $32, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 896(BX)
	PSRLQ $28, X13
	MOVO 864(AX), X12
	MOVO X12, X15
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 912(BX)
	PSRLQ $24, X15
	MOVO 880(AX), X14
	MOVO X14, X3
	PSLLQ $40, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 928(BX)
	PSRLQ $20, X3
	MOVO 896(AX), X2
	MOVO X2, X5
	PSLLQ $44, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 944(BX)
	PSRLQ $16, X5
	MOVO 912(AX), X4
	MOVO X4, X7
	PSLLQ $48, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 960(BX)
	PSRLQ $12, X7
	MOVO 928(AX), X6
	MOVO X6, X9
	PSLLQ $52, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 976(BX)
	PSRLQ $8, X9
	MOVO 944(AX), X8
	MOVO X8, X10
	PSLLQ $56, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	PSRLQ $4, X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_61(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_61(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $2305843009213693951, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $61, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $3, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $58, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $6, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $55, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $9, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $52, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $12, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $49, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $15, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $46, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $18, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $43, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $21, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $40, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $24, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	PSRLQ $37, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $27, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	PSRLQ $34, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLQ $30, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 160(BX)
	PSRLQ $31, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $33, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 176(BX)
	PSRLQ $28, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $36, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 192(BX)
	PSRLQ $25, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLQ $39, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 208(BX)
	PSRLQ $22, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $42, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $19, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLQ $45, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	PSRLQ $16, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLQ $48, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 256(BX)
	PSRLQ $13, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLQ $51, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 272(BX)
	PSRLQ $10, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLQ $54, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $7, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $57, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 304(BX)
	PSRLQ $4, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLQ $60, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	MOVO X2, X3
	PSRLQ $1, X2
	PAND X1, X2
	PADDQ X2, X0
	MOVO X0, 336(BX)
	PSRLQ $62, X3
	MOVO 336(AX), X5
	MOVO X5, X4
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 352(BX)
	PSRLQ $59, X4
	MOVO 352(AX), X7
	MOVO X7, X6
	PSLLQ $5, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 368(BX)
	PSRLQ $56, X6
	MOVO 368(AX), X9
	MOVO X9, X8
	PSLLQ $8, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 384(BX)
	PSRLQ $53, X8
	MOVO 384(AX), X11
	MOVO X11, X10
	PSLLQ $11, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 400(BX)
	PSRLQ $50, X10
	MOVO 400(AX), X13
	MOVO X13, X12
	PSLLQ $14, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 416(BX)
	PSRLQ $47, X12
	MOVO 416(AX), X15
	MOVO X15, X14
	PSLLQ $17, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 432(BX)
	PSRLQ $44, X14
	MOVO 432(AX), X2
	MOVO X2, X5
	PSLLQ $20, X2
	PAND X1, X2
	POR X2, X14
	PADDQ X14, X0
	MOVO X0, 448(BX)
	PSRLQ $41, X5
	MOVO 448(AX), X3
	MOVO X3, X7
	PSLLQ $23, X3
	PAND X1, X3
	POR X3, X5
	PADDQ X5, X0
	MOVO X0, 464(BX)
	PSRLQ $38, X7
	MOVO 464(AX), X4
	MOVO X4, X9
	PSLLQ $26, X4
	PAND X1, X4
	POR X4, X7
	PADDQ X7, X0
	MOVO X0, 480(BX)
	PSRLQ $35, X9
	MOVO 480(AX), X6
	MOVO X6, X11
	PSLLQ $29, X6
	PAND X1, X6
	POR X6, X9
	PADDQ X9, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X11
	MOVO 496(AX), X8
	MOVO X8, X13
	PSLLQ $32, X8
	PAND X1, X8
	POR X8, X11
	PADDQ X11, X0
	MOVO X0, 512(BX)
	PSRLQ $29, X13
	MOVO 512(AX), X10
	MOVO X10, X15
	PSLLQ $35, X10
	PAND X1, X10
	POR X10, X13
	PADDQ X13, X0
	MOVO X0, 528(BX)
	PSRLQ $26, X15
	MOVO 528(AX), X12
	MOVO X12, X2
	PSLLQ $38, X12
	PAND X1, X12
	POR X12, X15
	PADDQ X15, X0
	MOVO X0, 544(BX)
	PSRLQ $23, X2
	MOVO 544(AX), X14
	MOVO X14, X3
	PSLLQ $41, X14
	PAND X1, X14
	POR X14, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	PSRLQ $20, X3
	MOVO 560(AX), X5
	MOVO X5, X4
	PSLLQ $44, X5
	PAND X1, X5
	POR X5, X3
	PADDQ X3, X0
	MOVO X0, 576(BX)
	PSRLQ $17, X4
	MOVO 576(AX), X7
	MOVO X7, X6
	PSLLQ $47, X7
	PAND X1, X7
	POR X7, X4
	PADDQ X4, X0
	MOVO X0, 592(BX)
	PSRLQ $14, X6
	MOVO 592(AX), X9
	MOVO X9, X8
	PSLLQ $50, X9
	PAND X1, X9
	POR X9, X6
	PADDQ X6, X0
	MOVO X0, 608(BX)
	PSRLQ $11, X8
	MOVO 608(AX), X11
	MOVO X11, X10
	PSLLQ $53, X11
	PAND X1, X11
	POR X11, X8
	PADDQ X8, X0
	MOVO X0, 624(BX)
	PSRLQ $8, X10
	MOVO 624(AX), X13
	MOVO X13, X12
	PSLLQ $56, X13
	PAND X1, X13
	POR X13, X10
	PADDQ X10, X0
	MOVO X0, 640(BX)
	PSRLQ $5, X12
	MOVO 640(AX), X15
	MOVO X15, X14
	PSLLQ $59, X15
	PAND X1, X15
	POR X15, X12
	PADDQ X12, X0
	MOVO X0, 656(BX)
	MOVO X14, X2
	PSRLQ $2, X14
	PAND X1, X14
	PADDQ X14, X0
	MOVO X0, 672(BX)
	PSRLQ $63, X2
	MOVO 656(AX), X5
	MOVO X5, X3
	PSLLQ $1, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 688(BX)
	PSRLQ $60, X3
	MOVO 672(AX), X7
	MOVO X7, X4
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 704(BX)
	PSRLQ $57, X4
	MOVO 688(AX), X9
	MOVO X9, X6
	PSLLQ $7, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 720(BX)
	PSRLQ $54, X6
	MOVO 704(AX), X11
	MOVO X11, X8
	PSLLQ $10, X11
	PAND X1, X11
	POR X11, X6
	PADDQ X6, X0
	MOVO X0, 736(BX)
	PSRLQ $51, X8
	MOVO 720(AX), X13
	MOVO X13, X10
	PSLLQ $13, X13
	PAND X1, X13
	POR X13, X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	PSRLQ $48, X10
	MOVO 736(AX), X15
	MOVO X15, X12
	PSLLQ $16, X15
	PAND X1, X15
	POR X15, X10
	PADDQ X10, X0
	MOVO X0, 768(BX)
	PSRLQ $45, X12
	MOVO 752(AX), X14
	MOVO X14, X5
	PSLLQ $19, X14
	PAND X1, X14
	POR X14, X12
	PADDQ X12, X0
	MOVO X0, 784(BX)
	PSRLQ $42, X5
	MOVO 768(AX), X2
	MOVO X2, X7
	PSLLQ $22, X2
	PAND X1, X2
	POR X2, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	PSRLQ $39, X7
	MOVO 784(AX), X3
	MOVO X3, X9
	PSLLQ $25, X3
	PAND X1, X3
	POR X3, X7
	PADDQ X7, X0
	MOVO X0, 816(BX)
	PSRLQ $36, X9
	MOVO 800(AX), X4
	MOVO X4, X11
	PSLLQ $28, X4
	PAND X1, X4
	POR X4, X9
	PADDQ X9, X0
	MOVO X0, 832(BX)
	PSRLQ $33, X11
	MOVO 816(AX), X6
	MOVO X6, X13
	PSLLQ $31, X6
	PAND X1, X6
	POR X6, X11
	PADDQ X11, X0
	MOVO X0, 848(BX)
	PSRLQ $30, X13
	MOVO 832(AX), X8
	MOVO X8, X15
	PSLLQ $34, X8
	PAND X1, X8
	POR X8, X13
	PADDQ X13, X0
	MOVO X0, 864(BX)
	PSRLQ $27, X15
	MOVO 848(AX), X10
	MOVO X10, X14
	PSLLQ $37, X10
	PAND X1, X10
	POR X10, X15
	PADDQ X15, X0
	MOVO X0, 880(BX)
	PSRLQ $24, X14
	MOVO 864(AX), X12
	MOVO X12, X2
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X14
	PADDQ X14, X0
	MOVO X0, 896(BX)
	PSRLQ $21, X2
	MOVO 880(AX), X5
	MOVO X5, X3
	PSLLQ $43, X5
	PAND X1, X5
	POR X5, X2
	PADDQ X2, X0
	MOVO X0, 912(BX)
	PSRLQ $18, X3
	MOVO 896(AX), X7
	MOVO X7, X4
	PSLLQ $46, X7
	PAND X1, X7
	POR X7, X3
	PADDQ X3, X0
	MOVO X0, 928(BX)
	PSRLQ $15, X4
	MOVO 912(AX), X9
	MOVO X9, X6
	PSLLQ $49, X9
	PAND X1, X9
	POR X9, X4
	PADDQ X4, X0
	MOVO X0, 944(BX)
	PSRLQ $12, X6
	MOVO 928(AX), X11
	MOVO X11, X8
	PSLLQ $52, X11
	PAND X1, X11
	POR X11, X6
	PADDQ X6, X0
	MOVO X0, 960(BX)
	PSRLQ $9, X8
	MOVO 944(AX), X13
	MOVO X13, X10
	PSLLQ $55, X13
	PAND X1, X13
	POR X13, X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	PSRLQ $6, X10
	MOVO 960(AX), X15
	MOVO X15, X12
	PSLLQ $58, X15
	PAND X1, X15
	POR X15, X10
	PADDQ X10, X0
	MOVO X0, 992(BX)
	PSRLQ $3, X12
	PADDQ X12, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_62(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_62(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $4611686018427387903, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $62, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $2, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $60, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $4, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $58, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $6, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $56, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $8, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $54, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $10, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $52, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $12, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $50, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $14, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $48, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $16, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	PSRLQ $46, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $18, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	PSRLQ $44, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLQ $20, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 160(BX)
	PSRLQ $42, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $22, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 176(BX)
	PSRLQ $40, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $24, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 192(BX)
	PSRLQ $38, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLQ $26, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 208(BX)
	PSRLQ $36, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $28, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $34, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLQ $30, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	PSRLQ $32, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLQ $32, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 256(BX)
	PSRLQ $30, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLQ $34, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 272(BX)
	PSRLQ $28, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLQ $36, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $26, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $38, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 304(BX)
	PSRLQ $24, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLQ $40, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $22, X2
	MOVO 336(AX), X3
	MOVO X3, X5
	PSLLQ $42, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 336(BX)
	PSRLQ $20, X5
	MOVO 352(AX), X4
	MOVO X4, X7
	PSLLQ $44, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	PSRLQ $18, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLQ $46, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	PSRLQ $16, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLQ $48, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 384(BX)
	PSRLQ $14, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLQ $50, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 400(BX)
	PSRLQ $12, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLQ $52, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 416(BX)
	PSRLQ $10, X15
	MOVO 432(AX), X14
	MOVO X14, X3
	PSLLQ $54, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 432(BX)
	PSRLQ $8, X3
	MOVO 448(AX), X2
	MOVO X2, X4
	PSLLQ $56, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $6, X4
	MOVO 464(AX), X5
	MOVO X5, X6
	PSLLQ $58, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $4, X6
	MOVO 480(AX), X7
	MOVO X7, X8
	PSLLQ $60, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $2, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	MOVO 496(AX), X9
	MOVO X9, X10
	PAND X1, X9
	PADDQ X9, X0
	MOVO X0, 512(BX)
	PSRLQ $62, X10
	MOVO 512(AX), X11
	MOVO X11, X12
	PSLLQ $2, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 528(BX)
	PSRLQ $60, X12
	MOVO 528(AX), X13
	MOVO X13, X14
	PSLLQ $4, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 544(BX)
	PSRLQ $58, X14
	MOVO 544(AX), X15
	MOVO X15, X2
	PSLLQ $6, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 560(BX)
	PSRLQ $56, X2
	MOVO 560(AX), X3
	MOVO X3, X5
	PSLLQ $8, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 576(BX)
	PSRLQ $54, X5
	MOVO 576(AX), X4
	MOVO X4, X7
	PSLLQ $10, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 592(BX)
	PSRLQ $52, X7
	MOVO 592(AX), X6
	MOVO X6, X8
	PSLLQ $12, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 608(BX)
	PSRLQ $50, X8
	MOVO 608(AX), X9
	MOVO X9, X11
	PSLLQ $14, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 624(BX)
	PSRLQ $48, X11
	MOVO 624(AX), X10
	MOVO X10, X13
	PSLLQ $16, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 640(BX)
	PSRLQ $46, X13
	MOVO 640(AX), X12
	MOVO X12, X15
	PSLLQ $18, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 656(BX)
	PSRLQ $44, X15
	MOVO 656(AX), X14
	MOVO X14, X3
	PSLLQ $20, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 672(BX)
	PSRLQ $42, X3
	MOVO 672(AX), X2
	MOVO X2, X4
	PSLLQ $22, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 688(BX)
	PSRLQ $40, X4
	MOVO 688(AX), X5
	MOVO X5, X6
	PSLLQ $24, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 704(BX)
	PSRLQ $38, X6
	MOVO 704(AX), X7
	MOVO X7, X9
	PSLLQ $26, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	PSRLQ $36, X9
	MOVO 720(AX), X8
	MOVO X8, X10
	PSLLQ $28, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 736(BX)
	PSRLQ $34, X10
	MOVO 736(AX), X11
	MOVO X11, X12
	PSLLQ $30, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 752(BX)
	PSRLQ $32, X12
	MOVO 752(AX), X13
	MOVO X13, X14
	PSLLQ $32, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 768(BX)
	PSRLQ $30, X14
	MOVO 768(AX), X15
	MOVO X15, X2
	PSLLQ $34, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 784(BX)
	PSRLQ $28, X2
	MOVO 784(AX), X3
	MOVO X3, X5
	PSLLQ $36, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 800(BX)
	PSRLQ $26, X5
	MOVO 800(AX), X4
	MOVO X4, X7
	PSLLQ $38, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 816(BX)
	PSRLQ $24, X7
	MOVO 816(AX), X6
	MOVO X6, X8
	PSLLQ $40, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 832(BX)
	PSRLQ $22, X8
	MOVO 832(AX), X9
	MOVO X9, X11
	PSLLQ $42, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 848(BX)
	PSRLQ $20, X11
	MOVO 848(AX), X10
	MOVO X10, X13
	PSLLQ $44, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 864(BX)
	PSRLQ $18, X13
	MOVO 864(AX), X12
	MOVO X12, X15
	PSLLQ $46, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 880(BX)
	PSRLQ $16, X15
	MOVO 880(AX), X14
	MOVO X14, X3
	PSLLQ $48, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 896(BX)
	PSRLQ $14, X3
	MOVO 896(AX), X2
	MOVO X2, X4
	PSLLQ $50, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 912(BX)
	PSRLQ $12, X4
	MOVO 912(AX), X5
	MOVO X5, X6
	PSLLQ $52, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 928(BX)
	PSRLQ $10, X6
	MOVO 928(AX), X7
	MOVO X7, X9
	PSLLQ $54, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	PSRLQ $8, X9
	MOVO 944(AX), X8
	MOVO X8, X10
	PSLLQ $56, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 960(BX)
	PSRLQ $6, X10
	MOVO 960(AX), X11
	MOVO X11, X12
	PSLLQ $58, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 976(BX)
	PSRLQ $4, X12
	MOVO 976(AX), X13
	MOVO X13, X14
	PSLLQ $60, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 992(BX)
	PSRLQ $2, X14
	PADDQ X14, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_63(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_63(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $9223372036854775807, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	MOVO X3, X4
	PAND X1, X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	PSRLQ $63, X4
	MOVO 16(AX), X5
	MOVO X5, X6
	PSLLQ $1, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	PSRLQ $62, X6
	MOVO 32(AX), X7
	MOVO X7, X8
	PSLLQ $2, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 32(BX)
	PSRLQ $61, X8
	MOVO 48(AX), X9
	MOVO X9, X10
	PSLLQ $3, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 48(BX)
	PSRLQ $60, X10
	MOVO 64(AX), X11
	MOVO X11, X12
	PSLLQ $4, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 64(BX)
	PSRLQ $59, X12
	MOVO 80(AX), X13
	MOVO X13, X14
	PSLLQ $5, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 80(BX)
	PSRLQ $58, X14
	MOVO 96(AX), X15
	MOVO X15, X2
	PSLLQ $6, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 96(BX)
	PSRLQ $57, X2
	MOVO 112(AX), X3
	MOVO X3, X5
	PSLLQ $7, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 112(BX)
	PSRLQ $56, X5
	MOVO 128(AX), X4
	MOVO X4, X7
	PSLLQ $8, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 128(BX)
	PSRLQ $55, X7
	MOVO 144(AX), X6
	MOVO X6, X9
	PSLLQ $9, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 144(BX)
	PSRLQ $54, X9
	MOVO 160(AX), X8
	MOVO X8, X11
	PSLLQ $10, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 160(BX)
	PSRLQ $53, X11
	MOVO 176(AX), X10
	MOVO X10, X13
	PSLLQ $11, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 176(BX)
	PSRLQ $52, X13
	MOVO 192(AX), X12
	MOVO X12, X15
	PSLLQ $12, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 192(BX)
	PSRLQ $51, X15
	MOVO 208(AX), X14
	MOVO X14, X3
	PSLLQ $13, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 208(BX)
	PSRLQ $50, X3
	MOVO 224(AX), X2
	MOVO X2, X4
	PSLLQ $14, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	PSRLQ $49, X4
	MOVO 240(AX), X5
	MOVO X5, X6
	PSLLQ $15, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	PSRLQ $48, X6
	MOVO 256(AX), X7
	MOVO X7, X8
	PSLLQ $16, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 256(BX)
	PSRLQ $47, X8
	MOVO 272(AX), X9
	MOVO X9, X10
	PSLLQ $17, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 272(BX)
	PSRLQ $46, X10
	MOVO 288(AX), X11
	MOVO X11, X12
	PSLLQ $18, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 288(BX)
	PSRLQ $45, X12
	MOVO 304(AX), X13
	MOVO X13, X14
	PSLLQ $19, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 304(BX)
	PSRLQ $44, X14
	MOVO 320(AX), X15
	MOVO X15, X2
	PSLLQ $20, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 320(BX)
	PSRLQ $43, X2
	MOVO 336(AX), X3
	MOVO X3, X5
	PSLLQ $21, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 336(BX)
	PSRLQ $42, X5
	MOVO 352(AX), X4
	MOVO X4, X7
	PSLLQ $22, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 352(BX)
	PSRLQ $41, X7
	MOVO 368(AX), X6
	MOVO X6, X9
	PSLLQ $23, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 368(BX)
	PSRLQ $40, X9
	MOVO 384(AX), X8
	MOVO X8, X11
	PSLLQ $24, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 384(BX)
	PSRLQ $39, X11
	MOVO 400(AX), X10
	MOVO X10, X13
	PSLLQ $25, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 400(BX)
	PSRLQ $38, X13
	MOVO 416(AX), X12
	MOVO X12, X15
	PSLLQ $26, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 416(BX)
	PSRLQ $37, X15
	MOVO 432(AX), X14
	MOVO X14, X3
	PSLLQ $27, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 432(BX)
	PSRLQ $36, X3
	MOVO 448(AX), X2
	MOVO X2, X4
	PSLLQ $28, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	PSRLQ $35, X4
	MOVO 464(AX), X5
	MOVO X5, X6
	PSLLQ $29, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	PSRLQ $34, X6
	MOVO 480(AX), X7
	MOVO X7, X8
	PSLLQ $30, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 480(BX)
	PSRLQ $33, X8
	MOVO 496(AX), X9
	MOVO X9, X10
	PSLLQ $31, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 496(BX)
	PSRLQ $32, X10
	MOVO 512(AX), X11
	MOVO X11, X12
	PSLLQ $32, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 512(BX)
	PSRLQ $31, X12
	MOVO 528(AX), X13
	MOVO X13, X14
	PSLLQ $33, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 528(BX)
	PSRLQ $30, X14
	MOVO 544(AX), X15
	MOVO X15, X2
	PSLLQ $34, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 544(BX)
	PSRLQ $29, X2
	MOVO 560(AX), X3
	MOVO X3, X5
	PSLLQ $35, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 560(BX)
	PSRLQ $28, X5
	MOVO 576(AX), X4
	MOVO X4, X7
	PSLLQ $36, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 576(BX)
	PSRLQ $27, X7
	MOVO 592(AX), X6
	MOVO X6, X9
	PSLLQ $37, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 592(BX)
	PSRLQ $26, X9
	MOVO 608(AX), X8
	MOVO X8, X11
	PSLLQ $38, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 608(BX)
	PSRLQ $25, X11
	MOVO 624(AX), X10
	MOVO X10, X13
	PSLLQ $39, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 624(BX)
	PSRLQ $24, X13
	MOVO 640(AX), X12
	MOVO X12, X15
	PSLLQ $40, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 640(BX)
	PSRLQ $23, X15
	MOVO 656(AX), X14
	MOVO X14, X3
	PSLLQ $41, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 656(BX)
	PSRLQ $22, X3
	MOVO 672(AX), X2
	MOVO X2, X4
	PSLLQ $42, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	PSRLQ $21, X4
	MOVO 688(AX), X5
	MOVO X5, X6
	PSLLQ $43, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	PSRLQ $20, X6
	MOVO 704(AX), X7
	MOVO X7, X8
	PSLLQ $44, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 704(BX)
	PSRLQ $19, X8
	MOVO 720(AX), X9
	MOVO X9, X10
	PSLLQ $45, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 720(BX)
	PSRLQ $18, X10
	MOVO 736(AX), X11
	MOVO X11, X12
	PSLLQ $46, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 736(BX)
	PSRLQ $17, X12
	MOVO 752(AX), X13
	MOVO X13, X14
	PSLLQ $47, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 752(BX)
	PSRLQ $16, X14
	MOVO 768(AX), X15
	MOVO X15, X2
	PSLLQ $48, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 768(BX)
	PSRLQ $15, X2
	MOVO 784(AX), X3
	MOVO X3, X5
	PSLLQ $49, X3
	PAND X1, X3
	POR X3, X2
	PADDQ X2, X0
	MOVO X0, 784(BX)
	PSRLQ $14, X5
	MOVO 800(AX), X4
	MOVO X4, X7
	PSLLQ $50, X4
	PAND X1, X4
	POR X4, X5
	PADDQ X5, X0
	MOVO X0, 800(BX)
	PSRLQ $13, X7
	MOVO 816(AX), X6
	MOVO X6, X9
	PSLLQ $51, X6
	PAND X1, X6
	POR X6, X7
	PADDQ X7, X0
	MOVO X0, 816(BX)
	PSRLQ $12, X9
	MOVO 832(AX), X8
	MOVO X8, X11
	PSLLQ $52, X8
	PAND X1, X8
	POR X8, X9
	PADDQ X9, X0
	MOVO X0, 832(BX)
	PSRLQ $11, X11
	MOVO 848(AX), X10
	MOVO X10, X13
	PSLLQ $53, X10
	PAND X1, X10
	POR X10, X11
	PADDQ X11, X0
	MOVO X0, 848(BX)
	PSRLQ $10, X13
	MOVO 864(AX), X12
	MOVO X12, X15
	PSLLQ $54, X12
	PAND X1, X12
	POR X12, X13
	PADDQ X13, X0
	MOVO X0, 864(BX)
	PSRLQ $9, X15
	MOVO 880(AX), X14
	MOVO X14, X3
	PSLLQ $55, X14
	PAND X1, X14
	POR X14, X15
	PADDQ X15, X0
	MOVO X0, 880(BX)
	PSRLQ $8, X3
	MOVO 896(AX), X2
	MOVO X2, X4
	PSLLQ $56, X2
	PAND X1, X2
	POR X2, X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	PSRLQ $7, X4
	MOVO 912(AX), X5
	MOVO X5, X6
	PSLLQ $57, X5
	PAND X1, X5
	POR X5, X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	PSRLQ $6, X6
	MOVO 928(AX), X7
	MOVO X7, X8
	PSLLQ $58, X7
	PAND X1, X7
	POR X7, X6
	PADDQ X6, X0
	MOVO X0, 928(BX)
	PSRLQ $5, X8
	MOVO 944(AX), X9
	MOVO X9, X10
	PSLLQ $59, X9
	PAND X1, X9
	POR X9, X8
	PADDQ X8, X0
	MOVO X0, 944(BX)
	PSRLQ $4, X10
	MOVO 960(AX), X11
	MOVO X11, X12
	PSLLQ $60, X11
	PAND X1, X11
	POR X11, X10
	PADDQ X10, X0
	MOVO X0, 960(BX)
	PSRLQ $3, X12
	MOVO 976(AX), X13
	MOVO X13, X14
	PSLLQ $61, X13
	PAND X1, X13
	POR X13, X12
	PADDQ X12, X0
	MOVO X0, 976(BX)
	PSRLQ $2, X14
	MOVO 992(AX), X15
	MOVO X15, X2
	PSLLQ $62, X15
	PAND X1, X15
	POR X15, X14
	PADDQ X14, X0
	MOVO X0, 992(BX)
	PSRLQ $1, X2
	PADDQ X2, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET

// func dunpack64_64(in *uint8, out *uint, offset int, seed *uint8)
TEXT ·dunpack64_64(SB),4,$0-32
	MOVQ in+0(FP), AX
	MOVQ out+8(FP), BX
	MOVQ offset+16(FP), CX
	SHLQ $3, CX
	ADDQ CX, BX
	MOVQ seed+24(FP), DX
	MOVO 0(DX), X0
	MOVQ $18446744073709551615, SI
	MOVQ SI, X2
	PSHUFL $68, X2, X1
	MOVO 0(AX), X3
	PADDQ X3, X0
	MOVO X0, 0(BX)
	MOVO 16(AX), X4
	PADDQ X4, X0
	MOVO X0, 16(BX)
	MOVO 32(AX), X5
	PADDQ X5, X0
	MOVO X0, 32(BX)
	MOVO 48(AX), X6
	PADDQ X6, X0
	MOVO X0, 48(BX)
	MOVO 64(AX), X7
	PADDQ X7, X0
	MOVO X0, 64(BX)
	MOVO 80(AX), X8
	PADDQ X8, X0
	MOVO X0, 80(BX)
	MOVO 96(AX), X9
	PADDQ X9, X0
	MOVO X0, 96(BX)
	MOVO 112(AX), X10
	PADDQ X10, X0
	MOVO X0, 112(BX)
	MOVO 128(AX), X11
	PADDQ X11, X0
	MOVO X0, 128(BX)
	MOVO 144(AX), X12
	PADDQ X12, X0
	MOVO X0, 144(BX)
	MOVO 160(AX), X13
	PADDQ X13, X0
	MOVO X0, 160(BX)
	MOVO 176(AX), X14
	PADDQ X14, X0
	MOVO X0, 176(BX)
	MOVO 192(AX), X15
	PADDQ X15, X0
	MOVO X0, 192(BX)
	MOVO 208(AX), X2
	PADDQ X2, X0
	MOVO X0, 208(BX)
	MOVO 224(AX), X3
	PADDQ X3, X0
	MOVO X0, 224(BX)
	MOVO 240(AX), X4
	PADDQ X4, X0
	MOVO X0, 240(BX)
	MOVO 256(AX), X5
	PADDQ X5, X0
	MOVO X0, 256(BX)
	MOVO 272(AX), X6
	PADDQ X6, X0
	MOVO X0, 272(BX)
	MOVO 288(AX), X7
	PADDQ X7, X0
	MOVO X0, 288(BX)
	MOVO 304(AX), X8
	PADDQ X8, X0
	MOVO X0, 304(BX)
	MOVO 320(AX), X9
	PADDQ X9, X0
	MOVO X0, 320(BX)
	MOVO 336(AX), X10
	PADDQ X10, X0
	MOVO X0, 336(BX)
	MOVO 352(AX), X11
	PADDQ X11, X0
	MOVO X0, 352(BX)
	MOVO 368(AX), X12
	PADDQ X12, X0
	MOVO X0, 368(BX)
	MOVO 384(AX), X13
	PADDQ X13, X0
	MOVO X0, 384(BX)
	MOVO 400(AX), X14
	PADDQ X14, X0
	MOVO X0, 400(BX)
	MOVO 416(AX), X15
	PADDQ X15, X0
	MOVO X0, 416(BX)
	MOVO 432(AX), X2
	PADDQ X2, X0
	MOVO X0, 432(BX)
	MOVO 448(AX), X3
	PADDQ X3, X0
	MOVO X0, 448(BX)
	MOVO 464(AX), X4
	PADDQ X4, X0
	MOVO X0, 464(BX)
	MOVO 480(AX), X5
	PADDQ X5, X0
	MOVO X0, 480(BX)
	MOVO 496(AX), X6
	PADDQ X6, X0
	MOVO X0, 496(BX)
	MOVO 512(AX), X7
	PADDQ X7, X0
	MOVO X0, 512(BX)
	MOVO 528(AX), X8
	PADDQ X8, X0
	MOVO X0, 528(BX)
	MOVO 544(AX), X9
	PADDQ X9, X0
	MOVO X0, 544(BX)
	MOVO 560(AX), X10
	PADDQ X10, X0
	MOVO X0, 560(BX)
	MOVO 576(AX), X11
	PADDQ X11, X0
	MOVO X0, 576(BX)
	MOVO 592(AX), X12
	PADDQ X12, X0
	MOVO X0, 592(BX)
	MOVO 608(AX), X13
	PADDQ X13, X0
	MOVO X0, 608(BX)
	MOVO 624(AX), X14
	PADDQ X14, X0
	MOVO X0, 624(BX)
	MOVO 640(AX), X15
	PADDQ X15, X0
	MOVO X0, 640(BX)
	MOVO 656(AX), X2
	PADDQ X2, X0
	MOVO X0, 656(BX)
	MOVO 672(AX), X3
	PADDQ X3, X0
	MOVO X0, 672(BX)
	MOVO 688(AX), X4
	PADDQ X4, X0
	MOVO X0, 688(BX)
	MOVO 704(AX), X5
	PADDQ X5, X0
	MOVO X0, 704(BX)
	MOVO 720(AX), X6
	PADDQ X6, X0
	MOVO X0, 720(BX)
	MOVO 736(AX), X7
	PADDQ X7, X0
	MOVO X0, 736(BX)
	MOVO 752(AX), X8
	PADDQ X8, X0
	MOVO X0, 752(BX)
	MOVO 768(AX), X9
	PADDQ X9, X0
	MOVO X0, 768(BX)
	MOVO 784(AX), X10
	PADDQ X10, X0
	MOVO X0, 784(BX)
	MOVO 800(AX), X11
	PADDQ X11, X0
	MOVO X0, 800(BX)
	MOVO 816(AX), X12
	PADDQ X12, X0
	MOVO X0, 816(BX)
	MOVO 832(AX), X13
	PADDQ X13, X0
	MOVO X0, 832(BX)
	MOVO 848(AX), X14
	PADDQ X14, X0
	MOVO X0, 848(BX)
	MOVO 864(AX), X15
	PADDQ X15, X0
	MOVO X0, 864(BX)
	MOVO 880(AX), X2
	PADDQ X2, X0
	MOVO X0, 880(BX)
	MOVO 896(AX), X3
	PADDQ X3, X0
	MOVO X0, 896(BX)
	MOVO 912(AX), X4
	PADDQ X4, X0
	MOVO X0, 912(BX)
	MOVO 928(AX), X5
	PADDQ X5, X0
	MOVO X0, 928(BX)
	MOVO 944(AX), X6
	PADDQ X6, X0
	MOVO X0, 944(BX)
	MOVO 960(AX), X7
	PADDQ X7, X0
	MOVO X0, 960(BX)
	MOVO 976(AX), X8
	PADDQ X8, X0
	MOVO X0, 976(BX)
	MOVO 992(AX), X9
	PADDQ X9, X0
	MOVO X0, 992(BX)
	MOVO 1008(AX), X10
	PADDQ X10, X0
	MOVO X0, 1008(BX)
	MOVO X0, 0(DX)
	RET
