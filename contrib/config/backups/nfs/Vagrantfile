# -*- mode: ruby -*-
# vi: set ft=ruby :
eval File.read("./vagrant/helper.rb")

Vagrant.configure("2") do |config|
  @hosts.each do |hostname, ipaddr|
    primary = hostname == @primary
    autostart = @starts.include? hostname
    config.vm.define hostname, autostart: autostart, primary: primary do |node|
      node.vm.box = "generic/ubuntu1804"
      node.vm.hostname = "#{hostname}"
      node.vm.network "private_network", ip: ipaddr
      node.vm.synced_folder ".", "/vagrant"

      ## virtualbox/windows - alternative synced_folder option
      node.vm.provider "virtualbox" do |vbox, override|
        vbox.name = "#{hostname}"
        ## enable SMB3.0 for better fileshare UX on Windows-Virtualbox
        if Vagrant::Util::Platform.windows? then
          override.vm.synced_folder  ".", "/vagrant", @smb_sync_opts
        end
      end

      ## hyperv - alternative synced_foler option
      node.vm.provider "hyperv" do |hyperv, override|
        hyperv.vmname = "#{hostname}"
        ## enable SMB3.0 for better fileshare UX on Windows-HyperV
        override.vm.synced_folder  ".", "/vagrant", @smb_sync_opts
      end

      ## Provision nfs-server and nfs-client
      node.vm.provision "shell" do |shell|
        shell.path = "./vagrant/provision.sh"
        shell.privileged = true
        shell.env = {
          INSTALL_DOCKER: "true",
          INSTALL_COMPOSE: "true"
        }
      end

      ## Configure Host 'env.sh' on host system
      ##  This is required if nfs-server is only used and client is on the host
      node.trigger.after :up do |trigger|
        trigger.name = "Configure host 'env.sh'"
        trigger.ruby do |env,machine|
          File.open('env.sh', 'w') do |file|
            file << <<~HEREDOC
              ## Configuration generated by Vagrant
              export NFS_PATH="/srv/share"
              export NFS_SERVER="#{ipaddr}"
            HEREDOC
          end
        end
      end
    end
  end
end
