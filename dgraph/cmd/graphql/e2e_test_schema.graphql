type Country {
        id: ID!
        name: String! @search(by: [trigram, hash])
}

type Author {
        id: ID!
        name: String! @search(by: [hash, trigram])
        dob: DateTime @search
        reputation: Float @search
        country: Country
        posts: [Post!] @hasInverse(field: author)
}

type Post {
        postID: ID!
        title: String! @search(by: [term, fulltext])
        text: String @search(by: [fulltext])
        tags: [String] @search(by: [exact])
        topic: String @search(by: [exact])
        numLikes: Int @search
        isPublished: Boolean @search
        postType: PostType @search
        author: Author! @hasInverse(field: posts)
}

enum PostType {
        Fact
        Question
        Opinion
}

interface Employee {
        ename: String!
}

interface Character {
        id: ID!
        name: String! @search(by: [exact])
        appearsIn: [Episode!] @search
}

type Human implements Character & Employee {
        starships: [Starship]
        totalCredits: Float
}

type Droid implements Character {
        primaryFunction: String
}

enum Episode {
        NEWHOPE
        EMPIRE
        JEDI
}

type Starship {
        id: ID!
        name: String! @search(by: [term])
        length: Float
}
