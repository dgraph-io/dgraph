#######################
# Generated Types
#######################
type AddAuthorPayload {
	author: Author!
}

type AddPostPayload {
	post: Post!
}

type Author {
	id: ID!
	posts: [Post!]! @hasInverse(field: "author")
}

type DeleteAuthorPayload {
	msg: String!
}

type DeletePostPayload {
	msg: String!
}

type Post {
	id: ID!
	author: Author! @hasInverse(field: "posts")
}

type UpdateAuthorPayload {
	author: Author!
}

type UpdatePostPayload {
	post: Post!
}

#######################
# Scalar Definitions
#######################
scalar Boolean
scalar DateTime
scalar Float
scalar ID
scalar Int
scalar String
#######################
# Enum Definitions
#######################
#######################
# Input Definitions
#######################
input AuthorFilter {
	dgraph: String
}

input AuthorInput {
	posts: [PostRef!]!
}

input AuthorRef {
	id: ID!
}

input UpdateAuthorInput {
	id: ID!
	patch: PatchAuthor!
}

input PatchAuthor {
	posts: [PostRef!]
}

input PatchPost {
	author: AuthorRef
}

input PostFilter {
	dgraph: String
}

input PostInput {
	author: AuthorRef!
}

input PostRef {
	id: ID!
}

input UpdatePostInput {
	id: ID!
	patch: PatchPost!
}

#######################
# Generated Query
#######################
type Query {
	getPost(id: ID!): Post!
	queryPost(filter: PostFilter!): [Post!]!
	getAuthor(id: ID!): Author!
	queryAuthor(filter: AuthorFilter!): [Author!]!
}
#######################
# Generated Mutations
#######################
type Mutation {
	addPost(input: PostInput!): AddPostPayload!
	updatePost(input: UpdatePostInput!): UpdatePostPayload
	deletePost(id: ID!): DeletePostPayload!
	addAuthor(input: AuthorInput!): AddAuthorPayload!
	updateAuthor(input: UpdateAuthorInput!): UpdateAuthorPayload
	deleteAuthor(id: ID!): DeleteAuthorPayload!
}
