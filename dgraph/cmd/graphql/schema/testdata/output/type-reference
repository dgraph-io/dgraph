#######################
# Input Schema
#######################

type Post {
	id: ID!
	title: String!
	text: String
	author: Author!
}

type Author {
	id: ID!
	name: String!
}

#######################
# Extended Definitions
#######################

scalar Boolean
scalar DateTime
scalar Float
scalar ID
scalar Int
scalar String

directive @hasInverse(field: String!) on FIELD_DEFINITION

#######################
# Generated Types
#######################

type AddAuthorPayload {
	author: Author
}

type AddPostPayload {
	post: Post
}

type DeleteAuthorPayload {
	msg: String
}

type DeletePostPayload {
	msg: String
}

type UpdateAuthorPayload {
	author: Author
}

type UpdatePostPayload {
	post: Post
}

#######################
# Generated Inputs
#######################

input AuthorFilter {
	dgraph: String
}

input AuthorInput {
	name: String!
}

input AuthorRef {
	id: ID!
}

input PatchAuthor {
	name: String
}

input PatchPost {
	title: String
	text: String
	author: AuthorRef
}

input PostFilter {
	dgraph: String
}

input PostInput {
	title: String!
	text: String
	author: AuthorRef!
}

input PostRef {
	id: ID!
}

input UpdateAuthorInput {
	id: ID!
	patch: PatchAuthor!
}

input UpdatePostInput {
	id: ID!
	patch: PatchPost!
}

#######################
# Generated Query
#######################

type Query {
	getPost(id: ID!): Post
	queryPost(filter: PostFilter!): [Post!]
	getAuthor(id: ID!): Author
	queryAuthor(filter: AuthorFilter!): [Author!]
}

#######################
# Generated Mutations
#######################

type Mutation {
	addPost(input: PostInput!): AddPostPayload
	updatePost(input: UpdatePostInput!): UpdatePostPayload
	deletePost(id: ID!): DeletePostPayload
	addAuthor(input: AuthorInput!): AddAuthorPayload
	updateAuthor(input: UpdateAuthorInput!): UpdateAuthorPayload
	deleteAuthor(id: ID!): DeleteAuthorPayload
}
