#######################
# Input Schema
#######################

type Post {
	id: ID!
	author: Author! @hasInverse(field: "posts")
}

type Author {
	id: ID!
	posts(first: Int, offset: Int): [Post!]! @hasInverse(field: "author")
}

#######################
# Extended Definitions
#######################

scalar DateTime

enum DgraphIndex {
	int
	float
	bool
	hash
	exact
	term
	fulltext
	trigram
	year
	month
	day
	hour
}

directive @hasInverse(field: String!) on FIELD_DEFINITION
directive @searchable(by: DgraphIndex!) on FIELD_DEFINITION

input IntFilter {
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
}

input FloatFilter {
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
}

input DateTimeFilter {
	eq: DateTime
	le: DateTime
	lt: DateTime
	ge: DateTime
	gt: DateTime
}

input StringTermFilter {
	allofterms: String
	anyofterms: String
}

input StringRegExpFilter {
	regexp: String
}

input StringFullTextFilter {
	alloftext: String
	anyoftext: String
}

input StringExactFilter {
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
}

input StringHashFilter {
	eq: String
}

#######################
# Generated Types
#######################

type AddAuthorPayload {
	author: Author
}

type AddPostPayload {
	post: Post
}

type DeleteAuthorPayload {
	msg: String
}

type DeletePostPayload {
	msg: String
}

type UpdateAuthorPayload {
	author: Author
}

type UpdatePostPayload {
	post: Post
}

#######################
# Generated Enums
#######################

#######################
# Generated Inputs
#######################

input AuthorInput {
	posts: [PostRef!]!
}

input AuthorRef {
	id: ID!
}

input PatchAuthor {
	posts: [PostRef!]
}

input PatchPost {
	author: AuthorRef
}

input PostInput {
	author: AuthorRef!
}

input PostRef {
	id: ID!
}

input UpdateAuthorInput {
	id: ID!
	patch: PatchAuthor!
}

input UpdatePostInput {
	id: ID!
	patch: PatchPost!
}

#######################
# Generated Query
#######################

type Query {
	getPost(id: ID!): Post
	queryPost(first: Int, offset: Int): [Post]
	getAuthor(id: ID!): Author
	queryAuthor(first: Int, offset: Int): [Author]
}

#######################
# Generated Mutations
#######################

type Mutation {
	addPost(input: PostInput!): AddPostPayload
	updatePost(input: UpdatePostInput!): UpdatePostPayload
	deletePost(id: ID!): DeletePostPayload
	addAuthor(input: AuthorInput!): AddAuthorPayload
	updateAuthor(input: UpdateAuthorInput!): UpdateAuthorPayload
	deleteAuthor(id: ID!): DeleteAuthorPayload
}
