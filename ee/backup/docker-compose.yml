# Docker compose file for testing. Use it with:
# docker-compose up --force-recreate
# This would pick up dgraph binary from $GOPATH.
#
# NOTE: Env var UID must be exported by the shell
#
version: "3.5"
services:
  zero1:
    image: dgraph/dgraph:latest
    container_name: bank-dg0.1
    labels:
      cluster: test
    ports:
      - 5080:5080
      - 6080:6080
    command: /gobin/dgraph --cwd=/data/dg0.1 zero --my=zero1:5080 --bindall --logtostderr -v=0
    user: ${UID:-0}
    volumes:
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
      - type: bind
        source: $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/data
        target: /data

  dg1:
    image: dgraph/dgraph:latest
    container_name: bank-dg1
    env_file:
      - $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/backup.env
    labels:
      cluster: test
    user: ${UID:-0}
    volumes:
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
      - type: bind
        source: $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/data
        target: /data
    ports:
      - 8180:8180
      - 9180:9180
    command: /gobin/dgraph alpha --cwd=/data/dg1 --my=dg1:7180 --lru_mb=1024 --zero=zero1:5080 -o 100 -v=0 --enterprise_features --whitelist 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

  dg2:
    image: dgraph/dgraph:latest
    container_name: bank-dg2
    env_file:
      - $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/backup.env
    labels:
      cluster: test
    depends_on:
      - dg1
    user: ${UID:-0}
    volumes:
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
      - type: bind
        source: $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/data
        target: /data
    ports:
      - 8182:8182
      - 9182:9182
    command: /gobin/dgraph alpha --cwd=/data/dg2 --my=dg2:7182 --lru_mb=1024 --zero=zero1:5080 -o 102 -v=0 --enterprise_features --whitelist 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

  dg3:
    image: dgraph/dgraph:latest
    container_name: bank-dg3
    env_file:
      - $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/backup.env
    labels:
      cluster: test
    depends_on:
      - dg2
    user: ${UID:-0}
    volumes:
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
      - type: bind
        source: $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/data
        target: /data
    ports:
      - 8183:8183
      - 9183:9183
    command: /gobin/dgraph alpha --cwd=/data/dg3 --my=dg3:7183 --lru_mb=1024 --zero=zero1:5080 -o 103 -v=0 --enterprise_features --whitelist 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

  minio1:
    image: minio/minio:latest
    container_name: minio1
    env_file:
      - $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/backup.env
    working_dir: $GOPATH/src/github.com/dgraph-io/dgraph/ee/backup/data/minio
    ports:
      - 9001:9001
    labels:
      cluster: test
    command: minio server /data/minio --address :9001
