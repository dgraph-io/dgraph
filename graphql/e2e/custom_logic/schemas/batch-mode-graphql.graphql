type Car @remote {
  id: ID!
  name: String!
}

type User {
  id: ID!
  name: String
    @custom(
      http: {
        url: "http://mock:8888/gqlUserNames"
        method: "POST"
        operation: "batch"
      }
      graphql: { query: "userNames(ids: $id)" }
    )
  age: Int! @search
  cars: Car
    @custom(
      http: {
        url: "http://mock:8888/gqlCars"
        method: "POST"
        operation: "batch"
      }
      graphql: { query: "cars(ids: $id)" }
    )
  schools: [School]
}

type School {
  id: ID!
  established: Int! @search
  name: String
    @custom(
      http: {
        url: "http://mock:8888/gqlSchoolNames"
        method: "POST"
        operation: "batch"
      }
      graphql: { query: "schoolNames(ids: $id)" }
    )
  classes: [Class]
    @custom(
      http: {
        url: "http://mock:8888/gqlClasses"
        method: "POST"
        operation: "batch"
      }
      graphql: { query: "classes(ids: $id)" }
    )
  teachers: [Teacher]
}

type Class @remote {
  id: ID!
  name: String!
}

type Teacher {
  tid: ID!
  age: Int!
  name: String
    @custom(
      http: {
        url: "http://mock:8888/gqlTeacherNames"
        method: "POST"
        operation: "batch"
      }
      graphql: { query: "teacherNames(ids: $tid)" }
    )
}