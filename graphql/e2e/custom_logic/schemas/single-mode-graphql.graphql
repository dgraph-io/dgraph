type Car @remote {
  id: ID!
  name: String!
}

type User {
  id: ID!
  name: String
    @custom(
      http: {
        url: "http://mock:8888/gqlUserName"
        method: "POST"
        mode: SINGLE
        graphql: "query($id: ID!) { userName(id: $id)}"
      }
    )
  age: Int! @search
  cars: Car
    @custom(
      http: {
        url: "http://mock:8888/gqlCar"
        method: "POST"
        mode: SINGLE
        graphql: "query($id: ID!) { car(id: $id)}"
      }
    )
  schools: [School]
}

type School {
  id: ID!
  established: Int! @search
  name: String
    @custom(
      http: {
        url: "http://mock:8888/gqlSchoolName"
        method: "POST"
        mode: SINGLE
        graphql: "query($id: ID!) { schoolName(id: $id) }"
      }
    )
  classes: [Class]
    @custom(
      http: {
        url: "http://mock:8888/gqlClass"
        method: "POST"
        mode: SINGLE
        graphql: "query($id: ID!) { class(id: $id) }"
      }
    )
  teachers: [Teacher]
}

type Class @remote {
  id: ID!
  name: String!
}

type Teacher {
  tid: ID!
  age: Int!
  name: String
    @custom(
      http: {
        url: "http://mock:8888/gqlTeacherName"
        method: "POST"
        mode: SINGLE
        graphql: "query($tid: ID!) { teacherName(id: $tid) }"
      }
    )
}
