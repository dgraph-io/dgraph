{
    "_service": {
      "sdl": "#######################\n# Input Schema\n#######################\n\ntype Todo @key(fields: \"id\") {\n\tid: ID!\n\tname: String!\n}\n\n#######################\n# Extended Definitions\n#######################\n\n\"\"\"\nThe Int64 scalar type represents a signed 64‐bit numeric non‐fractional value.\nInt64 can represent values in range [-(2^63),(2^63 - 1)].\n\"\"\"\nscalar Int64\n\n\"\"\"\nThe DateTime scalar type represents date and time as a string in RFC3339 format.\nFor example: \"1985-04-12T23:20:50.52Z\" represents 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC.\n\"\"\"\nscalar DateTime\n\ninput IntRange{\n\tmin: Int!\n\tmax: Int!\n}\n\ninput FloatRange{\n\tmin: Float!\n\tmax: Float!\n}\n\ninput Int64Range{\n\tmin: Int64!\n\tmax: Int64!\n}\n\ninput DateTimeRange{\n\tmin: DateTime!\n\tmax: DateTime!\n}\n\ninput StringRange{\n\tmin: String!\n\tmax: String!\n}\n\nenum DgraphIndex {\n\tint\n\tint64\n\tfloat\n\tbool\n\thash\n\texact\n\tterm\n\tfulltext\n\ttrigram\n\tregexp\n\tyear\n\tmonth\n\tday\n\thour\n\tgeo\n}\n\ninput AuthRule {\n\tand: [AuthRule]\n\tor: [AuthRule]\n\tnot: AuthRule\n\trule: String\n}\n\nenum HTTPMethod {\n\tGET\n\tPOST\n\tPUT\n\tPATCH\n\tDELETE\n}\n\nenum Mode {\n\tBATCH\n\tSINGLE\n}\n\ninput CustomHTTP {\n\turl: String!\n\tmethod: HTTPMethod!\n\tbody: String\n\tgraphql: String\n\tmode: Mode\n\tforwardHeaders: [String!]\n\tsecretHeaders: [String!]\n\tintrospectionHeaders: [String!]\n\tskipIntrospection: Boolean\n}\n\ntype Point {\n\tlongitude: Float!\n\tlatitude: Float!\n}\n\ninput PointRef {\n\tlongitude: Float!\n\tlatitude: Float!\n}\n\ninput NearFilter {\n\tdistance: Float!\n\tcoordinate: PointRef!\n}\n\ninput PointGeoFilter {\n\tnear: NearFilter\n\twithin: WithinFilter\n}\n\ntype PointList {\n\tpoints: [Point!]!\n}\n\ninput PointListRef {\n\tpoints: [PointRef!]!\n}\n\ntype Polygon {\n\tcoordinates: [PointList!]!\n}\n\ninput PolygonRef {\n\tcoordinates: [PointListRef!]!\n}\n\ntype MultiPolygon {\n\tpolygons: [Polygon!]!\n}\n\ninput MultiPolygonRef {\n\tpolygons: [PolygonRef!]!\n}\n\ninput WithinFilter {\n\tpolygon: PolygonRef!\n}\n\ninput ContainsFilter {\n\tpoint: PointRef\n\tpolygon: PolygonRef\n}\n\ninput IntersectsFilter {\n\tpolygon: PolygonRef\n\tmultiPolygon: MultiPolygonRef\n}\n\ninput PolygonGeoFilter {\n\tnear: NearFilter\n\twithin: WithinFilter\n\tcontains: ContainsFilter\n\tintersects: IntersectsFilter\n}\n\ninput GenerateQueryParams {\n\tget: Boolean\n\tquery: Boolean\n\tpassword: Boolean\n\taggregate: Boolean\n}\n\ninput GenerateMutationParams {\n\tadd: Boolean\n\tupdate: Boolean\n\tdelete: Boolean\n}\n\ndirective @hasInverse(field: String!) on FIELD_DEFINITION\ndirective @search(by: [DgraphIndex!]) on FIELD_DEFINITION\ndirective @dgraph(type: String, pred: String) on OBJECT | INTERFACE | FIELD_DEFINITION\ndirective @id on FIELD_DEFINITION\ndirective @withSubscription on OBJECT | INTERFACE\ndirective @secret(field: String!, pred: String) on OBJECT | INTERFACE\ndirective @auth(\n\tpassword: AuthRule\n\tquery: AuthRule,\n\tadd: AuthRule,\n\tupdate: AuthRule,\n\tdelete: AuthRule) on OBJECT | INTERFACE\ndirective @custom(http: CustomHTTP, dql: String) on FIELD_DEFINITION\ndirective @remote on OBJECT | INTERFACE | UNION | INPUT_OBJECT | ENUM\ndirective @cascade(fields: [String]) on FIELD\ndirective @lambda on FIELD_DEFINITION\ndirective @cacheControl(maxAge: Int!) on QUERY\ndirective @generate(\n\tquery: GenerateQueryParams,\n\tmutation: GenerateMutationParams,\n\tsubscription: Boolean) on OBJECT | INTERFACE\n\ninput IntFilter {\n\teq: Int\n\tle: Int\n\tlt: Int\n\tge: Int\n\tgt: Int\n\tbetween: IntRange\n}\n\ninput Int64Filter {\n\teq: Int64\n\tle: Int64\n\tlt: Int64\n\tge: Int64\n\tgt: Int64\n\tbetween: Int64Range\n}\n\ninput FloatFilter {\n\teq: Float\n\tle: Float\n\tlt: Float\n\tge: Float\n\tgt: Float\n\tbetween: FloatRange\n}\n\ninput DateTimeFilter {\n\teq: DateTime\n\tle: DateTime\n\tlt: DateTime\n\tge: DateTime\n\tgt: DateTime\n\tbetween: DateTimeRange\n}\n\ninput StringTermFilter {\n\tallofterms: String\n\tanyofterms: String\n}\n\ninput StringRegExpFilter {\n\tregexp: String\n}\n\ninput StringFullTextFilter {\n\talloftext: String\n\tanyoftext: String\n}\n\ninput StringExactFilter {\n\teq: String\n\tin: [String]\n\tle: String\n\tlt: String\n\tge: String\n\tgt: String\n\tbetween: StringRange\n}\n\ninput StringHashFilter {\n\teq: String\n\tin: [String]\n}\n\n#######################\n# Generated Types\n#######################\n\ntype AddTodoPayload {\n\ttodo(filter: TodoFilter, order: TodoOrder, first: Int, offset: Int): [Todo]\n\tnumUids: Int\n}\n\ntype DeleteTodoPayload {\n\ttodo(filter: TodoFilter, order: TodoOrder, first: Int, offset: Int): [Todo]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype TodoAggregateResult {\n\tcount: Int\n\tnameMin: String\n\tnameMax: String\n}\n\ntype UpdateTodoPayload {\n\ttodo(filter: TodoFilter, order: TodoOrder, first: Int, offset: Int): [Todo]\n\tnumUids: Int\n}\n\n#######################\n# Generated Enums\n#######################\n\nenum TodoHasFilter {\n\tname\n}\n\nenum TodoOrderable {\n\tname\n}\n\n#######################\n# Generated Inputs\n#######################\n\ninput AddTodoInput {\n\tname: String!\n}\n\ninput TodoFilter {\n\tid: [ID!]\n\thas: TodoHasFilter\n\tand: [TodoFilter]\n\tor: [TodoFilter]\n\tnot: TodoFilter\n}\n\ninput TodoOrder {\n\tasc: TodoOrderable\n\tdesc: TodoOrderable\n\tthen: TodoOrder\n}\n\ninput TodoPatch {\n\tname: String\n}\n\ninput TodoRef {\n\tid: ID\n\tname: String\n}\n\ninput UpdateTodoInput {\n\tfilter: TodoFilter!\n\tset: TodoPatch\n\tremove: TodoPatch\n}\n\n#######################\n# Generated Query\n#######################\n\ntype Query {\n\tgetTodo(id: ID!): Todo\n\tqueryTodo(filter: TodoFilter, order: TodoOrder, first: Int, offset: Int): [Todo]\n\taggregateTodo(filter: TodoFilter): TodoAggregateResult\n}\n\n#######################\n# Generated Mutations\n#######################\n\ntype Mutation {\n\taddTodo(input: [AddTodoInput!]!): AddTodoPayload\n\tupdateTodo(input: UpdateTodoInput!): UpdateTodoPayload\n\tdeleteTodo(filter: TodoFilter!): DeleteTodoPayload\n}\n\n"
    }
}