# Auto-generated with: [./compose -a 3 -z 1 -r 1 -w --port_offset=0 --expose_ports=false --alpha_volume=./data/backups:/data/backups/ --zero_volume=./data/backups:/data/backups/ --mem= --names=false -O ../systest/backup/multi-tenancy/docker-compose.yml --acl]
#
version: "3.5"
services:
#For acl to non-acl
  # acl setup
  alpha1:
    image: dgraph/dgraph:local
    working_dir: /data/alpha1
    depends_on:
      - zero1
    labels:
      cluster: test
    ports:
    - 8080
    - 9080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../acl/restore/acl-secret
      target: /secret/hmac
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} alpha --telemetry "reports=false; sentry=false;" --my=alpha1:7080 --zero=zero1:5080
      --logtostderr -v=2 --raft "idx=1; group=1;" --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
      --acl "secret-file=/secret/hmac;"
  
  zero1:
    image: dgraph/dgraph:local
    working_dir: /data/zero1
    labels:
      cluster: test
    ports:
    - 5080
    - 6080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --telemetry "reports=false; sentry=false;" --raft "idx=1;" --my=zero1:5080 --logtostderr -v=2 --bindall

  # non-acl setup
  alpha2:
    image: dgraph/dgraph:local
    working_dir: /data/alpha2
    depends_on:
      - zero2
    labels:
      cluster: test
    ports:
    - 8080
    - 9080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} alpha --telemetry "reports=false; sentry=false;" --my=alpha2:7080 --zero=zero2:5080 --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
  
  zero2:
    image: dgraph/dgraph:local
    working_dir: /data/zero2
    labels:
      cluster: test
    ports:
    - 5080
    - 6080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --telemetry "reports=false; sentry=false;" --raft "idx=1;" --my=zero2:5080 --logtostderr -v=2 --bindall

#For non-acl to acl
  # acl setup
  alpha3:
    image: dgraph/dgraph:local
    working_dir: /data/alpha3
    depends_on:
      - zero3
    labels:
      cluster: test
    ports:
    - 8080
    - 9080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../acl/restore/acl-secret
      target: /secret/hmac
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} alpha --telemetry "reports=false; sentry=false;" --my=alpha3:7080 --zero=zero3:5080
      --logtostderr -v=2 --raft "idx=1; group=1;" --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
      --acl "secret-file=/secret/hmac;"
  
  zero3:
    image: dgraph/dgraph:local
    working_dir: /data/zero3
    labels:
      cluster: test
    ports:
    - 5080
    - 6080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --telemetry "reports=false; sentry=false;" --raft "idx=1;" --my=zero3:5080 --logtostderr -v=2 --bindall

  # non-acl setup
  alpha4:
    image: dgraph/dgraph:local
    working_dir: /data/alpha4
    depends_on:
      - zero4
    labels:
      cluster: test
    ports:
    - 8080
    - 9080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} alpha --telemetry "reports=false; sentry=false;" --my=alpha4:7080 --zero=zero4:5080 --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
  
  zero4:
    image: dgraph/dgraph:local
    working_dir: /data/zero4
    labels:
      cluster: test
    ports:
    - 5080
    - 6080
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - data-volume:/data/backups/
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --telemetry "reports=false; sentry=false;" --raft "idx=1;" --my=zero4:5080 --logtostderr -v=2 --bindall
volumes:
  data-volume:
