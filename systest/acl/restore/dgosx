#!/bin/sh -e

# Shell script to help devs working on dgraph on osx

# Recipes
# To start a cluster: cd path/to/dir/within/dgraph/containing/docker-compose-file; dgosx down && dgosx up
# To build an OSX binary: dgosx make # Some tests need this
# To run tests (after starting cluster): cd path/to/tests; dgosx test

# Note, most tests need the cluster found in the 'dgraph' directory. Some tests have their own docker-compose.yml

GIT_ROOT=$(git rev-parse --show-toplevel)
COMMAND="$1";
shift || true

if [ -z "$COMMAND" ]; then
  echo "Usage $0 [up|down|test] (run this in the git repo)"
  exit 1
fi

function buildBinaryForDocker() {
  docker run --rm -v dgraph_gopath:/go -v dgraph_gocache:/root/.cache/go-build -v $GIT_ROOT:/app -w /app/dgraph golang:1.14 go build -o /app/osx-docker-gopath/bin/dgraph
}

case "$COMMAND" in
  up)
    buildBinaryForDocker
    GOPATH=$GIT_ROOT/osx-docker-gopath docker-compose up "$@";;
  down) GOPATH=$GIT_ROOT/osx-docker-gopath docker-compose -p dgraph down "$@";;
  make) make -C $GIT_ROOT "$@";;
  test) PATH="$GIT_ROOT/dgraph:$PATH" go test "$@";;
  image)
    buildBinaryForDocker
    mkdir $GIT_ROOT/linux || true
    cp $GIT_ROOT/osx-docker-gopath/bin/dgraph $GIT_ROOT/linux
    docker build "$@" -f $GIT_ROOT/contrib/Dockerfile $GIT_ROOT;;
esac
