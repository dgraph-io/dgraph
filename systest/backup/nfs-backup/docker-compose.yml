
version: "3.5"
services:
#HA backup cluster
  alpha1:
    image: dgraph-nfs-client
    working_dir: /data/alpha1
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha1
      target: /dgraph-tls
      read_only: true
    command: /bin/bash  /usr/local/bin/rundgraph.sh  alpha1 zero1:5080,zero2:5080,zero3:5080
  alpha2:
    image: dgraph-nfs-client
    working_dir: /data/alpha2
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha2
      target: /dgraph-tls
      read_only: true

    command: /bin/bash  /usr/local/bin/rundgraph.sh alpha2 zero1:5080,zero2:5080,zero3:5080
  alpha3:
    image: dgraph-nfs-client
    privileged: true
    working_dir: /data/alpha3
    links:
      - "nfs:nfs"
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha3
      target: /dgraph-tls
      read_only: true
    command: /bin/bash  /usr/local/bin/rundgraph.sh alpha3 zero1:5080,zero2:5080,zero3:5080
  zero1:
    image: dgraph/dgraph:local
    working_dir: /data/zero1
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero1
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero1:5080 --replicas=3 --logtostderr -v=2 --bindall
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero1.crt; client-key=/dgraph-tls/client.zero1.key;"

  
  zero2:
    image: dgraph/dgraph:local
    working_dir: /data/zero2
    depends_on:
      - zero1
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero2
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=2;" --my=zero2:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero1:5080
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero2.crt; client-key=/dgraph-tls/client.zero2.key;"

  zero3:
    image: dgraph/dgraph:local
    working_dir: /data/zero3
    depends_on:
      - zero2
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero3
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=3;" --my=zero3:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero1:5080
        --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero3.crt; client-key=/dgraph-tls/client.zero3.key;"

#HA restore cluster
  alpha4:
    image: dgraph-nfs-client
    working_dir: /data/alpha4
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha4
      target: /dgraph-tls
      read_only: true
    command: /bin/bash  /usr/local/bin/rundgraph.sh  alpha4 zero4:5080,zero5:5080,zero6:5080
  alpha5:
    image: dgraph-nfs-client
    working_dir: /data/alpha5
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha5
      target: /dgraph-tls
      read_only: true

    command: /bin/bash  /usr/local/bin/rundgraph.sh alpha5  zero4:5080,zero5:5080,zero6:5080
  alpha6:
    image: dgraph-nfs-client
    privileged: true
    working_dir: /data/alpha6
    links:
      - "nfs:nfs"
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha6
      target: /dgraph-tls
      read_only: true
    command: /bin/bash  /usr/local/bin/rundgraph.sh alpha6  zero4:5080,zero5:5080,zero6:5080
  zero4:
    image: dgraph/dgraph:local
    working_dir: /data/zero4
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero4
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero4:5080 --replicas=3 --logtostderr -v=2 --bindall
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero4.crt; client-key=/dgraph-tls/client.zero4.key;"

  
  zero5:
    image: dgraph/dgraph:local
    working_dir: /data/zero5
    depends_on:
      - zero4
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
      - type: bind
        source: ../../../tlstest/mtls_internal/tls/zero5
        target: /dgraph-tls
        read_only: true
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=2;" --my=zero5:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero4:5080
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero5.crt; client-key=/dgraph-tls/client.zero5.key;"

  zero6:
    image: dgraph/dgraph:local
    working_dir: /data/zero3
    depends_on:
      - zero5
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
      - type: bind
        source: ../../../tlstest/mtls_internal/tls/zero6
        target: /dgraph-tls
        read_only: true
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=3;" --my=zero6:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero4:5080
        --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero6.crt; client-key=/dgraph-tls/client.zero6.key;"

#non HA cluster backup cluster
  zero7:
    image: dgraph/dgraph:local
    working_dir: /data/zero7
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero7
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero7:5080 --replicas=1 --logtostderr -v=2 --bindall
          --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero7.crt; client-key=/dgraph-tls/client.zero7.key;"

  alpha7:
    image: dgraph-nfs-client
    working_dir: /data/alpha7
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha7
      target: /dgraph-tls
      read_only: true

    command: /bin/bash  /usr/local/bin/rundgraph.sh alpha7 zero7:5080

#non HA restore cluster

  zero8:
    image: dgraph/dgraph:local
    working_dir: /data/zero8
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero8
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero8:5080 --replicas=1 --logtostderr -v=2 --bindall
        --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero8.crt; client-key=/dgraph-tls/client.zero8.key;"

  alpha8:
    image: dgraph-nfs-client
    working_dir: /data/alpha8
    links:
      - "nfs:nfs"
    privileged: true
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha8
      target: /dgraph-tls
      read_only: true

    command: /bin/bash  /usr/local/bin/rundgraph.sh alpha8 zero8:5080

  nfs:
    image: nfs-docker-server:latest
    privileged: true
    command: /dgraph-data/backup
volumes: {}
