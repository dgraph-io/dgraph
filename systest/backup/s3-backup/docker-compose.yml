# Auto-generated with: [./compose -a 3 -z 1 -r 1 -w --port_offset=0 --expose_ports=false --alpha_volume=./data/backups:/data/backups/ --zero_volume=./data/backups:/data/backups/ --mem= --names=false -O ../systest/backup/filesystem/docker-compose.yml]
#
version: "3.5"
services:
  alpha1:
    image: dgraph/dgraph:local
    working_dir: /data/alpha1
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha1
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha1:7080 --zero=zero1:5080,zero2:5080,zero3:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha1.crt; client-key=/dgraph-tls/client.alpha1.key;" 
  alpha2:
    image: dgraph/dgraph:local
    working_dir: /data/alpha2
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha2
      target: /dgraph-tls
      read_only: true

    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha2:7080 --zero=zero1:5080,zero2:5080,zero3:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha2.crt; client-key=/dgraph-tls/client.alpha2.key;"
  alpha3:
    image: dgraph/dgraph:local
    working_dir: /data/alpha3
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha3
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha3:7080 --zero=zero1:5080,zero2:5080,zero3:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha3.crt; client-key=/dgraph-tls/client.alpha3.key;"
  zero1:
    image: dgraph/dgraph:local
    working_dir: /data/zero1
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero1
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero1:5080 --replicas=3 --logtostderr -v=2 --bindall
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero1.crt; client-key=/dgraph-tls/client.zero1.key;"

  
  zero2:
    image: dgraph/dgraph:local
    working_dir: /data/zero2
    depends_on:
      - zero1
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero2
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=2;" --my=zero2:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero1:5080
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero2.crt; client-key=/dgraph-tls/client.zero2.key;"

  zero3:
    image: dgraph/dgraph:local
    working_dir: /data/zero3
    depends_on:
      - zero2
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero3
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=3;" --my=zero3:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero1:5080
        --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero3.crt; client-key=/dgraph-tls/client.zero3.key;"

#HA restore cluster


  alpha4:
    image: dgraph/dgraph:local
    working_dir: /data/alpha4
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha4
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha4:7080 --zero=zero4:5080,zero5:5080,zero6:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha4.crt; client-key=/dgraph-tls/client.alpha4.key;"
  alpha5:
    image: dgraph/dgraph:local
    working_dir: /data/alpha5
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha5
      target: /dgraph-tls
      read_only: true

    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha5:7080 --zero=zero4:5080,zero5:5080,zero6:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha5.crt; client-key=/dgraph-tls/client.alpha5.key;"
  alpha6:
    image: dgraph/dgraph:local
    working_dir: /data/alpha6
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha6
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha6:7080 --zero=zero4:5080,zero5:5080,zero6:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha6.crt; client-key=/dgraph-tls/client.alpha6.key;"
  zero4:
    image: dgraph/dgraph:local
    working_dir: /data/zero4
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero4
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero4:5080 --replicas=3 --logtostderr -v=2 --bindall
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero4.crt; client-key=/dgraph-tls/client.zero4.key;"

  
  zero5:
    image: dgraph/dgraph:local
    working_dir: /data/zero5
    depends_on:
      - zero4
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
      - type: bind
        source: ../../../tlstest/mtls_internal/tls/zero5
        target: /dgraph-tls
        read_only: true
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=2;" --my=zero5:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero4:5080
            --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero5.crt; client-key=/dgraph-tls/client.zero5.key;"

  zero6:
    image: dgraph/dgraph:local
    working_dir: /data/zero3
    depends_on:
      - zero5
    ports:
      - 5080
      - 6080
    labels:
      cluster: test
      service: zero
    volumes:
      - type: bind
        source: ../../../tlstest/mtls_internal/tls/zero6
        target: /dgraph-tls
        read_only: true
      - type: bind
        source: $GOPATH/bin
        target: /gobin
        read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=3;" --my=zero6:5080 --replicas=3 --logtostderr -v=2 --bindall  --peer=zero4:5080
        --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero6.crt; client-key=/dgraph-tls/client.zero6.key;"

#non HA cluster

  zero7:
    image: dgraph/dgraph:local
    working_dir: /data/zero7
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero7
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero7:5080 --replicas=1 --logtostderr -v=2 --bindall
          --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero7.crt; client-key=/dgraph-tls/client.zero7.key;"

  alpha7:
    image: dgraph/dgraph:local
    working_dir: /data/alpha7
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha7
      target: /dgraph-tls
      read_only: true

    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha7:7080 --zero=zero7:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha7.crt; client-key=/dgraph-tls/client.alpha7.key;"

#non HA cluster

  zero8:
    image: dgraph/dgraph:local
    working_dir: /data/zero8
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: bind
      source: ../../../tlstest/mtls_internal/tls/zero8
      target: /dgraph-tls
      read_only: true
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} zero --raft "idx=1;" --my=zero8:5080 --replicas=1 --logtostderr -v=2 --bindall
        --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.zero8.crt; client-key=/dgraph-tls/client.zero8.key;"

  alpha8:
    image: dgraph/dgraph:local
    working_dir: /data/alpha8
    labels:
      cluster: test
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true

    - type: bind
      source: ../../../tlstest/mtls_internal/tls/alpha8
      target: /dgraph-tls
      read_only: true

    command: /gobin/dgraph  ${COVERAGE_OUTPUT}  alpha --my=alpha8:7080 --zero=zero8:5080 --logtostderr -v=2  --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"  --tls "ca-cert=/dgraph-tls/ca.crt; server-cert=/dgraph-tls/node.crt; server-key=/dgraph-tls/node.key; internal-port=true; client-cert=/dgraph-tls/client.alpha8.crt; client-key=/dgraph-tls/client.alpha8.key;"
volumes: {}
