# Based on systest/export/docker-compose.yml but uses minio/minio:RELEASE.2020-11-13T20-10-18Z-arm64
#
version: "3.5"
services:
  alpha1:
    image: dgraph/dgraph:local
    working_dir: /data/alpha1
    labels:
      cluster: test
    env_file:
    - export.env
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: volume
      source: data
      target: /data
      read_only: false
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} alpha --my=alpha1:7080 --zero=zero1:5080 --logtostderr
      -v=2 
      --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
  alpha2:
    image: dgraph/dgraph:local
    working_dir: /data/alpha2
    labels:
      cluster: test
    env_file:
    - export.env
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: volume
      source: data
      target: /data
      read_only: false
    command: /gobin/dgraph  ${COVERAGE_OUTPUT} alpha --my=alpha2:7080 --zero=zero1:5080 --logtostderr
      -v=2 
      --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
  alpha3:
    image: dgraph/dgraph:local
    working_dir: /data/alpha3
    labels:
      cluster: test
    env_file:
    - export.env
    ports:
    - "8080"
    - "9080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    - type: volume
      source: data
      target: /data
      read_only: false
    command: /gobin/dgraph ${COVERAGE_OUTPUT} alpha --my=alpha3:7080 --zero=zero1:5080 --logtostderr
      -v=2 
      --security "whitelist=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16;"
  minio:
    image: minio/minio:RELEASE.2020-11-13T20-10-18Z-arm64
    env_file:
    - export.env
    ports:
    - "9001"
    command: minio server /data/minio --address :9001
  zero1:
    image: dgraph/dgraph:local
    working_dir: /data/zero1
    labels:
      cluster: test
    ports:
    - "5080"
    - "6080"
    volumes:
    - type: bind
      source: $GOPATH/bin
      target: /gobin
      read_only: true
    command: /gobin/dgraph ${COVERAGE_OUTPUT} zero --raft="idx=1;" --my=zero1:5080 --replicas=3 --logtostderr
      -v=2 --bindall
volumes:
  data: {}
